plugins {
	id "c"
	id "de.protos.etrice-c"
	id "de.protos.source-publish"
}

apply from: "$rootDir/gradle/publish.gradle"

dependencies {
	generator project(':plugins:org.eclipse.etrice.generator.c')
}

modelSet {
	room {
		option 'msc_instr'
	}
}

model {
	components {
		etrice_modellib_c(NativeLibrarySpec) {
			sources.c {
				builtBy generateRoom
				source {
					srcDirs = [modelSet.room.genDir]
					include '**/*.c'
				}
				exportedHeaders {
					srcDirs = [modelSet.room.genDir]
				}
				lib project: ':runtime:org.eclipse.etrice.runtime.c', library: 'etrice_runtime_c', linkage: 'api'
			}
			binaries {
				withType(SharedLibraryBinarySpec) { buildable = false }
				all { cCompiler.args '-g3', '-std=c99' }
			}
		}
	}
}

task syncGenDir(type: Sync, dependsOn: generate) {
	from modelSet.room.genDir
	into 'src-gen'
}

task zipModellib(type: Zip, dependsOn: syncGenDir) {
	archiveBaseName = project.name
	archiveVersion = project.version
	destinationDirectory = layout.buildDirectory
	from('model') {
		exclude '**/diagrams/'
	}
	from(projectDir) {
		include 'src-gen/**'
	}
	includeEmptyDirs false
}
build.dependsOn zipModellib

zipSource {
	from(modelSet.room.genDir) {
		into 'src'
	}
}

publishing {
    publications {
        etrice(MavenPublication) {
        	from components.adhoc
            artifact zipModellib
        }
    }
	repositories publishRepos
}