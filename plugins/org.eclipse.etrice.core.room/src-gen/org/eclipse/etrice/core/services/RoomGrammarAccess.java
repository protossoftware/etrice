/*
 * generated by Xtext
 */
package org.eclipse.etrice.core.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.etrice.core.fsm.services.FSMGrammarAccess;
import org.eclipse.etrice.core.common.services.BaseGrammarAccess;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class RoomGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class RoomModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.RoomModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRoomModelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameFQNParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDocuAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDocuDocumentationParserRuleCall_2_0 = (RuleCall)cDocuAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAnnotationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_4_0 = (RuleCall)cAnnotationsAssignment_4.eContents().get(0);
		private final Assignment cImportsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cImportsImportParserRuleCall_5_0 = (RuleCall)cImportsAssignment_5.eContents().get(0);
		private final Assignment cAnnotationTypesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAnnotationTypesAnnotationTypeParserRuleCall_6_0 = (RuleCall)cAnnotationTypesAssignment_6.eContents().get(0);
		private final Assignment cRoomClassesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cRoomClassesRoomClassParserRuleCall_7_0 = (RuleCall)cRoomClassesAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//RoomModel:
		//	'RoomModel' name=FQN docu=Documentation? '{'
		//	annotations+=Annotation*
		//	imports+=Import*
		//	annotationTypes+=AnnotationType*
		//	roomClasses+=RoomClass*
		//	'}';
		@Override public ParserRule getRule() { return rule; }

		//'RoomModel' name=FQN docu=Documentation? '{' annotations+=Annotation* imports+=Import* annotationTypes+=AnnotationType*
		//roomClasses+=RoomClass* '}'
		public Group getGroup() { return cGroup; }

		//'RoomModel'
		public Keyword getRoomModelKeyword_0() { return cRoomModelKeyword_0; }

		//name=FQN
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//FQN
		public RuleCall getNameFQNParserRuleCall_1_0() { return cNameFQNParserRuleCall_1_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_2() { return cDocuAssignment_2; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_2_0() { return cDocuDocumentationParserRuleCall_2_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_4() { return cAnnotationsAssignment_4; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_4_0() { return cAnnotationsAnnotationParserRuleCall_4_0; }

		//imports+=Import*
		public Assignment getImportsAssignment_5() { return cImportsAssignment_5; }

		//Import
		public RuleCall getImportsImportParserRuleCall_5_0() { return cImportsImportParserRuleCall_5_0; }

		//annotationTypes+=AnnotationType*
		public Assignment getAnnotationTypesAssignment_6() { return cAnnotationTypesAssignment_6; }

		//AnnotationType
		public RuleCall getAnnotationTypesAnnotationTypeParserRuleCall_6_0() { return cAnnotationTypesAnnotationTypeParserRuleCall_6_0; }

		//roomClasses+=RoomClass*
		public Assignment getRoomClassesAssignment_7() { return cRoomClassesAssignment_7; }

		//RoomClass
		public RuleCall getRoomClassesRoomClassParserRuleCall_7_0() { return cRoomClassesRoomClassParserRuleCall_7_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class RoomClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.RoomClass");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDataTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGeneralProtocolClassParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cStructureClassParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//RoomClass:
		//	DataType | GeneralProtocolClass | StructureClass;
		@Override public ParserRule getRule() { return rule; }

		//DataType | GeneralProtocolClass | StructureClass
		public Alternatives getAlternatives() { return cAlternatives; }

		//DataType
		public RuleCall getDataTypeParserRuleCall_0() { return cDataTypeParserRuleCall_0; }

		//GeneralProtocolClass
		public RuleCall getGeneralProtocolClassParserRuleCall_1() { return cGeneralProtocolClassParserRuleCall_1; }

		//StructureClass
		public RuleCall getStructureClassParserRuleCall_2() { return cStructureClassParserRuleCall_2; }
	}

	public class StructureClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.StructureClass");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActorContainerClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLogicalSystemParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//StructureClass:
		//	ActorContainerClass | LogicalSystem;
		@Override public ParserRule getRule() { return rule; }

		//ActorContainerClass | LogicalSystem
		public Alternatives getAlternatives() { return cAlternatives; }

		//ActorContainerClass
		public RuleCall getActorContainerClassParserRuleCall_0() { return cActorContainerClassParserRuleCall_0; }

		//LogicalSystem
		public RuleCall getLogicalSystemParserRuleCall_1() { return cLogicalSystemParserRuleCall_1; }
	}

	public class ActorContainerClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.ActorContainerClass");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActorClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSubSystemClassParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ActorContainerClass:
		//	ActorClass | SubSystemClass;
		@Override public ParserRule getRule() { return rule; }

		//ActorClass | SubSystemClass
		public Alternatives getAlternatives() { return cAlternatives; }

		//ActorClass
		public RuleCall getActorClassParserRuleCall_0() { return cActorClassParserRuleCall_0; }

		//SubSystemClass
		public RuleCall getSubSystemClassParserRuleCall_1() { return cSubSystemClassParserRuleCall_1; }
	}

	public class VarDeclElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.VarDecl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cRefTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cRefTypeRefableTypeParserRuleCall_2_0 = (RuleCall)cRefTypeAssignment_2.eContents().get(0);
		private final Assignment cVarargsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cVarargsVarargsKeyword_3_0 = (Keyword)cVarargsAssignment_3.eContents().get(0);
		
		//// **************************************************************
		//// data class
		//VarDecl:
		//	name=ID ':' refType=RefableType varargs?='varargs'?;
		@Override public ParserRule getRule() { return rule; }

		//name=ID ':' refType=RefableType varargs?='varargs'?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//refType=RefableType
		public Assignment getRefTypeAssignment_2() { return cRefTypeAssignment_2; }

		//RefableType
		public RuleCall getRefTypeRefableTypeParserRuleCall_2_0() { return cRefTypeRefableTypeParserRuleCall_2_0; }

		//varargs?='varargs'?
		public Assignment getVarargsAssignment_3() { return cVarargsAssignment_3; }

		//'varargs'
		public Keyword getVarargsVarargsKeyword_3_0() { return cVarargsVarargsKeyword_3_0; }
	}

	public class MessageDataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.MessageData");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cDeprecatedNameAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cDeprecatedNameIDTerminalRuleCall_0_0_0 = (RuleCall)cDeprecatedNameAssignment_0_0.eContents().get(0);
		private final Keyword cColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cRefTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRefTypeRefableTypeParserRuleCall_1_0 = (RuleCall)cRefTypeAssignment_1.eContents().get(0);
		
		//MessageData:
		//	(deprecatedName=ID ':')? refType=RefableType;
		@Override public ParserRule getRule() { return rule; }

		//(deprecatedName=ID ':')? refType=RefableType
		public Group getGroup() { return cGroup; }

		//(deprecatedName=ID ':')?
		public Group getGroup_0() { return cGroup_0; }

		//deprecatedName=ID
		public Assignment getDeprecatedNameAssignment_0_0() { return cDeprecatedNameAssignment_0_0; }

		//ID
		public RuleCall getDeprecatedNameIDTerminalRuleCall_0_0_0() { return cDeprecatedNameIDTerminalRuleCall_0_0_0; }

		//':'
		public Keyword getColonKeyword_0_1() { return cColonKeyword_0_1; }

		//refType=RefableType
		public Assignment getRefTypeAssignment_1() { return cRefTypeAssignment_1; }

		//RefableType
		public RuleCall getRefTypeRefableTypeParserRuleCall_1_0() { return cRefTypeRefableTypeParserRuleCall_1_0; }
	}

	public class RefableTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.RefableType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cTypeDataTypeCrossReference_0_0 = (CrossReference)cTypeAssignment_0.eContents().get(0);
		private final RuleCall cTypeDataTypeFQNParserRuleCall_0_0_1 = (RuleCall)cTypeDataTypeCrossReference_0_0.eContents().get(1);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cRefRefKeyword_1_0 = (Keyword)cRefAssignment_1.eContents().get(0);
		
		//RefableType:
		//	type=[DataType|FQN] ref?='ref'?;
		@Override public ParserRule getRule() { return rule; }

		//type=[DataType|FQN] ref?='ref'?
		public Group getGroup() { return cGroup; }

		//type=[DataType|FQN]
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//[DataType|FQN]
		public CrossReference getTypeDataTypeCrossReference_0_0() { return cTypeDataTypeCrossReference_0_0; }

		//FQN
		public RuleCall getTypeDataTypeFQNParserRuleCall_0_0_1() { return cTypeDataTypeFQNParserRuleCall_0_0_1; }

		//ref?='ref'?
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }

		//'ref'
		public Keyword getRefRefKeyword_1_0() { return cRefRefKeyword_1_0; }
	}

	public class DataTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.DataType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPrimitiveTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cEnumerationTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cComplexTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//DataType:
		//	PrimitiveType | EnumerationType | ComplexType;
		@Override public ParserRule getRule() { return rule; }

		//PrimitiveType | EnumerationType | ComplexType
		public Alternatives getAlternatives() { return cAlternatives; }

		//PrimitiveType
		public RuleCall getPrimitiveTypeParserRuleCall_0() { return cPrimitiveTypeParserRuleCall_0; }

		//EnumerationType
		public RuleCall getEnumerationTypeParserRuleCall_1() { return cEnumerationTypeParserRuleCall_1; }

		//ComplexType
		public RuleCall getComplexTypeParserRuleCall_2() { return cComplexTypeParserRuleCall_2; }
	}

	public class ComplexTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.ComplexType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDataClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cExternalTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ComplexType:
		//	DataClass | ExternalType;
		@Override public ParserRule getRule() { return rule; }

		//DataClass | ExternalType
		public Alternatives getAlternatives() { return cAlternatives; }

		//DataClass
		public RuleCall getDataClassParserRuleCall_0() { return cDataClassParserRuleCall_0; }

		//ExternalType
		public RuleCall getExternalTypeParserRuleCall_1() { return cExternalTypeParserRuleCall_1; }
	}

	public class PrimitiveTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.PrimitiveType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPrimitiveTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeLiteralTypeEnumRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTargetNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTargetNameSTRINGTerminalRuleCall_5_0 = (RuleCall)cTargetNameAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cLeftParenthesisKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cCastNameAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cCastNameFQNParserRuleCall_6_1_0 = (RuleCall)cCastNameAssignment_6_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Keyword cDefaultKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cDefaultValueLiteralAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDefaultValueLiteralSTRINGTerminalRuleCall_8_0 = (RuleCall)cDefaultValueLiteralAssignment_8.eContents().get(0);
		private final Assignment cDocuAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cDocuDocumentationParserRuleCall_9_0 = (RuleCall)cDocuAssignment_9.eContents().get(0);
		
		//PrimitiveType:
		//	'PrimitiveType' name=ID ':' type=LiteralType '->' targetName=STRING ('(' castName=FQN ')')? 'default'
		//	defaultValueLiteral=STRING docu=Documentation?;
		@Override public ParserRule getRule() { return rule; }

		//'PrimitiveType' name=ID ':' type=LiteralType '->' targetName=STRING ('(' castName=FQN ')')? 'default'
		//defaultValueLiteral=STRING docu=Documentation?
		public Group getGroup() { return cGroup; }

		//'PrimitiveType'
		public Keyword getPrimitiveTypeKeyword_0() { return cPrimitiveTypeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=LiteralType
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//LiteralType
		public RuleCall getTypeLiteralTypeEnumRuleCall_3_0() { return cTypeLiteralTypeEnumRuleCall_3_0; }

		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_4() { return cHyphenMinusGreaterThanSignKeyword_4; }

		//targetName=STRING
		public Assignment getTargetNameAssignment_5() { return cTargetNameAssignment_5; }

		//STRING
		public RuleCall getTargetNameSTRINGTerminalRuleCall_5_0() { return cTargetNameSTRINGTerminalRuleCall_5_0; }

		//('(' castName=FQN ')')?
		public Group getGroup_6() { return cGroup_6; }

		//'('
		public Keyword getLeftParenthesisKeyword_6_0() { return cLeftParenthesisKeyword_6_0; }

		//castName=FQN
		public Assignment getCastNameAssignment_6_1() { return cCastNameAssignment_6_1; }

		//FQN
		public RuleCall getCastNameFQNParserRuleCall_6_1_0() { return cCastNameFQNParserRuleCall_6_1_0; }

		//')'
		public Keyword getRightParenthesisKeyword_6_2() { return cRightParenthesisKeyword_6_2; }

		//'default'
		public Keyword getDefaultKeyword_7() { return cDefaultKeyword_7; }

		//defaultValueLiteral=STRING
		public Assignment getDefaultValueLiteralAssignment_8() { return cDefaultValueLiteralAssignment_8; }

		//STRING
		public RuleCall getDefaultValueLiteralSTRINGTerminalRuleCall_8_0() { return cDefaultValueLiteralSTRINGTerminalRuleCall_8_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_9() { return cDocuAssignment_9; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_9_0() { return cDocuDocumentationParserRuleCall_9_0; }
	}

	public class EnumerationTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.EnumerationType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnumerationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDocuAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDocuDocumentationParserRuleCall_2_0 = (RuleCall)cDocuAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cOfKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPrimitiveTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cPrimitiveTypePrimitiveTypeCrossReference_3_1_0 = (CrossReference)cPrimitiveTypeAssignment_3_1.eContents().get(0);
		private final RuleCall cPrimitiveTypePrimitiveTypeFQNParserRuleCall_3_1_0_1 = (RuleCall)cPrimitiveTypePrimitiveTypeCrossReference_3_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cLiteralsAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cLiteralsEnumLiteralParserRuleCall_5_0_0 = (RuleCall)cLiteralsAssignment_5_0.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Keyword cCommaKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cLiteralsAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cLiteralsEnumLiteralParserRuleCall_5_1_1_0 = (RuleCall)cLiteralsAssignment_5_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//EnumerationType:
		//	'Enumeration' name=ID docu=Documentation? ('of' primitiveType=[PrimitiveType|FQN])? '{' (literals+=EnumLiteral (','
		//	literals+=EnumLiteral)*)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }

		//'Enumeration' name=ID docu=Documentation? ('of' primitiveType=[PrimitiveType|FQN])? '{' (literals+=EnumLiteral (','
		//literals+=EnumLiteral)*)? '}'
		public Group getGroup() { return cGroup; }

		//'Enumeration'
		public Keyword getEnumerationKeyword_0() { return cEnumerationKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_2() { return cDocuAssignment_2; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_2_0() { return cDocuDocumentationParserRuleCall_2_0; }

		//('of' primitiveType=[PrimitiveType|FQN])?
		public Group getGroup_3() { return cGroup_3; }

		//'of'
		public Keyword getOfKeyword_3_0() { return cOfKeyword_3_0; }

		//primitiveType=[PrimitiveType|FQN]
		public Assignment getPrimitiveTypeAssignment_3_1() { return cPrimitiveTypeAssignment_3_1; }

		//[PrimitiveType|FQN]
		public CrossReference getPrimitiveTypePrimitiveTypeCrossReference_3_1_0() { return cPrimitiveTypePrimitiveTypeCrossReference_3_1_0; }

		//FQN
		public RuleCall getPrimitiveTypePrimitiveTypeFQNParserRuleCall_3_1_0_1() { return cPrimitiveTypePrimitiveTypeFQNParserRuleCall_3_1_0_1; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//(literals+=EnumLiteral (',' literals+=EnumLiteral)*)?
		public Group getGroup_5() { return cGroup_5; }

		//literals+=EnumLiteral
		public Assignment getLiteralsAssignment_5_0() { return cLiteralsAssignment_5_0; }

		//EnumLiteral
		public RuleCall getLiteralsEnumLiteralParserRuleCall_5_0_0() { return cLiteralsEnumLiteralParserRuleCall_5_0_0; }

		//(',' literals+=EnumLiteral)*
		public Group getGroup_5_1() { return cGroup_5_1; }

		//','
		public Keyword getCommaKeyword_5_1_0() { return cCommaKeyword_5_1_0; }

		//literals+=EnumLiteral
		public Assignment getLiteralsAssignment_5_1_1() { return cLiteralsAssignment_5_1_1; }

		//EnumLiteral
		public RuleCall getLiteralsEnumLiteralParserRuleCall_5_1_1_0() { return cLiteralsEnumLiteralParserRuleCall_5_1_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class EnumLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.EnumLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cLiteralAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLiteralIntLiteralParserRuleCall_1_1_0 = (RuleCall)cLiteralAssignment_1_1.eContents().get(0);
		
		//EnumLiteral:
		//	name=ID ('=' literal=IntLiteral)?;
		@Override public ParserRule getRule() { return rule; }

		//name=ID ('=' literal=IntLiteral)?
		public Group getGroup() { return cGroup; }

		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }

		//('=' literal=IntLiteral)?
		public Group getGroup_1() { return cGroup_1; }

		//'='
		public Keyword getEqualsSignKeyword_1_0() { return cEqualsSignKeyword_1_0; }

		//literal=IntLiteral
		public Assignment getLiteralAssignment_1_1() { return cLiteralAssignment_1_1; }

		//IntLiteral
		public RuleCall getLiteralIntLiteralParserRuleCall_1_1_0() { return cLiteralIntLiteralParserRuleCall_1_1_0; }
	}

	public class ExternalTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.ExternalType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExternalTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTargetNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTargetNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cTargetNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDefaultKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDefaultValueLiteralAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDefaultValueLiteralSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cDefaultValueLiteralAssignment_4_1.eContents().get(0);
		private final Assignment cDocuAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDocuDocumentationParserRuleCall_5_0 = (RuleCall)cDocuAssignment_5.eContents().get(0);
		
		//ExternalType:
		//	'ExternalType' name=ID '->' targetName=STRING ('default' defaultValueLiteral=STRING)? docu=Documentation?;
		@Override public ParserRule getRule() { return rule; }

		//'ExternalType' name=ID '->' targetName=STRING ('default' defaultValueLiteral=STRING)? docu=Documentation?
		public Group getGroup() { return cGroup; }

		//'ExternalType'
		public Keyword getExternalTypeKeyword_0() { return cExternalTypeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_2() { return cHyphenMinusGreaterThanSignKeyword_2; }

		//targetName=STRING
		public Assignment getTargetNameAssignment_3() { return cTargetNameAssignment_3; }

		//STRING
		public RuleCall getTargetNameSTRINGTerminalRuleCall_3_0() { return cTargetNameSTRINGTerminalRuleCall_3_0; }

		//('default' defaultValueLiteral=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//'default'
		public Keyword getDefaultKeyword_4_0() { return cDefaultKeyword_4_0; }

		//defaultValueLiteral=STRING
		public Assignment getDefaultValueLiteralAssignment_4_1() { return cDefaultValueLiteralAssignment_4_1; }

		//STRING
		public RuleCall getDefaultValueLiteralSTRINGTerminalRuleCall_4_1_0() { return cDefaultValueLiteralSTRINGTerminalRuleCall_4_1_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_5() { return cDocuAssignment_5; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_5_0() { return cDocuDocumentationParserRuleCall_5_0; }
	}

	public class DataClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.DataClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDataClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDocuAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDocuDocumentationParserRuleCall_2_0 = (RuleCall)cDocuAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cExtendsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cBaseAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cBaseDataClassCrossReference_3_1_0 = (CrossReference)cBaseAssignment_3_1.eContents().get(0);
		private final RuleCall cBaseDataClassFQNParserRuleCall_3_1_0_1 = (RuleCall)cBaseDataClassCrossReference_3_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAnnotationsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_5_0 = (RuleCall)cAnnotationsAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cUsercode1Keyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cUserCode1Assignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cUserCode1DetailCodeParserRuleCall_6_1_0 = (RuleCall)cUserCode1Assignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cUsercode2Keyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cUserCode2Assignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cUserCode2DetailCodeParserRuleCall_7_1_0 = (RuleCall)cUserCode2Assignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cUsercode3Keyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cUserCode3Assignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cUserCode3DetailCodeParserRuleCall_8_1_0 = (RuleCall)cUserCode3Assignment_8_1.eContents().get(0);
		private final Alternatives cAlternatives_9 = (Alternatives)cGroup.eContents().get(9);
		private final Assignment cOperationsAssignment_9_0 = (Assignment)cAlternatives_9.eContents().get(0);
		private final RuleCall cOperationsStandardOperationParserRuleCall_9_0_0 = (RuleCall)cOperationsAssignment_9_0.eContents().get(0);
		private final Assignment cStructorsAssignment_9_1 = (Assignment)cAlternatives_9.eContents().get(1);
		private final RuleCall cStructorsClassStructorParserRuleCall_9_1_0 = (RuleCall)cStructorsAssignment_9_1.eContents().get(0);
		private final Assignment cAttributesAssignment_9_2 = (Assignment)cAlternatives_9.eContents().get(2);
		private final RuleCall cAttributesAttributeParserRuleCall_9_2_0 = (RuleCall)cAttributesAssignment_9_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//// TODOHRR: define detail level language?
		//DataClass:
		//	'DataClass' name=ID docu=Documentation? ('extends' base=[DataClass|FQN])? '{'
		//	annotations+=Annotation* ('usercode1' userCode1=DetailCode)? ('usercode2' userCode2=DetailCode)? ('usercode3'
		//	userCode3=DetailCode)? (operations+=StandardOperation | structors+=ClassStructor | attributes+=Attribute)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }

		//'DataClass' name=ID docu=Documentation? ('extends' base=[DataClass|FQN])? '{' annotations+=Annotation* ('usercode1'
		//userCode1=DetailCode)? ('usercode2' userCode2=DetailCode)? ('usercode3' userCode3=DetailCode)?
		//(operations+=StandardOperation | structors+=ClassStructor | attributes+=Attribute)* '}'
		public Group getGroup() { return cGroup; }

		//'DataClass'
		public Keyword getDataClassKeyword_0() { return cDataClassKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_2() { return cDocuAssignment_2; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_2_0() { return cDocuDocumentationParserRuleCall_2_0; }

		//('extends' base=[DataClass|FQN])?
		public Group getGroup_3() { return cGroup_3; }

		//'extends'
		public Keyword getExtendsKeyword_3_0() { return cExtendsKeyword_3_0; }

		//base=[DataClass|FQN]
		public Assignment getBaseAssignment_3_1() { return cBaseAssignment_3_1; }

		//[DataClass|FQN]
		public CrossReference getBaseDataClassCrossReference_3_1_0() { return cBaseDataClassCrossReference_3_1_0; }

		//FQN
		public RuleCall getBaseDataClassFQNParserRuleCall_3_1_0_1() { return cBaseDataClassFQNParserRuleCall_3_1_0_1; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_5() { return cAnnotationsAssignment_5; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_5_0() { return cAnnotationsAnnotationParserRuleCall_5_0; }

		//('usercode1' userCode1=DetailCode)?
		public Group getGroup_6() { return cGroup_6; }

		//'usercode1'
		public Keyword getUsercode1Keyword_6_0() { return cUsercode1Keyword_6_0; }

		//userCode1=DetailCode
		public Assignment getUserCode1Assignment_6_1() { return cUserCode1Assignment_6_1; }

		//DetailCode
		public RuleCall getUserCode1DetailCodeParserRuleCall_6_1_0() { return cUserCode1DetailCodeParserRuleCall_6_1_0; }

		//('usercode2' userCode2=DetailCode)?
		public Group getGroup_7() { return cGroup_7; }

		//'usercode2'
		public Keyword getUsercode2Keyword_7_0() { return cUsercode2Keyword_7_0; }

		//userCode2=DetailCode
		public Assignment getUserCode2Assignment_7_1() { return cUserCode2Assignment_7_1; }

		//DetailCode
		public RuleCall getUserCode2DetailCodeParserRuleCall_7_1_0() { return cUserCode2DetailCodeParserRuleCall_7_1_0; }

		//('usercode3' userCode3=DetailCode)?
		public Group getGroup_8() { return cGroup_8; }

		//'usercode3'
		public Keyword getUsercode3Keyword_8_0() { return cUsercode3Keyword_8_0; }

		//userCode3=DetailCode
		public Assignment getUserCode3Assignment_8_1() { return cUserCode3Assignment_8_1; }

		//DetailCode
		public RuleCall getUserCode3DetailCodeParserRuleCall_8_1_0() { return cUserCode3DetailCodeParserRuleCall_8_1_0; }

		//(operations+=StandardOperation | structors+=ClassStructor | attributes+=Attribute)*
		public Alternatives getAlternatives_9() { return cAlternatives_9; }

		//operations+=StandardOperation
		public Assignment getOperationsAssignment_9_0() { return cOperationsAssignment_9_0; }

		//StandardOperation
		public RuleCall getOperationsStandardOperationParserRuleCall_9_0_0() { return cOperationsStandardOperationParserRuleCall_9_0_0; }

		//structors+=ClassStructor
		public Assignment getStructorsAssignment_9_1() { return cStructorsAssignment_9_1; }

		//ClassStructor
		public RuleCall getStructorsClassStructorParserRuleCall_9_1_0() { return cStructorsClassStructorParserRuleCall_9_1_0; }

		//attributes+=Attribute
		public Assignment getAttributesAssignment_9_2() { return cAttributesAssignment_9_2; }

		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_9_2_0() { return cAttributesAttributeParserRuleCall_9_2_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSizeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cSizeINTTerminalRuleCall_2_1_0 = (RuleCall)cSizeAssignment_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeRefableTypeParserRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cEqualsSignKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cDefaultValueLiteralAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cDefaultValueLiteralSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cDefaultValueLiteralAssignment_5_1.eContents().get(0);
		private final Assignment cDocuAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDocuDocumentationParserRuleCall_6_0 = (RuleCall)cDocuAssignment_6.eContents().get(0);
		
		//Attribute:
		//	'Attribute' name=ID ('[' size=INT ']')? ':' type=RefableType? ('=' defaultValueLiteral=STRING)? docu=Documentation?;
		@Override public ParserRule getRule() { return rule; }

		//'Attribute' name=ID ('[' size=INT ']')? ':' type=RefableType? ('=' defaultValueLiteral=STRING)? docu=Documentation?
		public Group getGroup() { return cGroup; }

		//'Attribute'
		public Keyword getAttributeKeyword_0() { return cAttributeKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//('[' size=INT ']')?
		public Group getGroup_2() { return cGroup_2; }

		//'['
		public Keyword getLeftSquareBracketKeyword_2_0() { return cLeftSquareBracketKeyword_2_0; }

		//size=INT
		public Assignment getSizeAssignment_2_1() { return cSizeAssignment_2_1; }

		//INT
		public RuleCall getSizeINTTerminalRuleCall_2_1_0() { return cSizeINTTerminalRuleCall_2_1_0; }

		//']'
		public Keyword getRightSquareBracketKeyword_2_2() { return cRightSquareBracketKeyword_2_2; }

		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//type=RefableType?
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }

		//RefableType
		public RuleCall getTypeRefableTypeParserRuleCall_4_0() { return cTypeRefableTypeParserRuleCall_4_0; }

		//('=' defaultValueLiteral=STRING)?
		public Group getGroup_5() { return cGroup_5; }

		//'='
		public Keyword getEqualsSignKeyword_5_0() { return cEqualsSignKeyword_5_0; }

		//defaultValueLiteral=STRING
		public Assignment getDefaultValueLiteralAssignment_5_1() { return cDefaultValueLiteralAssignment_5_1; }

		//STRING
		public RuleCall getDefaultValueLiteralSTRINGTerminalRuleCall_5_1_0() { return cDefaultValueLiteralSTRINGTerminalRuleCall_5_1_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_6() { return cDocuAssignment_6; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_6_0() { return cDocuDocumentationParserRuleCall_6_0; }
	}

	public class OperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.Operation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStandardOperationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPortOperationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Operation:
		//	StandardOperation | PortOperation;
		@Override public ParserRule getRule() { return rule; }

		//StandardOperation | PortOperation
		public Alternatives getAlternatives() { return cAlternatives; }

		//StandardOperation
		public RuleCall getStandardOperationParserRuleCall_0() { return cStandardOperationParserRuleCall_0; }

		//PortOperation
		public RuleCall getPortOperationParserRuleCall_1() { return cPortOperationParserRuleCall_1; }
	}

	public class StandardOperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.StandardOperation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOverrideAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cOverrideOverrideKeyword_0_0 = (Keyword)cOverrideAssignment_0.eContents().get(0);
		private final Keyword cOperationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Assignment cArgumentsAssignment_4_0 = (Assignment)cGroup_4.eContents().get(0);
		private final RuleCall cArgumentsVarDeclParserRuleCall_4_0_0 = (RuleCall)cArgumentsAssignment_4_0.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cGroup_4.eContents().get(1);
		private final Keyword cCommaKeyword_4_1_0 = (Keyword)cGroup_4_1.eContents().get(0);
		private final Assignment cArgumentsAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cArgumentsVarDeclParserRuleCall_4_1_1_0 = (RuleCall)cArgumentsAssignment_4_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Alternatives cAlternatives_6_1 = (Alternatives)cGroup_6.eContents().get(1);
		private final Keyword cVoidKeyword_6_1_0 = (Keyword)cAlternatives_6_1.eContents().get(0);
		private final Assignment cReturnTypeAssignment_6_1_1 = (Assignment)cAlternatives_6_1.eContents().get(1);
		private final RuleCall cReturnTypeRefableTypeParserRuleCall_6_1_1_0 = (RuleCall)cReturnTypeAssignment_6_1_1.eContents().get(0);
		private final Assignment cDocuAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDocuDocumentationParserRuleCall_7_0 = (RuleCall)cDocuAssignment_7.eContents().get(0);
		private final Assignment cDetailCodeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cDetailCodeDetailCodeParserRuleCall_8_0 = (RuleCall)cDetailCodeAssignment_8.eContents().get(0);
		
		//StandardOperation:
		//	override?='override'? 'Operation' name=ID '(' (arguments+=VarDecl (',' arguments+=VarDecl)*)? ')' (':' ('void' |
		//	returnType=RefableType))?
		//	docu=Documentation?
		//	detailCode=DetailCode;
		@Override public ParserRule getRule() { return rule; }

		//override?='override'? 'Operation' name=ID '(' (arguments+=VarDecl (',' arguments+=VarDecl)*)? ')' (':' ('void' |
		//returnType=RefableType))? docu=Documentation? detailCode=DetailCode
		public Group getGroup() { return cGroup; }

		//override?='override'?
		public Assignment getOverrideAssignment_0() { return cOverrideAssignment_0; }

		//'override'
		public Keyword getOverrideOverrideKeyword_0_0() { return cOverrideOverrideKeyword_0_0; }

		//'Operation'
		public Keyword getOperationKeyword_1() { return cOperationKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//'('
		public Keyword getLeftParenthesisKeyword_3() { return cLeftParenthesisKeyword_3; }

		//(arguments+=VarDecl (',' arguments+=VarDecl)*)?
		public Group getGroup_4() { return cGroup_4; }

		//arguments+=VarDecl
		public Assignment getArgumentsAssignment_4_0() { return cArgumentsAssignment_4_0; }

		//VarDecl
		public RuleCall getArgumentsVarDeclParserRuleCall_4_0_0() { return cArgumentsVarDeclParserRuleCall_4_0_0; }

		//(',' arguments+=VarDecl)*
		public Group getGroup_4_1() { return cGroup_4_1; }

		//','
		public Keyword getCommaKeyword_4_1_0() { return cCommaKeyword_4_1_0; }

		//arguments+=VarDecl
		public Assignment getArgumentsAssignment_4_1_1() { return cArgumentsAssignment_4_1_1; }

		//VarDecl
		public RuleCall getArgumentsVarDeclParserRuleCall_4_1_1_0() { return cArgumentsVarDeclParserRuleCall_4_1_1_0; }

		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }

		//(':' ('void' | returnType=RefableType))?
		public Group getGroup_6() { return cGroup_6; }

		//':'
		public Keyword getColonKeyword_6_0() { return cColonKeyword_6_0; }

		//('void' | returnType=RefableType)
		public Alternatives getAlternatives_6_1() { return cAlternatives_6_1; }

		//'void'
		public Keyword getVoidKeyword_6_1_0() { return cVoidKeyword_6_1_0; }

		//returnType=RefableType
		public Assignment getReturnTypeAssignment_6_1_1() { return cReturnTypeAssignment_6_1_1; }

		//RefableType
		public RuleCall getReturnTypeRefableTypeParserRuleCall_6_1_1_0() { return cReturnTypeRefableTypeParserRuleCall_6_1_1_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_7() { return cDocuAssignment_7; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_7_0() { return cDocuDocumentationParserRuleCall_7_0; }

		//detailCode=DetailCode
		public Assignment getDetailCodeAssignment_8() { return cDetailCodeAssignment_8; }

		//DetailCode
		public RuleCall getDetailCodeDetailCodeParserRuleCall_8_0() { return cDetailCodeDetailCodeParserRuleCall_8_0; }
	}

	public class PortOperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.PortOperation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOperationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cArgumentsAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cArgumentsVarDeclParserRuleCall_3_0_0 = (RuleCall)cArgumentsAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cArgumentsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cArgumentsVarDeclParserRuleCall_3_1_1_0 = (RuleCall)cArgumentsAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cAlternatives_5.eContents().get(0);
		private final Keyword cColonKeyword_5_0_0 = (Keyword)cGroup_5_0.eContents().get(0);
		private final Alternatives cAlternatives_5_0_1 = (Alternatives)cGroup_5_0.eContents().get(1);
		private final Keyword cVoidKeyword_5_0_1_0 = (Keyword)cAlternatives_5_0_1.eContents().get(0);
		private final Assignment cReturnTypeAssignment_5_0_1_1 = (Assignment)cAlternatives_5_0_1.eContents().get(1);
		private final RuleCall cReturnTypeRefableTypeParserRuleCall_5_0_1_1_0 = (RuleCall)cReturnTypeAssignment_5_0_1_1.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final Keyword cSendsKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cSendsMsgAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final CrossReference cSendsMsgMessageCrossReference_5_1_1_0 = (CrossReference)cSendsMsgAssignment_5_1_1.eContents().get(0);
		private final RuleCall cSendsMsgMessageIDTerminalRuleCall_5_1_1_0_1 = (RuleCall)cSendsMsgMessageCrossReference_5_1_1_0.eContents().get(1);
		private final Assignment cDocuAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDocuDocumentationParserRuleCall_6_0 = (RuleCall)cDocuAssignment_6.eContents().get(0);
		private final Assignment cDetailCodeAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDetailCodeDetailCodeParserRuleCall_7_0 = (RuleCall)cDetailCodeAssignment_7.eContents().get(0);
		
		//PortOperation:
		//	'Operation' name=ID '(' (arguments+=VarDecl (',' arguments+=VarDecl)*)? ')' (':' ('void' | returnType=RefableType) |
		//	'sends' sendsMsg=[Message])?
		//	docu=Documentation?
		//	detailCode=DetailCode;
		@Override public ParserRule getRule() { return rule; }

		//'Operation' name=ID '(' (arguments+=VarDecl (',' arguments+=VarDecl)*)? ')' (':' ('void' | returnType=RefableType) |
		//'sends' sendsMsg=[Message])? docu=Documentation? detailCode=DetailCode
		public Group getGroup() { return cGroup; }

		//'Operation'
		public Keyword getOperationKeyword_0() { return cOperationKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//(arguments+=VarDecl (',' arguments+=VarDecl)*)?
		public Group getGroup_3() { return cGroup_3; }

		//arguments+=VarDecl
		public Assignment getArgumentsAssignment_3_0() { return cArgumentsAssignment_3_0; }

		//VarDecl
		public RuleCall getArgumentsVarDeclParserRuleCall_3_0_0() { return cArgumentsVarDeclParserRuleCall_3_0_0; }

		//(',' arguments+=VarDecl)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//','
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//arguments+=VarDecl
		public Assignment getArgumentsAssignment_3_1_1() { return cArgumentsAssignment_3_1_1; }

		//VarDecl
		public RuleCall getArgumentsVarDeclParserRuleCall_3_1_1_0() { return cArgumentsVarDeclParserRuleCall_3_1_1_0; }

		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }

		//(':' ('void' | returnType=RefableType) | 'sends' sendsMsg=[Message])?
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//':' ('void' | returnType=RefableType)
		public Group getGroup_5_0() { return cGroup_5_0; }

		//':'
		public Keyword getColonKeyword_5_0_0() { return cColonKeyword_5_0_0; }

		//('void' | returnType=RefableType)
		public Alternatives getAlternatives_5_0_1() { return cAlternatives_5_0_1; }

		//'void'
		public Keyword getVoidKeyword_5_0_1_0() { return cVoidKeyword_5_0_1_0; }

		//returnType=RefableType
		public Assignment getReturnTypeAssignment_5_0_1_1() { return cReturnTypeAssignment_5_0_1_1; }

		//RefableType
		public RuleCall getReturnTypeRefableTypeParserRuleCall_5_0_1_1_0() { return cReturnTypeRefableTypeParserRuleCall_5_0_1_1_0; }

		//'sends' sendsMsg=[Message]
		public Group getGroup_5_1() { return cGroup_5_1; }

		//'sends'
		public Keyword getSendsKeyword_5_1_0() { return cSendsKeyword_5_1_0; }

		//sendsMsg=[Message]
		public Assignment getSendsMsgAssignment_5_1_1() { return cSendsMsgAssignment_5_1_1; }

		//[Message]
		public CrossReference getSendsMsgMessageCrossReference_5_1_1_0() { return cSendsMsgMessageCrossReference_5_1_1_0; }

		//ID
		public RuleCall getSendsMsgMessageIDTerminalRuleCall_5_1_1_0_1() { return cSendsMsgMessageIDTerminalRuleCall_5_1_1_0_1; }

		//docu=Documentation?
		public Assignment getDocuAssignment_6() { return cDocuAssignment_6; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_6_0() { return cDocuDocumentationParserRuleCall_6_0; }

		//detailCode=DetailCode
		public Assignment getDetailCodeAssignment_7() { return cDetailCodeAssignment_7; }

		//DetailCode
		public RuleCall getDetailCodeDetailCodeParserRuleCall_7_0() { return cDetailCodeDetailCodeParserRuleCall_7_0; }
	}

	public class ClassStructorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.ClassStructor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Alternatives cNameAlternatives_0_0 = (Alternatives)cNameAssignment_0.eContents().get(0);
		private final Keyword cNameCtorKeyword_0_0_0 = (Keyword)cNameAlternatives_0_0.eContents().get(0);
		private final Keyword cNameDtorKeyword_0_0_1 = (Keyword)cNameAlternatives_0_0.eContents().get(1);
		private final Assignment cDetailCodeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDetailCodeDetailCodeParserRuleCall_1_0 = (RuleCall)cDetailCodeAssignment_1.eContents().get(0);
		
		//ClassStructor:
		//	name=('ctor' | 'dtor') detailCode=DetailCode;
		@Override public ParserRule getRule() { return rule; }

		//name=('ctor' | 'dtor') detailCode=DetailCode
		public Group getGroup() { return cGroup; }

		//name=('ctor' | 'dtor')
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//('ctor' | 'dtor')
		public Alternatives getNameAlternatives_0_0() { return cNameAlternatives_0_0; }

		//'ctor'
		public Keyword getNameCtorKeyword_0_0_0() { return cNameCtorKeyword_0_0_0; }

		//'dtor'
		public Keyword getNameDtorKeyword_0_0_1() { return cNameDtorKeyword_0_0_1; }

		//detailCode=DetailCode
		public Assignment getDetailCodeAssignment_1() { return cDetailCodeAssignment_1; }

		//DetailCode
		public RuleCall getDetailCodeDetailCodeParserRuleCall_1_0() { return cDetailCodeDetailCodeParserRuleCall_1_0; }
	}

	public class GeneralProtocolClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.GeneralProtocolClass");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cProtocolClassParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cCompoundProtocolClassParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//GeneralProtocolClass:
		//	ProtocolClass | CompoundProtocolClass;
		@Override public ParserRule getRule() { return rule; }

		//ProtocolClass | CompoundProtocolClass
		public Alternatives getAlternatives() { return cAlternatives; }

		//ProtocolClass
		public RuleCall getProtocolClassParserRuleCall_0() { return cProtocolClassParserRuleCall_0; }

		//CompoundProtocolClass
		public RuleCall getCompoundProtocolClassParserRuleCall_1() { return cCompoundProtocolClassParserRuleCall_1; }
	}

	public class ProtocolClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.ProtocolClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCommTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCommTypeCommunicationTypeEnumRuleCall_0_0 = (RuleCall)cCommTypeAssignment_0.eContents().get(0);
		private final Keyword cProtocolClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cDocuAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDocuDocumentationParserRuleCall_3_0 = (RuleCall)cDocuAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cExtendsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBaseAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cBaseProtocolClassCrossReference_4_1_0 = (CrossReference)cBaseAssignment_4_1.eContents().get(0);
		private final RuleCall cBaseProtocolClassFQNParserRuleCall_4_1_0_1 = (RuleCall)cBaseProtocolClassCrossReference_4_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAnnotationsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_6_0 = (RuleCall)cAnnotationsAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cUsercode1Keyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cUserCode1Assignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cUserCode1DetailCodeParserRuleCall_7_1_0 = (RuleCall)cUserCode1Assignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cUsercode2Keyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cUserCode2Assignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cUserCode2DetailCodeParserRuleCall_8_1_0 = (RuleCall)cUserCode2Assignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cUsercode3Keyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cUserCode3Assignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cUserCode3DetailCodeParserRuleCall_9_1_0 = (RuleCall)cUserCode3Assignment_9_1.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cIncomingKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cIncomingMessagesAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cIncomingMessagesMessageParserRuleCall_10_2_0 = (RuleCall)cIncomingMessagesAssignment_10_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10_3 = (Keyword)cGroup_10.eContents().get(3);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cOutgoingKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cOutgoingMessagesAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cOutgoingMessagesMessageParserRuleCall_11_2_0 = (RuleCall)cOutgoingMessagesAssignment_11_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11_3 = (Keyword)cGroup_11.eContents().get(3);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cRegularKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cPortClassKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Assignment cRegularAssignment_12_2 = (Assignment)cGroup_12.eContents().get(2);
		private final RuleCall cRegularPortClassParserRuleCall_12_2_0 = (RuleCall)cRegularAssignment_12_2.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cConjugatedKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Keyword cPortClassKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Assignment cConjugatedAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cConjugatedPortClassParserRuleCall_13_2_0 = (RuleCall)cConjugatedAssignment_13_2.eContents().get(0);
		private final Assignment cSemanticsAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cSemanticsProtocolSemanticsParserRuleCall_14_0 = (RuleCall)cSemanticsAssignment_14.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		
		//ProtocolClass:
		//	commType=CommunicationType?
		//	'ProtocolClass' name=ID docu=Documentation? ('extends' base=[ProtocolClass|FQN])? '{'
		//	annotations+=Annotation* ('usercode1' userCode1=DetailCode)? ('usercode2' userCode2=DetailCode)? ('usercode3'
		//	userCode3=DetailCode)? ('incoming' '{' incomingMessages+=Message* '}')? ('outgoing' '{' outgoingMessages+=Message*
		//	'}')? ('regular' 'PortClass' regular=PortClass)? ('conjugated' 'PortClass' conjugated=PortClass)?
		//	semantics=ProtocolSemantics?
		//	'}';
		@Override public ParserRule getRule() { return rule; }

		//commType=CommunicationType? 'ProtocolClass' name=ID docu=Documentation? ('extends' base=[ProtocolClass|FQN])? '{'
		//annotations+=Annotation* ('usercode1' userCode1=DetailCode)? ('usercode2' userCode2=DetailCode)? ('usercode3'
		//userCode3=DetailCode)? ('incoming' '{' incomingMessages+=Message* '}')? ('outgoing' '{' outgoingMessages+=Message*
		//'}')? ('regular' 'PortClass' regular=PortClass)? ('conjugated' 'PortClass' conjugated=PortClass)?
		//semantics=ProtocolSemantics? '}'
		public Group getGroup() { return cGroup; }

		//commType=CommunicationType?
		public Assignment getCommTypeAssignment_0() { return cCommTypeAssignment_0; }

		//CommunicationType
		public RuleCall getCommTypeCommunicationTypeEnumRuleCall_0_0() { return cCommTypeCommunicationTypeEnumRuleCall_0_0; }

		//'ProtocolClass'
		public Keyword getProtocolClassKeyword_1() { return cProtocolClassKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_3() { return cDocuAssignment_3; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_3_0() { return cDocuDocumentationParserRuleCall_3_0; }

		//('extends' base=[ProtocolClass|FQN])?
		public Group getGroup_4() { return cGroup_4; }

		//'extends'
		public Keyword getExtendsKeyword_4_0() { return cExtendsKeyword_4_0; }

		//base=[ProtocolClass|FQN]
		public Assignment getBaseAssignment_4_1() { return cBaseAssignment_4_1; }

		//[ProtocolClass|FQN]
		public CrossReference getBaseProtocolClassCrossReference_4_1_0() { return cBaseProtocolClassCrossReference_4_1_0; }

		//FQN
		public RuleCall getBaseProtocolClassFQNParserRuleCall_4_1_0_1() { return cBaseProtocolClassFQNParserRuleCall_4_1_0_1; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_6() { return cAnnotationsAssignment_6; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_6_0() { return cAnnotationsAnnotationParserRuleCall_6_0; }

		//('usercode1' userCode1=DetailCode)?
		public Group getGroup_7() { return cGroup_7; }

		//'usercode1'
		public Keyword getUsercode1Keyword_7_0() { return cUsercode1Keyword_7_0; }

		//userCode1=DetailCode
		public Assignment getUserCode1Assignment_7_1() { return cUserCode1Assignment_7_1; }

		//DetailCode
		public RuleCall getUserCode1DetailCodeParserRuleCall_7_1_0() { return cUserCode1DetailCodeParserRuleCall_7_1_0; }

		//('usercode2' userCode2=DetailCode)?
		public Group getGroup_8() { return cGroup_8; }

		//'usercode2'
		public Keyword getUsercode2Keyword_8_0() { return cUsercode2Keyword_8_0; }

		//userCode2=DetailCode
		public Assignment getUserCode2Assignment_8_1() { return cUserCode2Assignment_8_1; }

		//DetailCode
		public RuleCall getUserCode2DetailCodeParserRuleCall_8_1_0() { return cUserCode2DetailCodeParserRuleCall_8_1_0; }

		//('usercode3' userCode3=DetailCode)?
		public Group getGroup_9() { return cGroup_9; }

		//'usercode3'
		public Keyword getUsercode3Keyword_9_0() { return cUsercode3Keyword_9_0; }

		//userCode3=DetailCode
		public Assignment getUserCode3Assignment_9_1() { return cUserCode3Assignment_9_1; }

		//DetailCode
		public RuleCall getUserCode3DetailCodeParserRuleCall_9_1_0() { return cUserCode3DetailCodeParserRuleCall_9_1_0; }

		//('incoming' '{' incomingMessages+=Message* '}')?
		public Group getGroup_10() { return cGroup_10; }

		//'incoming'
		public Keyword getIncomingKeyword_10_0() { return cIncomingKeyword_10_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_10_1() { return cLeftCurlyBracketKeyword_10_1; }

		//incomingMessages+=Message*
		public Assignment getIncomingMessagesAssignment_10_2() { return cIncomingMessagesAssignment_10_2; }

		//Message
		public RuleCall getIncomingMessagesMessageParserRuleCall_10_2_0() { return cIncomingMessagesMessageParserRuleCall_10_2_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_10_3() { return cRightCurlyBracketKeyword_10_3; }

		//('outgoing' '{' outgoingMessages+=Message* '}')?
		public Group getGroup_11() { return cGroup_11; }

		//'outgoing'
		public Keyword getOutgoingKeyword_11_0() { return cOutgoingKeyword_11_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_11_1() { return cLeftCurlyBracketKeyword_11_1; }

		//outgoingMessages+=Message*
		public Assignment getOutgoingMessagesAssignment_11_2() { return cOutgoingMessagesAssignment_11_2; }

		//Message
		public RuleCall getOutgoingMessagesMessageParserRuleCall_11_2_0() { return cOutgoingMessagesMessageParserRuleCall_11_2_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_11_3() { return cRightCurlyBracketKeyword_11_3; }

		//('regular' 'PortClass' regular=PortClass)?
		public Group getGroup_12() { return cGroup_12; }

		//'regular'
		public Keyword getRegularKeyword_12_0() { return cRegularKeyword_12_0; }

		//'PortClass'
		public Keyword getPortClassKeyword_12_1() { return cPortClassKeyword_12_1; }

		//regular=PortClass
		public Assignment getRegularAssignment_12_2() { return cRegularAssignment_12_2; }

		//PortClass
		public RuleCall getRegularPortClassParserRuleCall_12_2_0() { return cRegularPortClassParserRuleCall_12_2_0; }

		//('conjugated' 'PortClass' conjugated=PortClass)?
		public Group getGroup_13() { return cGroup_13; }

		//'conjugated'
		public Keyword getConjugatedKeyword_13_0() { return cConjugatedKeyword_13_0; }

		//'PortClass'
		public Keyword getPortClassKeyword_13_1() { return cPortClassKeyword_13_1; }

		//conjugated=PortClass
		public Assignment getConjugatedAssignment_13_2() { return cConjugatedAssignment_13_2; }

		//PortClass
		public RuleCall getConjugatedPortClassParserRuleCall_13_2_0() { return cConjugatedPortClassParserRuleCall_13_2_0; }

		//semantics=ProtocolSemantics?
		public Assignment getSemanticsAssignment_14() { return cSemanticsAssignment_14; }

		//ProtocolSemantics
		public RuleCall getSemanticsProtocolSemanticsParserRuleCall_14_0() { return cSemanticsProtocolSemanticsParserRuleCall_14_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_15() { return cRightCurlyBracketKeyword_15; }
	}

	public class CompoundProtocolClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.CompoundProtocolClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCompoundProtocolClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDocuAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDocuDocumentationParserRuleCall_2_0 = (RuleCall)cDocuAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAnnotationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_4_0 = (RuleCall)cAnnotationsAssignment_4.eContents().get(0);
		private final Assignment cSubProtocolsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSubProtocolsSubProtocolParserRuleCall_5_0 = (RuleCall)cSubProtocolsAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//CompoundProtocolClass:
		//	'CompoundProtocolClass' name=ID docu=Documentation? '{'
		//	annotations+=Annotation*
		//	subProtocols+=SubProtocol*
		//	'}';
		@Override public ParserRule getRule() { return rule; }

		//'CompoundProtocolClass' name=ID docu=Documentation? '{' annotations+=Annotation* subProtocols+=SubProtocol* '}'
		public Group getGroup() { return cGroup; }

		//'CompoundProtocolClass'
		public Keyword getCompoundProtocolClassKeyword_0() { return cCompoundProtocolClassKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_2() { return cDocuAssignment_2; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_2_0() { return cDocuDocumentationParserRuleCall_2_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_4() { return cAnnotationsAssignment_4; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_4_0() { return cAnnotationsAnnotationParserRuleCall_4_0; }

		//subProtocols+=SubProtocol*
		public Assignment getSubProtocolsAssignment_5() { return cSubProtocolsAssignment_5; }

		//SubProtocol
		public RuleCall getSubProtocolsSubProtocolParserRuleCall_5_0() { return cSubProtocolsSubProtocolParserRuleCall_5_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class SubProtocolElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.SubProtocol");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubProtocolKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cProtocolAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cProtocolGeneralProtocolClassCrossReference_3_0 = (CrossReference)cProtocolAssignment_3.eContents().get(0);
		private final RuleCall cProtocolGeneralProtocolClassFQNParserRuleCall_3_0_1 = (RuleCall)cProtocolGeneralProtocolClassCrossReference_3_0.eContents().get(1);
		
		//SubProtocol:
		//	'SubProtocol' name=ID ':' protocol=[GeneralProtocolClass|FQN];
		@Override public ParserRule getRule() { return rule; }

		//'SubProtocol' name=ID ':' protocol=[GeneralProtocolClass|FQN]
		public Group getGroup() { return cGroup; }

		//'SubProtocol'
		public Keyword getSubProtocolKeyword_0() { return cSubProtocolKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//protocol=[GeneralProtocolClass|FQN]
		public Assignment getProtocolAssignment_3() { return cProtocolAssignment_3; }

		//[GeneralProtocolClass|FQN]
		public CrossReference getProtocolGeneralProtocolClassCrossReference_3_0() { return cProtocolGeneralProtocolClassCrossReference_3_0; }

		//FQN
		public RuleCall getProtocolGeneralProtocolClassFQNParserRuleCall_3_0_1() { return cProtocolGeneralProtocolClassFQNParserRuleCall_3_0_1; }
	}

	public class MessageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.Message");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPrivAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cPrivPrivateKeyword_0_0 = (Keyword)cPrivAssignment_0.eContents().get(0);
		private final Keyword cMessageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cDataAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cDataMessageDataParserRuleCall_3_1_0 = (RuleCall)cDataAssignment_3_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cAnnotationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_4_0 = (RuleCall)cAnnotationsAssignment_4.eContents().get(0);
		private final Assignment cDocuAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDocuDocumentationParserRuleCall_5_0 = (RuleCall)cDocuAssignment_5.eContents().get(0);
		
		//Message:
		//	priv?='private'? 'Message' name=ID ('(' data=MessageData? ')')? annotations+=Annotation*
		//	docu=Documentation?;
		@Override public ParserRule getRule() { return rule; }

		//priv?='private'? 'Message' name=ID ('(' data=MessageData? ')')? annotations+=Annotation* docu=Documentation?
		public Group getGroup() { return cGroup; }

		//priv?='private'?
		public Assignment getPrivAssignment_0() { return cPrivAssignment_0; }

		//'private'
		public Keyword getPrivPrivateKeyword_0_0() { return cPrivPrivateKeyword_0_0; }

		//'Message'
		public Keyword getMessageKeyword_1() { return cMessageKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//('(' data=MessageData? ')')?
		public Group getGroup_3() { return cGroup_3; }

		//'('
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//data=MessageData?
		public Assignment getDataAssignment_3_1() { return cDataAssignment_3_1; }

		//MessageData
		public RuleCall getDataMessageDataParserRuleCall_3_1_0() { return cDataMessageDataParserRuleCall_3_1_0; }

		//')'
		public Keyword getRightParenthesisKeyword_3_2() { return cRightParenthesisKeyword_3_2; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_4() { return cAnnotationsAssignment_4; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_4_0() { return cAnnotationsAnnotationParserRuleCall_4_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_5() { return cDocuAssignment_5; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_5_0() { return cDocuDocumentationParserRuleCall_5_0; }
	}

	public class PortClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.PortClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPortClassAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cUsercodeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cUserCodeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cUserCodeDetailCodeParserRuleCall_2_1_0 = (RuleCall)cUserCodeAssignment_2_1.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cMsgHandlersAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cMsgHandlersMessageHandlerParserRuleCall_3_0_0 = (RuleCall)cMsgHandlersAssignment_3_0.eContents().get(0);
		private final Assignment cOperationsAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cOperationsPortOperationParserRuleCall_3_1_0 = (RuleCall)cOperationsAssignment_3_1.eContents().get(0);
		private final Assignment cAttributesAssignment_3_2 = (Assignment)cAlternatives_3.eContents().get(2);
		private final RuleCall cAttributesAttributeParserRuleCall_3_2_0 = (RuleCall)cAttributesAssignment_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PortClass:
		//	{PortClass}
		//	'{' ('usercode' userCode=DetailCode)? (msgHandlers+=MessageHandler | operations+=PortOperation |
		//	attributes+=Attribute)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }

		//{PortClass} '{' ('usercode' userCode=DetailCode)? (msgHandlers+=MessageHandler | operations+=PortOperation |
		//attributes+=Attribute)* '}'
		public Group getGroup() { return cGroup; }

		//{PortClass}
		public Action getPortClassAction_0() { return cPortClassAction_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//('usercode' userCode=DetailCode)?
		public Group getGroup_2() { return cGroup_2; }

		//'usercode'
		public Keyword getUsercodeKeyword_2_0() { return cUsercodeKeyword_2_0; }

		//userCode=DetailCode
		public Assignment getUserCodeAssignment_2_1() { return cUserCodeAssignment_2_1; }

		//DetailCode
		public RuleCall getUserCodeDetailCodeParserRuleCall_2_1_0() { return cUserCodeDetailCodeParserRuleCall_2_1_0; }

		//(msgHandlers+=MessageHandler | operations+=PortOperation | attributes+=Attribute)*
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//msgHandlers+=MessageHandler
		public Assignment getMsgHandlersAssignment_3_0() { return cMsgHandlersAssignment_3_0; }

		//MessageHandler
		public RuleCall getMsgHandlersMessageHandlerParserRuleCall_3_0_0() { return cMsgHandlersMessageHandlerParserRuleCall_3_0_0; }

		//operations+=PortOperation
		public Assignment getOperationsAssignment_3_1() { return cOperationsAssignment_3_1; }

		//PortOperation
		public RuleCall getOperationsPortOperationParserRuleCall_3_1_0() { return cOperationsPortOperationParserRuleCall_3_1_0; }

		//attributes+=Attribute
		public Assignment getAttributesAssignment_3_2() { return cAttributesAssignment_3_2; }

		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_3_2_0() { return cAttributesAttributeParserRuleCall_3_2_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class MessageHandlerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.MessageHandler");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cInMessageHandlerParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOutMessageHandlerParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//MessageHandler:
		//	InMessageHandler | OutMessageHandler;
		@Override public ParserRule getRule() { return rule; }

		//InMessageHandler | OutMessageHandler
		public Alternatives getAlternatives() { return cAlternatives; }

		//InMessageHandler
		public RuleCall getInMessageHandlerParserRuleCall_0() { return cInMessageHandlerParserRuleCall_0; }

		//OutMessageHandler
		public RuleCall getOutMessageHandlerParserRuleCall_1() { return cOutMessageHandlerParserRuleCall_1; }
	}

	public class InMessageHandlerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.InMessageHandler");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHandleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cIncomingKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMsgAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cMsgMessageCrossReference_2_0 = (CrossReference)cMsgAssignment_2.eContents().get(0);
		private final RuleCall cMsgMessageIDTerminalRuleCall_2_0_1 = (RuleCall)cMsgMessageCrossReference_2_0.eContents().get(1);
		private final Assignment cDetailCodeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDetailCodeDetailCodeParserRuleCall_3_0 = (RuleCall)cDetailCodeAssignment_3.eContents().get(0);
		
		//InMessageHandler:
		//	'handle' 'incoming' msg=[Message] detailCode=DetailCode;
		@Override public ParserRule getRule() { return rule; }

		//'handle' 'incoming' msg=[Message] detailCode=DetailCode
		public Group getGroup() { return cGroup; }

		//'handle'
		public Keyword getHandleKeyword_0() { return cHandleKeyword_0; }

		//'incoming'
		public Keyword getIncomingKeyword_1() { return cIncomingKeyword_1; }

		//msg=[Message]
		public Assignment getMsgAssignment_2() { return cMsgAssignment_2; }

		//[Message]
		public CrossReference getMsgMessageCrossReference_2_0() { return cMsgMessageCrossReference_2_0; }

		//ID
		public RuleCall getMsgMessageIDTerminalRuleCall_2_0_1() { return cMsgMessageIDTerminalRuleCall_2_0_1; }

		//detailCode=DetailCode
		public Assignment getDetailCodeAssignment_3() { return cDetailCodeAssignment_3; }

		//DetailCode
		public RuleCall getDetailCodeDetailCodeParserRuleCall_3_0() { return cDetailCodeDetailCodeParserRuleCall_3_0; }
	}

	public class OutMessageHandlerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.OutMessageHandler");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHandleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cOutgoingKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cMsgAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cMsgMessageCrossReference_2_0 = (CrossReference)cMsgAssignment_2.eContents().get(0);
		private final RuleCall cMsgMessageIDTerminalRuleCall_2_0_1 = (RuleCall)cMsgMessageCrossReference_2_0.eContents().get(1);
		private final Assignment cDetailCodeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDetailCodeDetailCodeParserRuleCall_3_0 = (RuleCall)cDetailCodeAssignment_3.eContents().get(0);
		
		//OutMessageHandler:
		//	'handle' 'outgoing' msg=[Message] detailCode=DetailCode;
		@Override public ParserRule getRule() { return rule; }

		//'handle' 'outgoing' msg=[Message] detailCode=DetailCode
		public Group getGroup() { return cGroup; }

		//'handle'
		public Keyword getHandleKeyword_0() { return cHandleKeyword_0; }

		//'outgoing'
		public Keyword getOutgoingKeyword_1() { return cOutgoingKeyword_1; }

		//msg=[Message]
		public Assignment getMsgAssignment_2() { return cMsgAssignment_2; }

		//[Message]
		public CrossReference getMsgMessageCrossReference_2_0() { return cMsgMessageCrossReference_2_0; }

		//ID
		public RuleCall getMsgMessageIDTerminalRuleCall_2_0_1() { return cMsgMessageIDTerminalRuleCall_2_0_1; }

		//detailCode=DetailCode
		public Assignment getDetailCodeAssignment_3() { return cDetailCodeAssignment_3; }

		//DetailCode
		public RuleCall getDetailCodeDetailCodeParserRuleCall_3_0() { return cDetailCodeDetailCodeParserRuleCall_3_0; }
	}

	public class ModelComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.ModelComponent");
		private final RuleCall cActorClassParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//@Override
		//ModelComponent:
		//	ActorClass;
		@Override public ParserRule getRule() { return rule; }

		//ActorClass
		public RuleCall getActorClassParserRuleCall() { return cActorClassParserRuleCall; }
	}

	public class ActorClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.ActorClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final UnorderedGroup cUnorderedGroup_0 = (UnorderedGroup)cGroup.eContents().get(0);
		private final Assignment cAbstractAssignment_0_0 = (Assignment)cUnorderedGroup_0.eContents().get(0);
		private final Keyword cAbstractAbstractKeyword_0_0_0 = (Keyword)cAbstractAssignment_0_0.eContents().get(0);
		private final Assignment cCommTypeAssignment_0_1 = (Assignment)cUnorderedGroup_0.eContents().get(1);
		private final RuleCall cCommTypeComponentCommunicationTypeEnumRuleCall_0_1_0 = (RuleCall)cCommTypeAssignment_0_1.eContents().get(0);
		private final Keyword cActorClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cDocuAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDocuDocumentationParserRuleCall_3_0 = (RuleCall)cDocuAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cExtendsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cBaseAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cBaseActorClassCrossReference_4_1_0 = (CrossReference)cBaseAssignment_4_1.eContents().get(0);
		private final RuleCall cBaseActorClassFQNParserRuleCall_4_1_0_1 = (RuleCall)cBaseActorClassCrossReference_4_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAnnotationsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_6_0 = (RuleCall)cAnnotationsAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cInterfaceKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Alternatives cAlternatives_7_2 = (Alternatives)cGroup_7.eContents().get(2);
		private final Assignment cServiceProvisionPointsAssignment_7_2_0 = (Assignment)cAlternatives_7_2.eContents().get(0);
		private final RuleCall cServiceProvisionPointsSPPParserRuleCall_7_2_0_0 = (RuleCall)cServiceProvisionPointsAssignment_7_2_0.eContents().get(0);
		private final Assignment cInterfacePortsAssignment_7_2_1 = (Assignment)cAlternatives_7_2.eContents().get(1);
		private final RuleCall cInterfacePortsPortParserRuleCall_7_2_1_0 = (RuleCall)cInterfacePortsAssignment_7_2_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cStructureKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cStructureDocuAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cStructureDocuDocumentationParserRuleCall_8_1_0 = (RuleCall)cStructureDocuAssignment_8_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cUsercode1Keyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cUserCode1Assignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cUserCode1DetailCodeParserRuleCall_8_3_1_0 = (RuleCall)cUserCode1Assignment_8_3_1.eContents().get(0);
		private final Group cGroup_8_4 = (Group)cGroup_8.eContents().get(4);
		private final Keyword cUsercode2Keyword_8_4_0 = (Keyword)cGroup_8_4.eContents().get(0);
		private final Assignment cUserCode2Assignment_8_4_1 = (Assignment)cGroup_8_4.eContents().get(1);
		private final RuleCall cUserCode2DetailCodeParserRuleCall_8_4_1_0 = (RuleCall)cUserCode2Assignment_8_4_1.eContents().get(0);
		private final Group cGroup_8_5 = (Group)cGroup_8.eContents().get(5);
		private final Keyword cUsercode3Keyword_8_5_0 = (Keyword)cGroup_8_5.eContents().get(0);
		private final Assignment cUserCode3Assignment_8_5_1 = (Assignment)cGroup_8_5.eContents().get(1);
		private final RuleCall cUserCode3DetailCodeParserRuleCall_8_5_1_0 = (RuleCall)cUserCode3Assignment_8_5_1.eContents().get(0);
		private final Alternatives cAlternatives_8_6 = (Alternatives)cGroup_8.eContents().get(6);
		private final Assignment cConnectionsAssignment_8_6_0 = (Assignment)cAlternatives_8_6.eContents().get(0);
		private final RuleCall cConnectionsLayerConnectionParserRuleCall_8_6_0_0 = (RuleCall)cConnectionsAssignment_8_6_0.eContents().get(0);
		private final Assignment cBindingsAssignment_8_6_1 = (Assignment)cAlternatives_8_6.eContents().get(1);
		private final RuleCall cBindingsBindingParserRuleCall_8_6_1_0 = (RuleCall)cBindingsAssignment_8_6_1.eContents().get(0);
		private final Assignment cServiceImplementationsAssignment_8_6_2 = (Assignment)cAlternatives_8_6.eContents().get(2);
		private final RuleCall cServiceImplementationsServiceImplementationParserRuleCall_8_6_2_0 = (RuleCall)cServiceImplementationsAssignment_8_6_2.eContents().get(0);
		private final Assignment cAttributesAssignment_8_6_3 = (Assignment)cAlternatives_8_6.eContents().get(3);
		private final RuleCall cAttributesAttributeParserRuleCall_8_6_3_0 = (RuleCall)cAttributesAssignment_8_6_3.eContents().get(0);
		private final Assignment cActorRefsAssignment_8_6_4 = (Assignment)cAlternatives_8_6.eContents().get(4);
		private final RuleCall cActorRefsActorRefParserRuleCall_8_6_4_0 = (RuleCall)cActorRefsAssignment_8_6_4.eContents().get(0);
		private final Assignment cServiceAccessPointsAssignment_8_6_5 = (Assignment)cAlternatives_8_6.eContents().get(5);
		private final RuleCall cServiceAccessPointsSAPParserRuleCall_8_6_5_0 = (RuleCall)cServiceAccessPointsAssignment_8_6_5.eContents().get(0);
		private final Assignment cInternalPortsAssignment_8_6_6 = (Assignment)cAlternatives_8_6.eContents().get(6);
		private final RuleCall cInternalPortsPortParserRuleCall_8_6_6_0 = (RuleCall)cInternalPortsAssignment_8_6_6.eContents().get(0);
		private final Assignment cExternalPortsAssignment_8_6_7 = (Assignment)cAlternatives_8_6.eContents().get(7);
		private final RuleCall cExternalPortsExternalPortParserRuleCall_8_6_7_0 = (RuleCall)cExternalPortsAssignment_8_6_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_7 = (Keyword)cGroup_8.eContents().get(7);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cBehaviorKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cBehaviorDocuAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cBehaviorDocuDocumentationParserRuleCall_9_1_0 = (RuleCall)cBehaviorDocuAssignment_9_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_9_2 = (Keyword)cGroup_9.eContents().get(2);
		private final Assignment cBehaviorAnnotationsAssignment_9_3 = (Assignment)cGroup_9.eContents().get(3);
		private final RuleCall cBehaviorAnnotationsAnnotationParserRuleCall_9_3_0 = (RuleCall)cBehaviorAnnotationsAssignment_9_3.eContents().get(0);
		private final Alternatives cAlternatives_9_4 = (Alternatives)cGroup_9.eContents().get(4);
		private final Assignment cOperationsAssignment_9_4_0 = (Assignment)cAlternatives_9_4.eContents().get(0);
		private final RuleCall cOperationsStandardOperationParserRuleCall_9_4_0_0 = (RuleCall)cOperationsAssignment_9_4_0.eContents().get(0);
		private final Assignment cStructorsAssignment_9_4_1 = (Assignment)cAlternatives_9_4.eContents().get(1);
		private final RuleCall cStructorsClassStructorParserRuleCall_9_4_1_0 = (RuleCall)cStructorsAssignment_9_4_1.eContents().get(0);
		private final Assignment cStateMachineAssignment_9_5 = (Assignment)cGroup_9.eContents().get(5);
		private final RuleCall cStateMachineStateMachineParserRuleCall_9_5_0 = (RuleCall)cStateMachineAssignment_9_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9_6 = (Keyword)cGroup_9.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//// some notes on ports
		////
		//// in ROOM ports can be contained in the structure and/or the interface
		//// p in s ==> internal end port
		//// p in i ==> relay port
		//// p in i and p in s ==> external end port
		//// since double containment is not supported we decided to define external ports as reference to interface ports
		//ActorClass:
		//	(abstract?='abstract'? & commType=ComponentCommunicationType?)
		//	'ActorClass' name=ID docu=Documentation? ('extends' base=[ActorClass|FQN])? '{'
		//	annotations+=Annotation* ('Interface' '{' (serviceProvisionPoints+=SPP | interfacePorts+=Port)*
		//	'}')? ('Structure' structureDocu=Documentation? '{' ('usercode1' userCode1=DetailCode)? ('usercode2'
		//	userCode2=DetailCode)? ('usercode3' userCode3=DetailCode)? (connections+=LayerConnection | bindings+=Binding |
		//	serviceImplementations+=ServiceImplementation | attributes+=Attribute | actorRefs+=ActorRef |
		//	serviceAccessPoints+=SAP | internalPorts+=Port | externalPorts+=ExternalPort)*
		//	'}')? ('Behavior' behaviorDocu=Documentation? '{'
		//	behaviorAnnotations+=Annotation* (operations+=StandardOperation | structors+=ClassStructor)*
		//	stateMachine=StateMachine?
		//	'}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }

		//(abstract?='abstract'? & commType=ComponentCommunicationType?) 'ActorClass' name=ID docu=Documentation? ('extends'
		//base=[ActorClass|FQN])? '{' annotations+=Annotation* ('Interface' '{' (serviceProvisionPoints+=SPP |
		//interfacePorts+=Port)* '}')? ('Structure' structureDocu=Documentation? '{' ('usercode1' userCode1=DetailCode)?
		//('usercode2' userCode2=DetailCode)? ('usercode3' userCode3=DetailCode)? (connections+=LayerConnection |
		//bindings+=Binding | serviceImplementations+=ServiceImplementation | attributes+=Attribute | actorRefs+=ActorRef |
		//serviceAccessPoints+=SAP | internalPorts+=Port | externalPorts+=ExternalPort)* '}')? ('Behavior'
		//behaviorDocu=Documentation? '{' behaviorAnnotations+=Annotation* (operations+=StandardOperation |
		//structors+=ClassStructor)* stateMachine=StateMachine? '}')? '}'
		public Group getGroup() { return cGroup; }

		//(abstract?='abstract'? & commType=ComponentCommunicationType?)
		public UnorderedGroup getUnorderedGroup_0() { return cUnorderedGroup_0; }

		//abstract?='abstract'?
		public Assignment getAbstractAssignment_0_0() { return cAbstractAssignment_0_0; }

		//'abstract'
		public Keyword getAbstractAbstractKeyword_0_0_0() { return cAbstractAbstractKeyword_0_0_0; }

		//commType=ComponentCommunicationType?
		public Assignment getCommTypeAssignment_0_1() { return cCommTypeAssignment_0_1; }

		//ComponentCommunicationType
		public RuleCall getCommTypeComponentCommunicationTypeEnumRuleCall_0_1_0() { return cCommTypeComponentCommunicationTypeEnumRuleCall_0_1_0; }

		//'ActorClass'
		public Keyword getActorClassKeyword_1() { return cActorClassKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_3() { return cDocuAssignment_3; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_3_0() { return cDocuDocumentationParserRuleCall_3_0; }

		//('extends' base=[ActorClass|FQN])?
		public Group getGroup_4() { return cGroup_4; }

		//'extends'
		public Keyword getExtendsKeyword_4_0() { return cExtendsKeyword_4_0; }

		//base=[ActorClass|FQN]
		public Assignment getBaseAssignment_4_1() { return cBaseAssignment_4_1; }

		//[ActorClass|FQN]
		public CrossReference getBaseActorClassCrossReference_4_1_0() { return cBaseActorClassCrossReference_4_1_0; }

		//FQN
		public RuleCall getBaseActorClassFQNParserRuleCall_4_1_0_1() { return cBaseActorClassFQNParserRuleCall_4_1_0_1; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_6() { return cAnnotationsAssignment_6; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_6_0() { return cAnnotationsAnnotationParserRuleCall_6_0; }

		//('Interface' '{' (serviceProvisionPoints+=SPP | interfacePorts+=Port)* '}')?
		public Group getGroup_7() { return cGroup_7; }

		//'Interface'
		public Keyword getInterfaceKeyword_7_0() { return cInterfaceKeyword_7_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }

		//(serviceProvisionPoints+=SPP | interfacePorts+=Port)*
		public Alternatives getAlternatives_7_2() { return cAlternatives_7_2; }

		//serviceProvisionPoints+=SPP
		public Assignment getServiceProvisionPointsAssignment_7_2_0() { return cServiceProvisionPointsAssignment_7_2_0; }

		//SPP
		public RuleCall getServiceProvisionPointsSPPParserRuleCall_7_2_0_0() { return cServiceProvisionPointsSPPParserRuleCall_7_2_0_0; }

		//interfacePorts+=Port
		public Assignment getInterfacePortsAssignment_7_2_1() { return cInterfacePortsAssignment_7_2_1; }

		//Port
		public RuleCall getInterfacePortsPortParserRuleCall_7_2_1_0() { return cInterfacePortsPortParserRuleCall_7_2_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_7_3() { return cRightCurlyBracketKeyword_7_3; }

		//('Structure' structureDocu=Documentation? '{' ('usercode1' userCode1=DetailCode)? ('usercode2' userCode2=DetailCode)?
		//('usercode3' userCode3=DetailCode)? (connections+=LayerConnection | bindings+=Binding |
		//serviceImplementations+=ServiceImplementation | attributes+=Attribute | actorRefs+=ActorRef | serviceAccessPoints+=SAP
		//| internalPorts+=Port | externalPorts+=ExternalPort)* '}')?
		public Group getGroup_8() { return cGroup_8; }

		//'Structure'
		public Keyword getStructureKeyword_8_0() { return cStructureKeyword_8_0; }

		//structureDocu=Documentation?
		public Assignment getStructureDocuAssignment_8_1() { return cStructureDocuAssignment_8_1; }

		//Documentation
		public RuleCall getStructureDocuDocumentationParserRuleCall_8_1_0() { return cStructureDocuDocumentationParserRuleCall_8_1_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_2() { return cLeftCurlyBracketKeyword_8_2; }

		//('usercode1' userCode1=DetailCode)?
		public Group getGroup_8_3() { return cGroup_8_3; }

		//'usercode1'
		public Keyword getUsercode1Keyword_8_3_0() { return cUsercode1Keyword_8_3_0; }

		//userCode1=DetailCode
		public Assignment getUserCode1Assignment_8_3_1() { return cUserCode1Assignment_8_3_1; }

		//DetailCode
		public RuleCall getUserCode1DetailCodeParserRuleCall_8_3_1_0() { return cUserCode1DetailCodeParserRuleCall_8_3_1_0; }

		//('usercode2' userCode2=DetailCode)?
		public Group getGroup_8_4() { return cGroup_8_4; }

		//'usercode2'
		public Keyword getUsercode2Keyword_8_4_0() { return cUsercode2Keyword_8_4_0; }

		//userCode2=DetailCode
		public Assignment getUserCode2Assignment_8_4_1() { return cUserCode2Assignment_8_4_1; }

		//DetailCode
		public RuleCall getUserCode2DetailCodeParserRuleCall_8_4_1_0() { return cUserCode2DetailCodeParserRuleCall_8_4_1_0; }

		//('usercode3' userCode3=DetailCode)?
		public Group getGroup_8_5() { return cGroup_8_5; }

		//'usercode3'
		public Keyword getUsercode3Keyword_8_5_0() { return cUsercode3Keyword_8_5_0; }

		//userCode3=DetailCode
		public Assignment getUserCode3Assignment_8_5_1() { return cUserCode3Assignment_8_5_1; }

		//DetailCode
		public RuleCall getUserCode3DetailCodeParserRuleCall_8_5_1_0() { return cUserCode3DetailCodeParserRuleCall_8_5_1_0; }

		//(connections+=LayerConnection | bindings+=Binding | serviceImplementations+=ServiceImplementation |
		//attributes+=Attribute | actorRefs+=ActorRef | serviceAccessPoints+=SAP | internalPorts+=Port |
		//externalPorts+=ExternalPort)*
		public Alternatives getAlternatives_8_6() { return cAlternatives_8_6; }

		//// workaround: reverse the order for serializer
		//connections+=LayerConnection
		public Assignment getConnectionsAssignment_8_6_0() { return cConnectionsAssignment_8_6_0; }

		//LayerConnection
		public RuleCall getConnectionsLayerConnectionParserRuleCall_8_6_0_0() { return cConnectionsLayerConnectionParserRuleCall_8_6_0_0; }

		//bindings+=Binding
		public Assignment getBindingsAssignment_8_6_1() { return cBindingsAssignment_8_6_1; }

		//Binding
		public RuleCall getBindingsBindingParserRuleCall_8_6_1_0() { return cBindingsBindingParserRuleCall_8_6_1_0; }

		//serviceImplementations+=ServiceImplementation
		public Assignment getServiceImplementationsAssignment_8_6_2() { return cServiceImplementationsAssignment_8_6_2; }

		//ServiceImplementation
		public RuleCall getServiceImplementationsServiceImplementationParserRuleCall_8_6_2_0() { return cServiceImplementationsServiceImplementationParserRuleCall_8_6_2_0; }

		//attributes+=Attribute
		public Assignment getAttributesAssignment_8_6_3() { return cAttributesAssignment_8_6_3; }

		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_8_6_3_0() { return cAttributesAttributeParserRuleCall_8_6_3_0; }

		//actorRefs+=ActorRef
		public Assignment getActorRefsAssignment_8_6_4() { return cActorRefsAssignment_8_6_4; }

		//ActorRef
		public RuleCall getActorRefsActorRefParserRuleCall_8_6_4_0() { return cActorRefsActorRefParserRuleCall_8_6_4_0; }

		//serviceAccessPoints+=SAP
		public Assignment getServiceAccessPointsAssignment_8_6_5() { return cServiceAccessPointsAssignment_8_6_5; }

		//SAP
		public RuleCall getServiceAccessPointsSAPParserRuleCall_8_6_5_0() { return cServiceAccessPointsSAPParserRuleCall_8_6_5_0; }

		//internalPorts+=Port
		public Assignment getInternalPortsAssignment_8_6_6() { return cInternalPortsAssignment_8_6_6; }

		//Port
		public RuleCall getInternalPortsPortParserRuleCall_8_6_6_0() { return cInternalPortsPortParserRuleCall_8_6_6_0; }

		//externalPorts+=ExternalPort
		public Assignment getExternalPortsAssignment_8_6_7() { return cExternalPortsAssignment_8_6_7; }

		//ExternalPort
		public RuleCall getExternalPortsExternalPortParserRuleCall_8_6_7_0() { return cExternalPortsExternalPortParserRuleCall_8_6_7_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_8_7() { return cRightCurlyBracketKeyword_8_7; }

		//('Behavior' behaviorDocu=Documentation? '{' behaviorAnnotations+=Annotation* (operations+=StandardOperation |
		//structors+=ClassStructor)* stateMachine=StateMachine? '}')?
		public Group getGroup_9() { return cGroup_9; }

		//'Behavior'
		public Keyword getBehaviorKeyword_9_0() { return cBehaviorKeyword_9_0; }

		//behaviorDocu=Documentation?
		public Assignment getBehaviorDocuAssignment_9_1() { return cBehaviorDocuAssignment_9_1; }

		//Documentation
		public RuleCall getBehaviorDocuDocumentationParserRuleCall_9_1_0() { return cBehaviorDocuDocumentationParserRuleCall_9_1_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_9_2() { return cLeftCurlyBracketKeyword_9_2; }

		//behaviorAnnotations+=Annotation*
		public Assignment getBehaviorAnnotationsAssignment_9_3() { return cBehaviorAnnotationsAssignment_9_3; }

		//Annotation
		public RuleCall getBehaviorAnnotationsAnnotationParserRuleCall_9_3_0() { return cBehaviorAnnotationsAnnotationParserRuleCall_9_3_0; }

		//(operations+=StandardOperation | structors+=ClassStructor)*
		public Alternatives getAlternatives_9_4() { return cAlternatives_9_4; }

		//operations+=StandardOperation
		public Assignment getOperationsAssignment_9_4_0() { return cOperationsAssignment_9_4_0; }

		//StandardOperation
		public RuleCall getOperationsStandardOperationParserRuleCall_9_4_0_0() { return cOperationsStandardOperationParserRuleCall_9_4_0_0; }

		//structors+=ClassStructor
		public Assignment getStructorsAssignment_9_4_1() { return cStructorsAssignment_9_4_1; }

		//ClassStructor
		public RuleCall getStructorsClassStructorParserRuleCall_9_4_1_0() { return cStructorsClassStructorParserRuleCall_9_4_1_0; }

		//stateMachine=StateMachine?
		public Assignment getStateMachineAssignment_9_5() { return cStateMachineAssignment_9_5; }

		//StateMachine
		public RuleCall getStateMachineStateMachineParserRuleCall_9_5_0() { return cStateMachineStateMachineParserRuleCall_9_5_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_9_6() { return cRightCurlyBracketKeyword_9_6; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class InterfaceItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.InterfaceItem");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPortParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSAPParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSPPParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//InterfaceItem:
		//	Port | SAP | SPP;
		@Override public ParserRule getRule() { return rule; }

		//Port | SAP | SPP
		public Alternatives getAlternatives() { return cAlternatives; }

		//Port
		public RuleCall getPortParserRuleCall_0() { return cPortParserRuleCall_0; }

		//SAP
		public RuleCall getSAPParserRuleCall_1() { return cSAPParserRuleCall_1; }

		//SPP
		public RuleCall getSPPParserRuleCall_2() { return cSPPParserRuleCall_2; }
	}

	public class PortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.Port");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cConjugatedAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cConjugatedConjugatedKeyword_0_0 = (Keyword)cConjugatedAssignment_0.eContents().get(0);
		private final Keyword cPortKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cMultiplicityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMultiplicityMULTIPLICITYParserRuleCall_3_0 = (RuleCall)cMultiplicityAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cProtocolAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cProtocolGeneralProtocolClassCrossReference_5_0 = (CrossReference)cProtocolAssignment_5.eContents().get(0);
		private final RuleCall cProtocolGeneralProtocolClassFQNParserRuleCall_5_0_1 = (RuleCall)cProtocolGeneralProtocolClassCrossReference_5_0.eContents().get(1);
		private final Assignment cAnnotationsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_6_0 = (RuleCall)cAnnotationsAssignment_6.eContents().get(0);
		private final Assignment cDocuAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDocuDocumentationParserRuleCall_7_0 = (RuleCall)cDocuAssignment_7.eContents().get(0);
		
		//Port:
		//	conjugated?='conjugated'? 'Port' name=ID multiplicity=MULTIPLICITY? ':' protocol=[GeneralProtocolClass|FQN]
		//	annotations+=Annotation* docu=Documentation?;
		@Override public ParserRule getRule() { return rule; }

		//conjugated?='conjugated'? 'Port' name=ID multiplicity=MULTIPLICITY? ':' protocol=[GeneralProtocolClass|FQN]
		//annotations+=Annotation* docu=Documentation?
		public Group getGroup() { return cGroup; }

		//conjugated?='conjugated'?
		public Assignment getConjugatedAssignment_0() { return cConjugatedAssignment_0; }

		//'conjugated'
		public Keyword getConjugatedConjugatedKeyword_0_0() { return cConjugatedConjugatedKeyword_0_0; }

		//'Port'
		public Keyword getPortKeyword_1() { return cPortKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//multiplicity=MULTIPLICITY?
		public Assignment getMultiplicityAssignment_3() { return cMultiplicityAssignment_3; }

		//MULTIPLICITY
		public RuleCall getMultiplicityMULTIPLICITYParserRuleCall_3_0() { return cMultiplicityMULTIPLICITYParserRuleCall_3_0; }

		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//protocol=[GeneralProtocolClass|FQN]
		public Assignment getProtocolAssignment_5() { return cProtocolAssignment_5; }

		//[GeneralProtocolClass|FQN]
		public CrossReference getProtocolGeneralProtocolClassCrossReference_5_0() { return cProtocolGeneralProtocolClassCrossReference_5_0; }

		//FQN
		public RuleCall getProtocolGeneralProtocolClassFQNParserRuleCall_5_0_1() { return cProtocolGeneralProtocolClassFQNParserRuleCall_5_0_1; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_6() { return cAnnotationsAssignment_6; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_6_0() { return cAnnotationsAnnotationParserRuleCall_6_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_7() { return cDocuAssignment_7; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_7_0() { return cDocuDocumentationParserRuleCall_7_0; }
	}

	public class ExternalPortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.ExternalPort");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExternalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cPortKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cInterfacePortAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cInterfacePortPortCrossReference_2_0 = (CrossReference)cInterfacePortAssignment_2.eContents().get(0);
		private final RuleCall cInterfacePortPortIDTerminalRuleCall_2_0_1 = (RuleCall)cInterfacePortPortCrossReference_2_0.eContents().get(1);
		
		//ExternalPort:
		//	'external' 'Port' interfacePort=[Port];
		@Override public ParserRule getRule() { return rule; }

		//'external' 'Port' interfacePort=[Port]
		public Group getGroup() { return cGroup; }

		//'external'
		public Keyword getExternalKeyword_0() { return cExternalKeyword_0; }

		//'Port'
		public Keyword getPortKeyword_1() { return cPortKeyword_1; }

		//interfacePort=[Port]
		public Assignment getInterfacePortAssignment_2() { return cInterfacePortAssignment_2; }

		//[Port]
		public CrossReference getInterfacePortPortCrossReference_2_0() { return cInterfacePortPortCrossReference_2_0; }

		//ID
		public RuleCall getInterfacePortPortIDTerminalRuleCall_2_0_1() { return cInterfacePortPortIDTerminalRuleCall_2_0_1; }
	}

	public class SAPElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.SAP");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSAPKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cProtocolAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cProtocolProtocolClassCrossReference_3_0 = (CrossReference)cProtocolAssignment_3.eContents().get(0);
		private final RuleCall cProtocolProtocolClassFQNParserRuleCall_3_0_1 = (RuleCall)cProtocolProtocolClassCrossReference_3_0.eContents().get(1);
		private final Assignment cDocuAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDocuDocumentationParserRuleCall_4_0 = (RuleCall)cDocuAssignment_4.eContents().get(0);
		
		//SAP:
		//	'SAP' name=ID ':' protocol=[ProtocolClass|FQN] docu=Documentation?;
		@Override public ParserRule getRule() { return rule; }

		//'SAP' name=ID ':' protocol=[ProtocolClass|FQN] docu=Documentation?
		public Group getGroup() { return cGroup; }

		//'SAP'
		public Keyword getSAPKeyword_0() { return cSAPKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//protocol=[ProtocolClass|FQN]
		public Assignment getProtocolAssignment_3() { return cProtocolAssignment_3; }

		//[ProtocolClass|FQN]
		public CrossReference getProtocolProtocolClassCrossReference_3_0() { return cProtocolProtocolClassCrossReference_3_0; }

		//FQN
		public RuleCall getProtocolProtocolClassFQNParserRuleCall_3_0_1() { return cProtocolProtocolClassFQNParserRuleCall_3_0_1; }

		//docu=Documentation?
		public Assignment getDocuAssignment_4() { return cDocuAssignment_4; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_4_0() { return cDocuDocumentationParserRuleCall_4_0; }
	}

	public class SPPElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.SPP");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSPPKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cProtocolAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cProtocolProtocolClassCrossReference_3_0 = (CrossReference)cProtocolAssignment_3.eContents().get(0);
		private final RuleCall cProtocolProtocolClassFQNParserRuleCall_3_0_1 = (RuleCall)cProtocolProtocolClassCrossReference_3_0.eContents().get(1);
		private final Assignment cDocuAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDocuDocumentationParserRuleCall_4_0 = (RuleCall)cDocuAssignment_4.eContents().get(0);
		
		//SPP:
		//	'SPP' name=ID ':' protocol=[ProtocolClass|FQN] docu=Documentation?;
		@Override public ParserRule getRule() { return rule; }

		//'SPP' name=ID ':' protocol=[ProtocolClass|FQN] docu=Documentation?
		public Group getGroup() { return cGroup; }

		//'SPP'
		public Keyword getSPPKeyword_0() { return cSPPKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//protocol=[ProtocolClass|FQN]
		public Assignment getProtocolAssignment_3() { return cProtocolAssignment_3; }

		//[ProtocolClass|FQN]
		public CrossReference getProtocolProtocolClassCrossReference_3_0() { return cProtocolProtocolClassCrossReference_3_0; }

		//FQN
		public RuleCall getProtocolProtocolClassFQNParserRuleCall_3_0_1() { return cProtocolProtocolClassFQNParserRuleCall_3_0_1; }

		//docu=Documentation?
		public Assignment getDocuAssignment_4() { return cDocuAssignment_4; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_4_0() { return cDocuDocumentationParserRuleCall_4_0; }
	}

	public class ServiceImplementationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.ServiceImplementation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceImplementationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cOfKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSppAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cSppSPPCrossReference_2_0 = (CrossReference)cSppAssignment_2.eContents().get(0);
		private final RuleCall cSppSPPIDTerminalRuleCall_2_0_1 = (RuleCall)cSppSPPCrossReference_2_0.eContents().get(1);
		
		//ServiceImplementation:
		//	'ServiceImplementation' 'of' spp=[SPP];
		@Override public ParserRule getRule() { return rule; }

		//'ServiceImplementation' 'of' spp=[SPP]
		public Group getGroup() { return cGroup; }

		//'ServiceImplementation'
		public Keyword getServiceImplementationKeyword_0() { return cServiceImplementationKeyword_0; }

		//'of'
		public Keyword getOfKeyword_1() { return cOfKeyword_1; }

		//spp=[SPP]
		public Assignment getSppAssignment_2() { return cSppAssignment_2; }

		//[SPP]
		public CrossReference getSppSPPCrossReference_2_0() { return cSppSPPCrossReference_2_0; }

		//ID
		public RuleCall getSppSPPIDTerminalRuleCall_2_0_1() { return cSppSPPIDTerminalRuleCall_2_0_1; }
	}

	public class LogicalSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.LogicalSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLogicalSystemKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDocuAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDocuDocumentationParserRuleCall_2_0 = (RuleCall)cDocuAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAnnotationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_4_0 = (RuleCall)cAnnotationsAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cConnectionsAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final RuleCall cConnectionsLayerConnectionParserRuleCall_5_0_0 = (RuleCall)cConnectionsAssignment_5_0.eContents().get(0);
		private final Assignment cBindingsAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final RuleCall cBindingsBindingParserRuleCall_5_1_0 = (RuleCall)cBindingsAssignment_5_1.eContents().get(0);
		private final Assignment cSubSystemsAssignment_5_2 = (Assignment)cAlternatives_5.eContents().get(2);
		private final RuleCall cSubSystemsSubSystemRefParserRuleCall_5_2_0 = (RuleCall)cSubSystemsAssignment_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//LogicalSystem:
		//	'LogicalSystem' name=ID docu=Documentation? '{'
		//	annotations+=Annotation* (connections+=LayerConnection | bindings+=Binding | subSystems+=SubSystemRef)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }

		//'LogicalSystem' name=ID docu=Documentation? '{' annotations+=Annotation* (connections+=LayerConnection |
		//bindings+=Binding | subSystems+=SubSystemRef)* '}'
		public Group getGroup() { return cGroup; }

		//'LogicalSystem'
		public Keyword getLogicalSystemKeyword_0() { return cLogicalSystemKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_2() { return cDocuAssignment_2; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_2_0() { return cDocuDocumentationParserRuleCall_2_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_4() { return cAnnotationsAssignment_4; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_4_0() { return cAnnotationsAnnotationParserRuleCall_4_0; }

		//(connections+=LayerConnection | bindings+=Binding | subSystems+=SubSystemRef)*
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//connections+=LayerConnection
		public Assignment getConnectionsAssignment_5_0() { return cConnectionsAssignment_5_0; }

		//LayerConnection
		public RuleCall getConnectionsLayerConnectionParserRuleCall_5_0_0() { return cConnectionsLayerConnectionParserRuleCall_5_0_0; }

		//bindings+=Binding
		public Assignment getBindingsAssignment_5_1() { return cBindingsAssignment_5_1; }

		//Binding
		public RuleCall getBindingsBindingParserRuleCall_5_1_0() { return cBindingsBindingParserRuleCall_5_1_0; }

		//subSystems+=SubSystemRef
		public Assignment getSubSystemsAssignment_5_2() { return cSubSystemsAssignment_5_2; }

		//SubSystemRef
		public RuleCall getSubSystemsSubSystemRefParserRuleCall_5_2_0() { return cSubSystemsSubSystemRefParserRuleCall_5_2_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class ActorContainerRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.ActorContainerRef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSubSystemRefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cActorRefParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ActorContainerRef:
		//	SubSystemRef | ActorRef;
		@Override public ParserRule getRule() { return rule; }

		//SubSystemRef | ActorRef
		public Alternatives getAlternatives() { return cAlternatives; }

		//SubSystemRef
		public RuleCall getSubSystemRefParserRuleCall_0() { return cSubSystemRefParserRuleCall_0; }

		//ActorRef
		public RuleCall getActorRefParserRuleCall_1() { return cActorRefParserRuleCall_1; }
	}

	public class SubSystemRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.SubSystemRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubSystemRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeSubSystemClassCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeSubSystemClassFQNParserRuleCall_3_0_1 = (RuleCall)cTypeSubSystemClassCrossReference_3_0.eContents().get(1);
		private final Assignment cDocuAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDocuDocumentationParserRuleCall_4_0 = (RuleCall)cDocuAssignment_4.eContents().get(0);
		
		//SubSystemRef:
		//	'SubSystemRef' name=ID ':' type=[SubSystemClass|FQN] docu=Documentation?;
		@Override public ParserRule getRule() { return rule; }

		//'SubSystemRef' name=ID ':' type=[SubSystemClass|FQN] docu=Documentation?
		public Group getGroup() { return cGroup; }

		//'SubSystemRef'
		public Keyword getSubSystemRefKeyword_0() { return cSubSystemRefKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=[SubSystemClass|FQN]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//[SubSystemClass|FQN]
		public CrossReference getTypeSubSystemClassCrossReference_3_0() { return cTypeSubSystemClassCrossReference_3_0; }

		//FQN
		public RuleCall getTypeSubSystemClassFQNParserRuleCall_3_0_1() { return cTypeSubSystemClassFQNParserRuleCall_3_0_1; }

		//docu=Documentation?
		public Assignment getDocuAssignment_4() { return cDocuAssignment_4; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_4_0() { return cDocuDocumentationParserRuleCall_4_0; }
	}

	public class SubSystemClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.SubSystemClass");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSubSystemClassKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cDocuAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDocuDocumentationParserRuleCall_2_0 = (RuleCall)cDocuAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAnnotationsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_4_0 = (RuleCall)cAnnotationsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cUsercode1Keyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cUserCode1Assignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cUserCode1DetailCodeParserRuleCall_5_1_0 = (RuleCall)cUserCode1Assignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cUsercode2Keyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cUserCode2Assignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cUserCode2DetailCodeParserRuleCall_6_1_0 = (RuleCall)cUserCode2Assignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cUsercode3Keyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cUserCode3Assignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cUserCode3DetailCodeParserRuleCall_7_1_0 = (RuleCall)cUserCode3Assignment_7_1.eContents().get(0);
		private final Alternatives cAlternatives_8 = (Alternatives)cGroup.eContents().get(8);
		private final Assignment cActorInstanceMappingsAssignment_8_0 = (Assignment)cAlternatives_8.eContents().get(0);
		private final RuleCall cActorInstanceMappingsActorInstanceMappingParserRuleCall_8_0_0 = (RuleCall)cActorInstanceMappingsAssignment_8_0.eContents().get(0);
		private final Assignment cThreadsAssignment_8_1 = (Assignment)cAlternatives_8.eContents().get(1);
		private final RuleCall cThreadsLogicalThreadParserRuleCall_8_1_0 = (RuleCall)cThreadsAssignment_8_1.eContents().get(0);
		private final Assignment cConnectionsAssignment_8_2 = (Assignment)cAlternatives_8.eContents().get(2);
		private final RuleCall cConnectionsLayerConnectionParserRuleCall_8_2_0 = (RuleCall)cConnectionsAssignment_8_2.eContents().get(0);
		private final Assignment cBindingsAssignment_8_3 = (Assignment)cAlternatives_8.eContents().get(3);
		private final RuleCall cBindingsBindingParserRuleCall_8_3_0 = (RuleCall)cBindingsAssignment_8_3.eContents().get(0);
		private final Assignment cActorRefsAssignment_8_4 = (Assignment)cAlternatives_8.eContents().get(4);
		private final RuleCall cActorRefsActorRefParserRuleCall_8_4_0 = (RuleCall)cActorRefsAssignment_8_4.eContents().get(0);
		private final Assignment cServiceProvisionPointsAssignment_8_5 = (Assignment)cAlternatives_8.eContents().get(5);
		private final RuleCall cServiceProvisionPointsSPPParserRuleCall_8_5_0 = (RuleCall)cServiceProvisionPointsAssignment_8_5.eContents().get(0);
		private final Assignment cRelayPortsAssignment_8_6 = (Assignment)cAlternatives_8.eContents().get(6);
		private final RuleCall cRelayPortsPortParserRuleCall_8_6_0 = (RuleCall)cRelayPortsAssignment_8_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//SubSystemClass:
		//	'SubSystemClass' name=ID docu=Documentation? '{'
		//	annotations+=Annotation* ('usercode1' userCode1=DetailCode)? ('usercode2' userCode2=DetailCode)? ('usercode3'
		//	userCode3=DetailCode)? (actorInstanceMappings+=ActorInstanceMapping | threads+=LogicalThread |
		//	connections+=LayerConnection | bindings+=Binding | actorRefs+=ActorRef | serviceProvisionPoints+=SPP |
		//	relayPorts+=Port)*
		//	'}';
		@Override public ParserRule getRule() { return rule; }

		//'SubSystemClass' name=ID docu=Documentation? '{' annotations+=Annotation* ('usercode1' userCode1=DetailCode)?
		//('usercode2' userCode2=DetailCode)? ('usercode3' userCode3=DetailCode)? (actorInstanceMappings+=ActorInstanceMapping |
		//threads+=LogicalThread | connections+=LayerConnection | bindings+=Binding | actorRefs+=ActorRef |
		//serviceProvisionPoints+=SPP | relayPorts+=Port)* '}'
		public Group getGroup() { return cGroup; }

		//'SubSystemClass'
		public Keyword getSubSystemClassKeyword_0() { return cSubSystemClassKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//docu=Documentation?
		public Assignment getDocuAssignment_2() { return cDocuAssignment_2; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_2_0() { return cDocuDocumentationParserRuleCall_2_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_4() { return cAnnotationsAssignment_4; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_4_0() { return cAnnotationsAnnotationParserRuleCall_4_0; }

		//('usercode1' userCode1=DetailCode)?
		public Group getGroup_5() { return cGroup_5; }

		//'usercode1'
		public Keyword getUsercode1Keyword_5_0() { return cUsercode1Keyword_5_0; }

		//userCode1=DetailCode
		public Assignment getUserCode1Assignment_5_1() { return cUserCode1Assignment_5_1; }

		//DetailCode
		public RuleCall getUserCode1DetailCodeParserRuleCall_5_1_0() { return cUserCode1DetailCodeParserRuleCall_5_1_0; }

		//('usercode2' userCode2=DetailCode)?
		public Group getGroup_6() { return cGroup_6; }

		//'usercode2'
		public Keyword getUsercode2Keyword_6_0() { return cUsercode2Keyword_6_0; }

		//userCode2=DetailCode
		public Assignment getUserCode2Assignment_6_1() { return cUserCode2Assignment_6_1; }

		//DetailCode
		public RuleCall getUserCode2DetailCodeParserRuleCall_6_1_0() { return cUserCode2DetailCodeParserRuleCall_6_1_0; }

		//('usercode3' userCode3=DetailCode)?
		public Group getGroup_7() { return cGroup_7; }

		//'usercode3'
		public Keyword getUsercode3Keyword_7_0() { return cUsercode3Keyword_7_0; }

		//userCode3=DetailCode
		public Assignment getUserCode3Assignment_7_1() { return cUserCode3Assignment_7_1; }

		//DetailCode
		public RuleCall getUserCode3DetailCodeParserRuleCall_7_1_0() { return cUserCode3DetailCodeParserRuleCall_7_1_0; }

		//(actorInstanceMappings+=ActorInstanceMapping | threads+=LogicalThread | connections+=LayerConnection | bindings+=Binding
		//| actorRefs+=ActorRef | serviceProvisionPoints+=SPP | relayPorts+=Port)*
		public Alternatives getAlternatives_8() { return cAlternatives_8; }

		//// workaround: reverse the order for serializer
		//actorInstanceMappings+=ActorInstanceMapping
		public Assignment getActorInstanceMappingsAssignment_8_0() { return cActorInstanceMappingsAssignment_8_0; }

		//ActorInstanceMapping
		public RuleCall getActorInstanceMappingsActorInstanceMappingParserRuleCall_8_0_0() { return cActorInstanceMappingsActorInstanceMappingParserRuleCall_8_0_0; }

		//threads+=LogicalThread
		public Assignment getThreadsAssignment_8_1() { return cThreadsAssignment_8_1; }

		//LogicalThread
		public RuleCall getThreadsLogicalThreadParserRuleCall_8_1_0() { return cThreadsLogicalThreadParserRuleCall_8_1_0; }

		//connections+=LayerConnection
		public Assignment getConnectionsAssignment_8_2() { return cConnectionsAssignment_8_2; }

		//LayerConnection
		public RuleCall getConnectionsLayerConnectionParserRuleCall_8_2_0() { return cConnectionsLayerConnectionParserRuleCall_8_2_0; }

		//bindings+=Binding
		public Assignment getBindingsAssignment_8_3() { return cBindingsAssignment_8_3; }

		//Binding
		public RuleCall getBindingsBindingParserRuleCall_8_3_0() { return cBindingsBindingParserRuleCall_8_3_0; }

		//actorRefs+=ActorRef
		public Assignment getActorRefsAssignment_8_4() { return cActorRefsAssignment_8_4; }

		//ActorRef
		public RuleCall getActorRefsActorRefParserRuleCall_8_4_0() { return cActorRefsActorRefParserRuleCall_8_4_0; }

		//serviceProvisionPoints+=SPP
		public Assignment getServiceProvisionPointsAssignment_8_5() { return cServiceProvisionPointsAssignment_8_5; }

		//SPP
		public RuleCall getServiceProvisionPointsSPPParserRuleCall_8_5_0() { return cServiceProvisionPointsSPPParserRuleCall_8_5_0; }

		//relayPorts+=Port
		public Assignment getRelayPortsAssignment_8_6() { return cRelayPortsAssignment_8_6; }

		//Port
		public RuleCall getRelayPortsPortParserRuleCall_8_6_0() { return cRelayPortsPortParserRuleCall_8_6_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class LogicalThreadElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.LogicalThread");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLogicalThreadKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//LogicalThread:
		//	'LogicalThread' name=ID;
		@Override public ParserRule getRule() { return rule; }

		//'LogicalThread' name=ID
		public Group getGroup() { return cGroup; }

		//'LogicalThread'
		public Keyword getLogicalThreadKeyword_0() { return cLogicalThreadKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
	}

	public class ActorInstanceMappingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.ActorInstanceMapping");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActorInstanceMappingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPathAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPathRefPathParserRuleCall_1_0 = (RuleCall)cPathAssignment_1.eContents().get(0);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cThreadAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cThreadLogicalThreadCrossReference_3_0 = (CrossReference)cThreadAssignment_3.eContents().get(0);
		private final RuleCall cThreadLogicalThreadIDTerminalRuleCall_3_0_1 = (RuleCall)cThreadLogicalThreadCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cActorInstanceMappingsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cActorInstanceMappingsActorInstanceMappingParserRuleCall_4_1_0 = (RuleCall)cActorInstanceMappingsAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		
		//ActorInstanceMapping:
		//	'ActorInstanceMapping' path=RefPath '->' thread=[LogicalThread] ('{'
		//	actorInstanceMappings+=ActorInstanceMapping*
		//	'}')?;
		@Override public ParserRule getRule() { return rule; }

		//'ActorInstanceMapping' path=RefPath '->' thread=[LogicalThread] ('{' actorInstanceMappings+=ActorInstanceMapping* '}')?
		public Group getGroup() { return cGroup; }

		//'ActorInstanceMapping'
		public Keyword getActorInstanceMappingKeyword_0() { return cActorInstanceMappingKeyword_0; }

		//path=RefPath
		public Assignment getPathAssignment_1() { return cPathAssignment_1; }

		//RefPath
		public RuleCall getPathRefPathParserRuleCall_1_0() { return cPathRefPathParserRuleCall_1_0; }

		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_2() { return cHyphenMinusGreaterThanSignKeyword_2; }

		//thread=[LogicalThread]
		public Assignment getThreadAssignment_3() { return cThreadAssignment_3; }

		//[LogicalThread]
		public CrossReference getThreadLogicalThreadCrossReference_3_0() { return cThreadLogicalThreadCrossReference_3_0; }

		//ID
		public RuleCall getThreadLogicalThreadIDTerminalRuleCall_3_0_1() { return cThreadLogicalThreadIDTerminalRuleCall_3_0_1; }

		//('{' actorInstanceMappings+=ActorInstanceMapping* '}')?
		public Group getGroup_4() { return cGroup_4; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_0() { return cLeftCurlyBracketKeyword_4_0; }

		//actorInstanceMappings+=ActorInstanceMapping*
		public Assignment getActorInstanceMappingsAssignment_4_1() { return cActorInstanceMappingsAssignment_4_1; }

		//ActorInstanceMapping
		public RuleCall getActorInstanceMappingsActorInstanceMappingParserRuleCall_4_1_0() { return cActorInstanceMappingsActorInstanceMappingParserRuleCall_4_1_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_4_2() { return cRightCurlyBracketKeyword_4_2; }
	}

	public class RefPathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.RefPath");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cRefsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cRefsRefSegmentParserRuleCall_0_0 = (RuleCall)cRefsAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cSolidusKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cRefsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRefsRefSegmentParserRuleCall_1_1_0 = (RuleCall)cRefsAssignment_1_1.eContents().get(0);
		
		//RefPath:
		//	refs+=RefSegment ('/' refs+=RefSegment)*;
		@Override public ParserRule getRule() { return rule; }

		//refs+=RefSegment ('/' refs+=RefSegment)*
		public Group getGroup() { return cGroup; }

		//refs+=RefSegment
		public Assignment getRefsAssignment_0() { return cRefsAssignment_0; }

		//RefSegment
		public RuleCall getRefsRefSegmentParserRuleCall_0_0() { return cRefsRefSegmentParserRuleCall_0_0; }

		//('/' refs+=RefSegment)*
		public Group getGroup_1() { return cGroup_1; }

		//'/'
		public Keyword getSolidusKeyword_1_0() { return cSolidusKeyword_1_0; }

		//refs+=RefSegment
		public Assignment getRefsAssignment_1_1() { return cRefsAssignment_1_1; }

		//RefSegment
		public RuleCall getRefsRefSegmentParserRuleCall_1_1_0() { return cRefsRefSegmentParserRuleCall_1_1_0; }
	}

	public class RefSegmentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.RefSegment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cRefAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cRefIDTerminalRuleCall_0_0 = (RuleCall)cRefAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cIdxAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cIdxINTTerminalRuleCall_1_1_0 = (RuleCall)cIdxAssignment_1_1.eContents().get(0);
		
		//RefSegment:
		//	ref=ID (':' idx=INT)?;
		@Override public ParserRule getRule() { return rule; }

		//ref=ID (':' idx=INT)?
		public Group getGroup() { return cGroup; }

		//ref=ID
		public Assignment getRefAssignment_0() { return cRefAssignment_0; }

		//ID
		public RuleCall getRefIDTerminalRuleCall_0_0() { return cRefIDTerminalRuleCall_0_0; }

		//(':' idx=INT)?
		public Group getGroup_1() { return cGroup_1; }

		//':'
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }

		//idx=INT
		public Assignment getIdxAssignment_1_1() { return cIdxAssignment_1_1; }

		//INT
		public RuleCall getIdxINTTerminalRuleCall_1_1_0() { return cIdxINTTerminalRuleCall_1_1_0; }
	}

	public class BindingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.Binding");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBindingKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEndpoint1Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEndpoint1BindingEndPointParserRuleCall_1_0 = (RuleCall)cEndpoint1Assignment_1.eContents().get(0);
		private final Keyword cAndKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cEndpoint2Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cEndpoint2BindingEndPointParserRuleCall_3_0 = (RuleCall)cEndpoint2Assignment_3.eContents().get(0);
		
		//Binding:
		//	'Binding' endpoint1=BindingEndPoint 'and' endpoint2=BindingEndPoint;
		@Override public ParserRule getRule() { return rule; }

		//'Binding' endpoint1=BindingEndPoint 'and' endpoint2=BindingEndPoint
		public Group getGroup() { return cGroup; }

		//'Binding'
		public Keyword getBindingKeyword_0() { return cBindingKeyword_0; }

		//endpoint1=BindingEndPoint
		public Assignment getEndpoint1Assignment_1() { return cEndpoint1Assignment_1; }

		//BindingEndPoint
		public RuleCall getEndpoint1BindingEndPointParserRuleCall_1_0() { return cEndpoint1BindingEndPointParserRuleCall_1_0; }

		//'and'
		public Keyword getAndKeyword_2() { return cAndKeyword_2; }

		//endpoint2=BindingEndPoint
		public Assignment getEndpoint2Assignment_3() { return cEndpoint2Assignment_3; }

		//BindingEndPoint
		public RuleCall getEndpoint2BindingEndPointParserRuleCall_3_0() { return cEndpoint2BindingEndPointParserRuleCall_3_0; }
	}

	public class BindingEndPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.BindingEndPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Assignment cActorRefAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final CrossReference cActorRefActorContainerRefCrossReference_0_0_0 = (CrossReference)cActorRefAssignment_0_0.eContents().get(0);
		private final RuleCall cActorRefActorContainerRefIDTerminalRuleCall_0_0_0_1 = (RuleCall)cActorRefActorContainerRefCrossReference_0_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cPortAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPortPortCrossReference_1_0 = (CrossReference)cPortAssignment_1.eContents().get(0);
		private final RuleCall cPortPortIDTerminalRuleCall_1_0_1 = (RuleCall)cPortPortCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cSubKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSubAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSubSubProtocolCrossReference_2_1_0 = (CrossReference)cSubAssignment_2_1.eContents().get(0);
		private final RuleCall cSubSubProtocolIDTerminalRuleCall_2_1_0_1 = (RuleCall)cSubSubProtocolCrossReference_2_1_0.eContents().get(1);
		
		//BindingEndPoint:
		//	(actorRef=[ActorContainerRef] '.')? port=[Port] ('sub' sub=[SubProtocol])?;
		@Override public ParserRule getRule() { return rule; }

		//(actorRef=[ActorContainerRef] '.')? port=[Port] ('sub' sub=[SubProtocol])?
		public Group getGroup() { return cGroup; }

		//(actorRef=[ActorContainerRef] '.')?
		public Group getGroup_0() { return cGroup_0; }

		//actorRef=[ActorContainerRef]
		public Assignment getActorRefAssignment_0_0() { return cActorRefAssignment_0_0; }

		//[ActorContainerRef]
		public CrossReference getActorRefActorContainerRefCrossReference_0_0_0() { return cActorRefActorContainerRefCrossReference_0_0_0; }

		//ID
		public RuleCall getActorRefActorContainerRefIDTerminalRuleCall_0_0_0_1() { return cActorRefActorContainerRefIDTerminalRuleCall_0_0_0_1; }

		//'.'
		public Keyword getFullStopKeyword_0_1() { return cFullStopKeyword_0_1; }

		//port=[Port]
		public Assignment getPortAssignment_1() { return cPortAssignment_1; }

		//[Port]
		public CrossReference getPortPortCrossReference_1_0() { return cPortPortCrossReference_1_0; }

		//ID
		public RuleCall getPortPortIDTerminalRuleCall_1_0_1() { return cPortPortIDTerminalRuleCall_1_0_1; }

		//('sub' sub=[SubProtocol])?
		public Group getGroup_2() { return cGroup_2; }

		//'sub'
		public Keyword getSubKeyword_2_0() { return cSubKeyword_2_0; }

		//sub=[SubProtocol]
		public Assignment getSubAssignment_2_1() { return cSubAssignment_2_1; }

		//[SubProtocol]
		public CrossReference getSubSubProtocolCrossReference_2_1_0() { return cSubSubProtocolCrossReference_2_1_0; }

		//ID
		public RuleCall getSubSubProtocolIDTerminalRuleCall_2_1_0_1() { return cSubSubProtocolIDTerminalRuleCall_2_1_0_1; }
	}

	public class LayerConnectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.LayerConnection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLayerConnectionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cFromAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cFromSAPointParserRuleCall_1_0 = (RuleCall)cFromAssignment_1.eContents().get(0);
		private final Keyword cSatisfied_byKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cToAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cToSPPointParserRuleCall_3_0 = (RuleCall)cToAssignment_3.eContents().get(0);
		
		//LayerConnection:
		//	'LayerConnection' from=SAPoint 'satisfied_by' to=SPPoint;
		@Override public ParserRule getRule() { return rule; }

		//'LayerConnection' from=SAPoint 'satisfied_by' to=SPPoint
		public Group getGroup() { return cGroup; }

		//'LayerConnection'
		public Keyword getLayerConnectionKeyword_0() { return cLayerConnectionKeyword_0; }

		//from=SAPoint
		public Assignment getFromAssignment_1() { return cFromAssignment_1; }

		//SAPoint
		public RuleCall getFromSAPointParserRuleCall_1_0() { return cFromSAPointParserRuleCall_1_0; }

		//'satisfied_by'
		public Keyword getSatisfied_byKeyword_2() { return cSatisfied_byKeyword_2; }

		//to=SPPoint
		public Assignment getToAssignment_3() { return cToAssignment_3; }

		//SPPoint
		public RuleCall getToSPPointParserRuleCall_3_0() { return cToSPPointParserRuleCall_3_0; }
	}

	public class SAPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.SAPoint");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cRefSAPointParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRelaySAPointParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//SAPoint:
		//	RefSAPoint | RelaySAPoint;
		@Override public ParserRule getRule() { return rule; }

		//RefSAPoint | RelaySAPoint
		public Alternatives getAlternatives() { return cAlternatives; }

		//RefSAPoint
		public RuleCall getRefSAPointParserRuleCall_0() { return cRefSAPointParserRuleCall_0; }

		//RelaySAPoint
		public RuleCall getRelaySAPointParserRuleCall_1() { return cRelaySAPointParserRuleCall_1; }
	}

	public class RefSAPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.RefSAPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefActorContainerRefCrossReference_1_0 = (CrossReference)cRefAssignment_1.eContents().get(0);
		private final RuleCall cRefActorContainerRefIDTerminalRuleCall_1_0_1 = (RuleCall)cRefActorContainerRefCrossReference_1_0.eContents().get(1);
		
		//RefSAPoint: // satisfies a sub actor
		//	'ref' ref=[ActorContainerRef];
		@Override public ParserRule getRule() { return rule; }

		//// satisfies a sub actor
		//'ref' ref=[ActorContainerRef]
		public Group getGroup() { return cGroup; }

		//// satisfies a sub actor
		//'ref'
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }

		//ref=[ActorContainerRef]
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }

		//[ActorContainerRef]
		public CrossReference getRefActorContainerRefCrossReference_1_0() { return cRefActorContainerRefCrossReference_1_0; }

		//ID
		public RuleCall getRefActorContainerRefIDTerminalRuleCall_1_0_1() { return cRefActorContainerRefIDTerminalRuleCall_1_0_1; }
	}

	public class RelaySAPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.RelaySAPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRelay_sapKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRelayAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRelaySPPCrossReference_1_0 = (CrossReference)cRelayAssignment_1.eContents().get(0);
		private final RuleCall cRelaySPPIDTerminalRuleCall_1_0_1 = (RuleCall)cRelaySPPCrossReference_1_0.eContents().get(1);
		
		//RelaySAPoint: // relays from own interface
		//	'relay_sap' relay=[SPP];
		@Override public ParserRule getRule() { return rule; }

		//// relays from own interface
		//'relay_sap' relay=[SPP]
		public Group getGroup() { return cGroup; }

		//// relays from own interface
		//'relay_sap'
		public Keyword getRelay_sapKeyword_0() { return cRelay_sapKeyword_0; }

		//relay=[SPP]
		public Assignment getRelayAssignment_1() { return cRelayAssignment_1; }

		//[SPP]
		public CrossReference getRelaySPPCrossReference_1_0() { return cRelaySPPCrossReference_1_0; }

		//ID
		public RuleCall getRelaySPPIDTerminalRuleCall_1_0_1() { return cRelaySPPIDTerminalRuleCall_1_0_1; }
	}

	public class SPPointElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.SPPoint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cRefAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cRefActorContainerRefCrossReference_0_0 = (CrossReference)cRefAssignment_0.eContents().get(0);
		private final RuleCall cRefActorContainerRefIDTerminalRuleCall_0_0_1 = (RuleCall)cRefActorContainerRefCrossReference_0_0.eContents().get(1);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cServiceAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cServiceSPPCrossReference_2_0 = (CrossReference)cServiceAssignment_2.eContents().get(0);
		private final RuleCall cServiceSPPIDTerminalRuleCall_2_0_1 = (RuleCall)cServiceSPPCrossReference_2_0.eContents().get(1);
		
		//SPPoint:
		//	ref=[ActorContainerRef] '.' service=[SPP];
		@Override public ParserRule getRule() { return rule; }

		//ref=[ActorContainerRef] '.' service=[SPP]
		public Group getGroup() { return cGroup; }

		//ref=[ActorContainerRef]
		public Assignment getRefAssignment_0() { return cRefAssignment_0; }

		//[ActorContainerRef]
		public CrossReference getRefActorContainerRefCrossReference_0_0() { return cRefActorContainerRefCrossReference_0_0; }

		//ID
		public RuleCall getRefActorContainerRefIDTerminalRuleCall_0_0_1() { return cRefActorContainerRefIDTerminalRuleCall_0_0_1; }

		//'.'
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }

		//service=[SPP]
		public Assignment getServiceAssignment_2() { return cServiceAssignment_2; }

		//[SPP]
		public CrossReference getServiceSPPCrossReference_2_0() { return cServiceSPPCrossReference_2_0; }

		//ID
		public RuleCall getServiceSPPIDTerminalRuleCall_2_0_1() { return cServiceSPPIDTerminalRuleCall_2_0_1; }
	}

	public class ActorRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.ActorRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cRefTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cRefTypeReferenceTypeEnumRuleCall_0_0 = (RuleCall)cRefTypeAssignment_0.eContents().get(0);
		private final Keyword cActorRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cMultiplicityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMultiplicityMULTIPLICITYParserRuleCall_3_0 = (RuleCall)cMultiplicityAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cTypeActorClassCrossReference_5_0 = (CrossReference)cTypeAssignment_5.eContents().get(0);
		private final RuleCall cTypeActorClassFQNParserRuleCall_5_0_1 = (RuleCall)cTypeActorClassCrossReference_5_0.eContents().get(1);
		private final Assignment cDocuAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDocuDocumentationParserRuleCall_6_0 = (RuleCall)cDocuAssignment_6.eContents().get(0);
		
		//ActorRef:
		//	refType=ReferenceType? 'ActorRef' name=ID multiplicity=MULTIPLICITY? ':' type=[ActorClass|FQN] docu=Documentation?;
		@Override public ParserRule getRule() { return rule; }

		//refType=ReferenceType? 'ActorRef' name=ID multiplicity=MULTIPLICITY? ':' type=[ActorClass|FQN] docu=Documentation?
		public Group getGroup() { return cGroup; }

		//refType=ReferenceType?
		public Assignment getRefTypeAssignment_0() { return cRefTypeAssignment_0; }

		//ReferenceType
		public RuleCall getRefTypeReferenceTypeEnumRuleCall_0_0() { return cRefTypeReferenceTypeEnumRuleCall_0_0; }

		//'ActorRef'
		public Keyword getActorRefKeyword_1() { return cActorRefKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//multiplicity=MULTIPLICITY?
		public Assignment getMultiplicityAssignment_3() { return cMultiplicityAssignment_3; }

		//MULTIPLICITY
		public RuleCall getMultiplicityMULTIPLICITYParserRuleCall_3_0() { return cMultiplicityMULTIPLICITYParserRuleCall_3_0; }

		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//type=[ActorClass|FQN]
		public Assignment getTypeAssignment_5() { return cTypeAssignment_5; }

		//[ActorClass|FQN]
		public CrossReference getTypeActorClassCrossReference_5_0() { return cTypeActorClassCrossReference_5_0; }

		//FQN
		public RuleCall getTypeActorClassFQNParserRuleCall_5_0_1() { return cTypeActorClassFQNParserRuleCall_5_0_1; }

		//docu=Documentation?
		public Assignment getDocuAssignment_6() { return cDocuAssignment_6; }

		//Documentation
		public RuleCall getDocuDocumentationParserRuleCall_6_0() { return cDocuDocumentationParserRuleCall_6_0; }
	}

	public class AbstractInterfaceItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.AbstractInterfaceItem");
		private final RuleCall cInterfaceItemParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//@Override
		//AbstractInterfaceItem:
		//	InterfaceItem;
		@Override public ParserRule getRule() { return rule; }

		//InterfaceItem
		public RuleCall getInterfaceItemParserRuleCall() { return cInterfaceItemParserRuleCall; }
	}

	public class MULTIPLICITYElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.MULTIPLICITY");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Keyword cAsteriskKeyword_1_0 = (Keyword)cAlternatives_1.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1_1 = (RuleCall)cAlternatives_1.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//// **************************************************************
		//// general
		//// the following is a data type rule (accompanied by a value converter) and must not be a terminal rule
		//// (because then the lexer already would find this in places where it is not expected, e.g. in an Attribute)
		//MULTIPLICITY ecore::EInt:
		//	'[' ('*' | INT) ']';
		@Override public ParserRule getRule() { return rule; }

		//'[' ('*' | INT) ']'
		public Group getGroup() { return cGroup; }

		//'['
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//('*' | INT)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//'*'
		public Keyword getAsteriskKeyword_1_0() { return cAsteriskKeyword_1_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1_1() { return cINTTerminalRuleCall_1_1; }

		//']'
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
	}

	public class AnnotationTargetTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.AnnotationTargetType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cDataClassKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cActorClassKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cActorBehaviorKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cProtocolClassKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cCompoundProtocolClassKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cSubSystemClassKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cLogicalSystemKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cPortKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cMessageKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cStateKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cTransitionKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		private final Keyword cRoomModelKeyword_11 = (Keyword)cAlternatives.eContents().get(11);
		
		//@Override
		//AnnotationTargetType:
		//	'DataClass' |
		//	'ActorClass' |
		//	'ActorBehavior' |
		//	'ProtocolClass' |
		//	'CompoundProtocolClass' |
		//	'SubSystemClass' |
		//	'LogicalSystem' |
		//	'Port' |
		//	'Message' |
		//	'State' |
		//	'Transition' |
		//	'RoomModel';
		@Override public ParserRule getRule() { return rule; }

		//'DataClass' | 'ActorClass' | 'ActorBehavior' | 'ProtocolClass' | 'CompoundProtocolClass' | 'SubSystemClass' |
		//'LogicalSystem' | 'Port' | 'Message' | 'State' | 'Transition' | 'RoomModel'
		public Alternatives getAlternatives() { return cAlternatives; }

		//'DataClass'
		public Keyword getDataClassKeyword_0() { return cDataClassKeyword_0; }

		//'ActorClass'
		public Keyword getActorClassKeyword_1() { return cActorClassKeyword_1; }

		//'ActorBehavior'
		public Keyword getActorBehaviorKeyword_2() { return cActorBehaviorKeyword_2; }

		//'ProtocolClass'
		public Keyword getProtocolClassKeyword_3() { return cProtocolClassKeyword_3; }

		//'CompoundProtocolClass'
		public Keyword getCompoundProtocolClassKeyword_4() { return cCompoundProtocolClassKeyword_4; }

		//'SubSystemClass'
		public Keyword getSubSystemClassKeyword_5() { return cSubSystemClassKeyword_5; }

		//'LogicalSystem'
		public Keyword getLogicalSystemKeyword_6() { return cLogicalSystemKeyword_6; }

		//'Port'
		public Keyword getPortKeyword_7() { return cPortKeyword_7; }

		//'Message'
		public Keyword getMessageKeyword_8() { return cMessageKeyword_8; }

		//'State'
		public Keyword getStateKeyword_9() { return cStateKeyword_9; }

		//'Transition'
		public Keyword getTransitionKeyword_10() { return cTransitionKeyword_10; }

		//'RoomModel'
		public Keyword getRoomModelKeyword_11() { return cRoomModelKeyword_11; }
	}
	
	
	public class CommunicationTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.CommunicationType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEVENT_DRIVENEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEVENT_DRIVENEventdrivenKeyword_0_0 = (Keyword)cEVENT_DRIVENEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDATA_DRIVENEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDATA_DRIVENDatadrivenKeyword_1_0 = (Keyword)cDATA_DRIVENEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cSYNCHRONOUSEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cSYNCHRONOUSSyncKeyword_2_0 = (Keyword)cSYNCHRONOUSEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum CommunicationType:
		//	EVENT_DRIVEN='eventdriven' |
		//	DATA_DRIVEN='datadriven' |
		//	SYNCHRONOUS='sync';
		public EnumRule getRule() { return rule; }

		//EVENT_DRIVEN='eventdriven' | DATA_DRIVEN='datadriven' | SYNCHRONOUS='sync'
		public Alternatives getAlternatives() { return cAlternatives; }

		//EVENT_DRIVEN='eventdriven'
		public EnumLiteralDeclaration getEVENT_DRIVENEnumLiteralDeclaration_0() { return cEVENT_DRIVENEnumLiteralDeclaration_0; }

		//'eventdriven'
		public Keyword getEVENT_DRIVENEventdrivenKeyword_0_0() { return cEVENT_DRIVENEventdrivenKeyword_0_0; }

		//DATA_DRIVEN='datadriven'
		public EnumLiteralDeclaration getDATA_DRIVENEnumLiteralDeclaration_1() { return cDATA_DRIVENEnumLiteralDeclaration_1; }

		//'datadriven'
		public Keyword getDATA_DRIVENDatadrivenKeyword_1_0() { return cDATA_DRIVENDatadrivenKeyword_1_0; }

		//SYNCHRONOUS='sync'
		public EnumLiteralDeclaration getSYNCHRONOUSEnumLiteralDeclaration_2() { return cSYNCHRONOUSEnumLiteralDeclaration_2; }

		//'sync'
		public Keyword getSYNCHRONOUSSyncKeyword_2_0() { return cSYNCHRONOUSSyncKeyword_2_0; }
	}

	public class ReferenceTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.ReferenceType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cFIXEDEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cFIXEDFixedKeyword_0_0 = (Keyword)cFIXEDEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOPTIONALEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOPTIONALOptionalKeyword_1_0 = (Keyword)cOPTIONALEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum ReferenceType:
		//	FIXED='fixed' |
		//	OPTIONAL='optional'
		//	// IMPORTED='imported'
		//;
		public EnumRule getRule() { return rule; }

		//FIXED='fixed' | OPTIONAL='optional'
		public Alternatives getAlternatives() { return cAlternatives; }

		//FIXED='fixed'
		public EnumLiteralDeclaration getFIXEDEnumLiteralDeclaration_0() { return cFIXEDEnumLiteralDeclaration_0; }

		//'fixed'
		public Keyword getFIXEDFixedKeyword_0_0() { return cFIXEDFixedKeyword_0_0; }

		//OPTIONAL='optional'
		public EnumLiteralDeclaration getOPTIONALEnumLiteralDeclaration_1() { return cOPTIONALEnumLiteralDeclaration_1; }

		//'optional'
		public Keyword getOPTIONALOptionalKeyword_1_0() { return cOPTIONALOptionalKeyword_1_0; }
	}

	public class RoomAnnotationTargetEnumElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "org.eclipse.etrice.core.Room.RoomAnnotationTargetEnum");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cDATA_CLASSEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cDATA_CLASSDataClassKeyword_0_0 = (Keyword)cDATA_CLASSEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cACTOR_CLASSEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cACTOR_CLASSActorClassKeyword_1_0 = (Keyword)cACTOR_CLASSEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cACTOR_BEHAVIOREnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cACTOR_BEHAVIORActorBehaviorKeyword_2_0 = (Keyword)cACTOR_BEHAVIOREnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cPROTOCOL_CLASSEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cPROTOCOL_CLASSProtocolClassKeyword_3_0 = (Keyword)cPROTOCOL_CLASSEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cCOMPOUND_PROTOCOL_CLASSEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cCOMPOUND_PROTOCOL_CLASSCompoundProtocolClassKeyword_4_0 = (Keyword)cCOMPOUND_PROTOCOL_CLASSEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cSUBSYSTEM_CLASSEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cSUBSYSTEM_CLASSSubSystemClassKeyword_5_0 = (Keyword)cSUBSYSTEM_CLASSEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cLOGICAL_SYSTEM_CLASSEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cLOGICAL_SYSTEM_CLASSLogicalSystemKeyword_6_0 = (Keyword)cLOGICAL_SYSTEM_CLASSEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cPORTEnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cPORTPortKeyword_7_0 = (Keyword)cPORTEnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cMESSAGEEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cMESSAGEMessageKeyword_8_0 = (Keyword)cMESSAGEEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cSTATEEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cSTATEStateKeyword_9_0 = (Keyword)cSTATEEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cTRANSITIONEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cTRANSITIONTransitionKeyword_10_0 = (Keyword)cTRANSITIONEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cROOM_MODELEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cROOM_MODELRoomModelKeyword_11_0 = (Keyword)cROOM_MODELEnumLiteralDeclaration_11.eContents().get(0);
		
		//enum RoomAnnotationTargetEnum:
		//	DATA_CLASS='DataClass' |
		//	ACTOR_CLASS='ActorClass' |
		//	ACTOR_BEHAVIOR='ActorBehavior' |
		//	PROTOCOL_CLASS='ProtocolClass' |
		//	COMPOUND_PROTOCOL_CLASS='CompoundProtocolClass' |
		//	SUBSYSTEM_CLASS='SubSystemClass' |
		//	LOGICAL_SYSTEM_CLASS='LogicalSystem' |
		//	PORT='Port' |
		//	MESSAGE='Message' |
		//	STATE='State' |
		//	TRANSITION='Transition' |
		//	ROOM_MODEL='RoomModel';
		public EnumRule getRule() { return rule; }

		//DATA_CLASS='DataClass' | ACTOR_CLASS='ActorClass' | ACTOR_BEHAVIOR='ActorBehavior' | PROTOCOL_CLASS='ProtocolClass' |
		//COMPOUND_PROTOCOL_CLASS='CompoundProtocolClass' | SUBSYSTEM_CLASS='SubSystemClass' |
		//LOGICAL_SYSTEM_CLASS='LogicalSystem' | PORT='Port' | MESSAGE='Message' | STATE='State' | TRANSITION='Transition' |
		//ROOM_MODEL='RoomModel'
		public Alternatives getAlternatives() { return cAlternatives; }

		//DATA_CLASS='DataClass'
		public EnumLiteralDeclaration getDATA_CLASSEnumLiteralDeclaration_0() { return cDATA_CLASSEnumLiteralDeclaration_0; }

		//'DataClass'
		public Keyword getDATA_CLASSDataClassKeyword_0_0() { return cDATA_CLASSDataClassKeyword_0_0; }

		//ACTOR_CLASS='ActorClass'
		public EnumLiteralDeclaration getACTOR_CLASSEnumLiteralDeclaration_1() { return cACTOR_CLASSEnumLiteralDeclaration_1; }

		//'ActorClass'
		public Keyword getACTOR_CLASSActorClassKeyword_1_0() { return cACTOR_CLASSActorClassKeyword_1_0; }

		//ACTOR_BEHAVIOR='ActorBehavior'
		public EnumLiteralDeclaration getACTOR_BEHAVIOREnumLiteralDeclaration_2() { return cACTOR_BEHAVIOREnumLiteralDeclaration_2; }

		//'ActorBehavior'
		public Keyword getACTOR_BEHAVIORActorBehaviorKeyword_2_0() { return cACTOR_BEHAVIORActorBehaviorKeyword_2_0; }

		//PROTOCOL_CLASS='ProtocolClass'
		public EnumLiteralDeclaration getPROTOCOL_CLASSEnumLiteralDeclaration_3() { return cPROTOCOL_CLASSEnumLiteralDeclaration_3; }

		//'ProtocolClass'
		public Keyword getPROTOCOL_CLASSProtocolClassKeyword_3_0() { return cPROTOCOL_CLASSProtocolClassKeyword_3_0; }

		//COMPOUND_PROTOCOL_CLASS='CompoundProtocolClass'
		public EnumLiteralDeclaration getCOMPOUND_PROTOCOL_CLASSEnumLiteralDeclaration_4() { return cCOMPOUND_PROTOCOL_CLASSEnumLiteralDeclaration_4; }

		//'CompoundProtocolClass'
		public Keyword getCOMPOUND_PROTOCOL_CLASSCompoundProtocolClassKeyword_4_0() { return cCOMPOUND_PROTOCOL_CLASSCompoundProtocolClassKeyword_4_0; }

		//SUBSYSTEM_CLASS='SubSystemClass'
		public EnumLiteralDeclaration getSUBSYSTEM_CLASSEnumLiteralDeclaration_5() { return cSUBSYSTEM_CLASSEnumLiteralDeclaration_5; }

		//'SubSystemClass'
		public Keyword getSUBSYSTEM_CLASSSubSystemClassKeyword_5_0() { return cSUBSYSTEM_CLASSSubSystemClassKeyword_5_0; }

		//LOGICAL_SYSTEM_CLASS='LogicalSystem'
		public EnumLiteralDeclaration getLOGICAL_SYSTEM_CLASSEnumLiteralDeclaration_6() { return cLOGICAL_SYSTEM_CLASSEnumLiteralDeclaration_6; }

		//'LogicalSystem'
		public Keyword getLOGICAL_SYSTEM_CLASSLogicalSystemKeyword_6_0() { return cLOGICAL_SYSTEM_CLASSLogicalSystemKeyword_6_0; }

		//PORT='Port'
		public EnumLiteralDeclaration getPORTEnumLiteralDeclaration_7() { return cPORTEnumLiteralDeclaration_7; }

		//'Port'
		public Keyword getPORTPortKeyword_7_0() { return cPORTPortKeyword_7_0; }

		//MESSAGE='Message'
		public EnumLiteralDeclaration getMESSAGEEnumLiteralDeclaration_8() { return cMESSAGEEnumLiteralDeclaration_8; }

		//'Message'
		public Keyword getMESSAGEMessageKeyword_8_0() { return cMESSAGEMessageKeyword_8_0; }

		//STATE='State'
		public EnumLiteralDeclaration getSTATEEnumLiteralDeclaration_9() { return cSTATEEnumLiteralDeclaration_9; }

		//'State'
		public Keyword getSTATEStateKeyword_9_0() { return cSTATEStateKeyword_9_0; }

		//TRANSITION='Transition'
		public EnumLiteralDeclaration getTRANSITIONEnumLiteralDeclaration_10() { return cTRANSITIONEnumLiteralDeclaration_10; }

		//'Transition'
		public Keyword getTRANSITIONTransitionKeyword_10_0() { return cTRANSITIONTransitionKeyword_10_0; }

		//ROOM_MODEL='RoomModel'
		public EnumLiteralDeclaration getROOM_MODELEnumLiteralDeclaration_11() { return cROOM_MODELEnumLiteralDeclaration_11; }

		//'RoomModel'
		public Keyword getROOM_MODELRoomModelKeyword_11_0() { return cROOM_MODELRoomModelKeyword_11_0; }
	}
	
	private final RoomModelElements pRoomModel;
	private final RoomClassElements pRoomClass;
	private final StructureClassElements pStructureClass;
	private final ActorContainerClassElements pActorContainerClass;
	private final VarDeclElements pVarDecl;
	private final MessageDataElements pMessageData;
	private final RefableTypeElements pRefableType;
	private final DataTypeElements pDataType;
	private final ComplexTypeElements pComplexType;
	private final PrimitiveTypeElements pPrimitiveType;
	private final EnumerationTypeElements pEnumerationType;
	private final EnumLiteralElements pEnumLiteral;
	private final ExternalTypeElements pExternalType;
	private final DataClassElements pDataClass;
	private final AttributeElements pAttribute;
	private final OperationElements pOperation;
	private final StandardOperationElements pStandardOperation;
	private final PortOperationElements pPortOperation;
	private final ClassStructorElements pClassStructor;
	private final CommunicationTypeElements eCommunicationType;
	private final GeneralProtocolClassElements pGeneralProtocolClass;
	private final ProtocolClassElements pProtocolClass;
	private final CompoundProtocolClassElements pCompoundProtocolClass;
	private final SubProtocolElements pSubProtocol;
	private final MessageElements pMessage;
	private final PortClassElements pPortClass;
	private final MessageHandlerElements pMessageHandler;
	private final InMessageHandlerElements pInMessageHandler;
	private final OutMessageHandlerElements pOutMessageHandler;
	private final ModelComponentElements pModelComponent;
	private final ActorClassElements pActorClass;
	private final InterfaceItemElements pInterfaceItem;
	private final PortElements pPort;
	private final ExternalPortElements pExternalPort;
	private final SAPElements pSAP;
	private final SPPElements pSPP;
	private final ServiceImplementationElements pServiceImplementation;
	private final LogicalSystemElements pLogicalSystem;
	private final ActorContainerRefElements pActorContainerRef;
	private final SubSystemRefElements pSubSystemRef;
	private final SubSystemClassElements pSubSystemClass;
	private final LogicalThreadElements pLogicalThread;
	private final ActorInstanceMappingElements pActorInstanceMapping;
	private final RefPathElements pRefPath;
	private final RefSegmentElements pRefSegment;
	private final BindingElements pBinding;
	private final BindingEndPointElements pBindingEndPoint;
	private final LayerConnectionElements pLayerConnection;
	private final SAPointElements pSAPoint;
	private final RefSAPointElements pRefSAPoint;
	private final RelaySAPointElements pRelaySAPoint;
	private final SPPointElements pSPPoint;
	private final ActorRefElements pActorRef;
	private final ReferenceTypeElements eReferenceType;
	private final AbstractInterfaceItemElements pAbstractInterfaceItem;
	private final MULTIPLICITYElements pMULTIPLICITY;
	private final AnnotationTargetTypeElements pAnnotationTargetType;
	private final RoomAnnotationTargetEnumElements eRoomAnnotationTargetEnum;
	
	private final Grammar grammar;

	private final FSMGrammarAccess gaFSM;

	private final BaseGrammarAccess gaBase;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public RoomGrammarAccess(GrammarProvider grammarProvider,
		FSMGrammarAccess gaFSM,
		BaseGrammarAccess gaBase,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaFSM = gaFSM;
		this.gaBase = gaBase;
		this.gaTerminals = gaTerminals;
		this.pRoomModel = new RoomModelElements();
		this.pRoomClass = new RoomClassElements();
		this.pStructureClass = new StructureClassElements();
		this.pActorContainerClass = new ActorContainerClassElements();
		this.pVarDecl = new VarDeclElements();
		this.pMessageData = new MessageDataElements();
		this.pRefableType = new RefableTypeElements();
		this.pDataType = new DataTypeElements();
		this.pComplexType = new ComplexTypeElements();
		this.pPrimitiveType = new PrimitiveTypeElements();
		this.pEnumerationType = new EnumerationTypeElements();
		this.pEnumLiteral = new EnumLiteralElements();
		this.pExternalType = new ExternalTypeElements();
		this.pDataClass = new DataClassElements();
		this.pAttribute = new AttributeElements();
		this.pOperation = new OperationElements();
		this.pStandardOperation = new StandardOperationElements();
		this.pPortOperation = new PortOperationElements();
		this.pClassStructor = new ClassStructorElements();
		this.eCommunicationType = new CommunicationTypeElements();
		this.pGeneralProtocolClass = new GeneralProtocolClassElements();
		this.pProtocolClass = new ProtocolClassElements();
		this.pCompoundProtocolClass = new CompoundProtocolClassElements();
		this.pSubProtocol = new SubProtocolElements();
		this.pMessage = new MessageElements();
		this.pPortClass = new PortClassElements();
		this.pMessageHandler = new MessageHandlerElements();
		this.pInMessageHandler = new InMessageHandlerElements();
		this.pOutMessageHandler = new OutMessageHandlerElements();
		this.pModelComponent = new ModelComponentElements();
		this.pActorClass = new ActorClassElements();
		this.pInterfaceItem = new InterfaceItemElements();
		this.pPort = new PortElements();
		this.pExternalPort = new ExternalPortElements();
		this.pSAP = new SAPElements();
		this.pSPP = new SPPElements();
		this.pServiceImplementation = new ServiceImplementationElements();
		this.pLogicalSystem = new LogicalSystemElements();
		this.pActorContainerRef = new ActorContainerRefElements();
		this.pSubSystemRef = new SubSystemRefElements();
		this.pSubSystemClass = new SubSystemClassElements();
		this.pLogicalThread = new LogicalThreadElements();
		this.pActorInstanceMapping = new ActorInstanceMappingElements();
		this.pRefPath = new RefPathElements();
		this.pRefSegment = new RefSegmentElements();
		this.pBinding = new BindingElements();
		this.pBindingEndPoint = new BindingEndPointElements();
		this.pLayerConnection = new LayerConnectionElements();
		this.pSAPoint = new SAPointElements();
		this.pRefSAPoint = new RefSAPointElements();
		this.pRelaySAPoint = new RelaySAPointElements();
		this.pSPPoint = new SPPointElements();
		this.pActorRef = new ActorRefElements();
		this.eReferenceType = new ReferenceTypeElements();
		this.pAbstractInterfaceItem = new AbstractInterfaceItemElements();
		this.pMULTIPLICITY = new MULTIPLICITYElements();
		this.pAnnotationTargetType = new AnnotationTargetTypeElements();
		this.eRoomAnnotationTargetEnum = new RoomAnnotationTargetEnumElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.eclipse.etrice.core.Room".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	public FSMGrammarAccess getFSMGrammarAccess() {
		return gaFSM;
	}

	public BaseGrammarAccess getBaseGrammarAccess() {
		return gaBase;
	}

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//RoomModel:
	//	'RoomModel' name=FQN docu=Documentation? '{'
	//	annotations+=Annotation*
	//	imports+=Import*
	//	annotationTypes+=AnnotationType*
	//	roomClasses+=RoomClass*
	//	'}';
	public RoomModelElements getRoomModelAccess() {
		return pRoomModel;
	}
	
	public ParserRule getRoomModelRule() {
		return getRoomModelAccess().getRule();
	}

	//RoomClass:
	//	DataType | GeneralProtocolClass | StructureClass;
	public RoomClassElements getRoomClassAccess() {
		return pRoomClass;
	}
	
	public ParserRule getRoomClassRule() {
		return getRoomClassAccess().getRule();
	}

	//StructureClass:
	//	ActorContainerClass | LogicalSystem;
	public StructureClassElements getStructureClassAccess() {
		return pStructureClass;
	}
	
	public ParserRule getStructureClassRule() {
		return getStructureClassAccess().getRule();
	}

	//ActorContainerClass:
	//	ActorClass | SubSystemClass;
	public ActorContainerClassElements getActorContainerClassAccess() {
		return pActorContainerClass;
	}
	
	public ParserRule getActorContainerClassRule() {
		return getActorContainerClassAccess().getRule();
	}

	//// **************************************************************
	//// data class
	//VarDecl:
	//	name=ID ':' refType=RefableType varargs?='varargs'?;
	public VarDeclElements getVarDeclAccess() {
		return pVarDecl;
	}
	
	public ParserRule getVarDeclRule() {
		return getVarDeclAccess().getRule();
	}

	//MessageData:
	//	(deprecatedName=ID ':')? refType=RefableType;
	public MessageDataElements getMessageDataAccess() {
		return pMessageData;
	}
	
	public ParserRule getMessageDataRule() {
		return getMessageDataAccess().getRule();
	}

	//RefableType:
	//	type=[DataType|FQN] ref?='ref'?;
	public RefableTypeElements getRefableTypeAccess() {
		return pRefableType;
	}
	
	public ParserRule getRefableTypeRule() {
		return getRefableTypeAccess().getRule();
	}

	//DataType:
	//	PrimitiveType | EnumerationType | ComplexType;
	public DataTypeElements getDataTypeAccess() {
		return pDataType;
	}
	
	public ParserRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}

	//ComplexType:
	//	DataClass | ExternalType;
	public ComplexTypeElements getComplexTypeAccess() {
		return pComplexType;
	}
	
	public ParserRule getComplexTypeRule() {
		return getComplexTypeAccess().getRule();
	}

	//PrimitiveType:
	//	'PrimitiveType' name=ID ':' type=LiteralType '->' targetName=STRING ('(' castName=FQN ')')? 'default'
	//	defaultValueLiteral=STRING docu=Documentation?;
	public PrimitiveTypeElements getPrimitiveTypeAccess() {
		return pPrimitiveType;
	}
	
	public ParserRule getPrimitiveTypeRule() {
		return getPrimitiveTypeAccess().getRule();
	}

	//EnumerationType:
	//	'Enumeration' name=ID docu=Documentation? ('of' primitiveType=[PrimitiveType|FQN])? '{' (literals+=EnumLiteral (','
	//	literals+=EnumLiteral)*)?
	//	'}';
	public EnumerationTypeElements getEnumerationTypeAccess() {
		return pEnumerationType;
	}
	
	public ParserRule getEnumerationTypeRule() {
		return getEnumerationTypeAccess().getRule();
	}

	//EnumLiteral:
	//	name=ID ('=' literal=IntLiteral)?;
	public EnumLiteralElements getEnumLiteralAccess() {
		return pEnumLiteral;
	}
	
	public ParserRule getEnumLiteralRule() {
		return getEnumLiteralAccess().getRule();
	}

	//ExternalType:
	//	'ExternalType' name=ID '->' targetName=STRING ('default' defaultValueLiteral=STRING)? docu=Documentation?;
	public ExternalTypeElements getExternalTypeAccess() {
		return pExternalType;
	}
	
	public ParserRule getExternalTypeRule() {
		return getExternalTypeAccess().getRule();
	}

	//// TODOHRR: define detail level language?
	//DataClass:
	//	'DataClass' name=ID docu=Documentation? ('extends' base=[DataClass|FQN])? '{'
	//	annotations+=Annotation* ('usercode1' userCode1=DetailCode)? ('usercode2' userCode2=DetailCode)? ('usercode3'
	//	userCode3=DetailCode)? (operations+=StandardOperation | structors+=ClassStructor | attributes+=Attribute)*
	//	'}';
	public DataClassElements getDataClassAccess() {
		return pDataClass;
	}
	
	public ParserRule getDataClassRule() {
		return getDataClassAccess().getRule();
	}

	//Attribute:
	//	'Attribute' name=ID ('[' size=INT ']')? ':' type=RefableType? ('=' defaultValueLiteral=STRING)? docu=Documentation?;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}

	//Operation:
	//	StandardOperation | PortOperation;
	public OperationElements getOperationAccess() {
		return pOperation;
	}
	
	public ParserRule getOperationRule() {
		return getOperationAccess().getRule();
	}

	//StandardOperation:
	//	override?='override'? 'Operation' name=ID '(' (arguments+=VarDecl (',' arguments+=VarDecl)*)? ')' (':' ('void' |
	//	returnType=RefableType))?
	//	docu=Documentation?
	//	detailCode=DetailCode;
	public StandardOperationElements getStandardOperationAccess() {
		return pStandardOperation;
	}
	
	public ParserRule getStandardOperationRule() {
		return getStandardOperationAccess().getRule();
	}

	//PortOperation:
	//	'Operation' name=ID '(' (arguments+=VarDecl (',' arguments+=VarDecl)*)? ')' (':' ('void' | returnType=RefableType) |
	//	'sends' sendsMsg=[Message])?
	//	docu=Documentation?
	//	detailCode=DetailCode;
	public PortOperationElements getPortOperationAccess() {
		return pPortOperation;
	}
	
	public ParserRule getPortOperationRule() {
		return getPortOperationAccess().getRule();
	}

	//ClassStructor:
	//	name=('ctor' | 'dtor') detailCode=DetailCode;
	public ClassStructorElements getClassStructorAccess() {
		return pClassStructor;
	}
	
	public ParserRule getClassStructorRule() {
		return getClassStructorAccess().getRule();
	}

	//enum CommunicationType:
	//	EVENT_DRIVEN='eventdriven' |
	//	DATA_DRIVEN='datadriven' |
	//	SYNCHRONOUS='sync';
	public CommunicationTypeElements getCommunicationTypeAccess() {
		return eCommunicationType;
	}
	
	public EnumRule getCommunicationTypeRule() {
		return getCommunicationTypeAccess().getRule();
	}

	//GeneralProtocolClass:
	//	ProtocolClass | CompoundProtocolClass;
	public GeneralProtocolClassElements getGeneralProtocolClassAccess() {
		return pGeneralProtocolClass;
	}
	
	public ParserRule getGeneralProtocolClassRule() {
		return getGeneralProtocolClassAccess().getRule();
	}

	//ProtocolClass:
	//	commType=CommunicationType?
	//	'ProtocolClass' name=ID docu=Documentation? ('extends' base=[ProtocolClass|FQN])? '{'
	//	annotations+=Annotation* ('usercode1' userCode1=DetailCode)? ('usercode2' userCode2=DetailCode)? ('usercode3'
	//	userCode3=DetailCode)? ('incoming' '{' incomingMessages+=Message* '}')? ('outgoing' '{' outgoingMessages+=Message*
	//	'}')? ('regular' 'PortClass' regular=PortClass)? ('conjugated' 'PortClass' conjugated=PortClass)?
	//	semantics=ProtocolSemantics?
	//	'}';
	public ProtocolClassElements getProtocolClassAccess() {
		return pProtocolClass;
	}
	
	public ParserRule getProtocolClassRule() {
		return getProtocolClassAccess().getRule();
	}

	//CompoundProtocolClass:
	//	'CompoundProtocolClass' name=ID docu=Documentation? '{'
	//	annotations+=Annotation*
	//	subProtocols+=SubProtocol*
	//	'}';
	public CompoundProtocolClassElements getCompoundProtocolClassAccess() {
		return pCompoundProtocolClass;
	}
	
	public ParserRule getCompoundProtocolClassRule() {
		return getCompoundProtocolClassAccess().getRule();
	}

	//SubProtocol:
	//	'SubProtocol' name=ID ':' protocol=[GeneralProtocolClass|FQN];
	public SubProtocolElements getSubProtocolAccess() {
		return pSubProtocol;
	}
	
	public ParserRule getSubProtocolRule() {
		return getSubProtocolAccess().getRule();
	}

	//Message:
	//	priv?='private'? 'Message' name=ID ('(' data=MessageData? ')')? annotations+=Annotation*
	//	docu=Documentation?;
	public MessageElements getMessageAccess() {
		return pMessage;
	}
	
	public ParserRule getMessageRule() {
		return getMessageAccess().getRule();
	}

	//PortClass:
	//	{PortClass}
	//	'{' ('usercode' userCode=DetailCode)? (msgHandlers+=MessageHandler | operations+=PortOperation |
	//	attributes+=Attribute)*
	//	'}';
	public PortClassElements getPortClassAccess() {
		return pPortClass;
	}
	
	public ParserRule getPortClassRule() {
		return getPortClassAccess().getRule();
	}

	//MessageHandler:
	//	InMessageHandler | OutMessageHandler;
	public MessageHandlerElements getMessageHandlerAccess() {
		return pMessageHandler;
	}
	
	public ParserRule getMessageHandlerRule() {
		return getMessageHandlerAccess().getRule();
	}

	//InMessageHandler:
	//	'handle' 'incoming' msg=[Message] detailCode=DetailCode;
	public InMessageHandlerElements getInMessageHandlerAccess() {
		return pInMessageHandler;
	}
	
	public ParserRule getInMessageHandlerRule() {
		return getInMessageHandlerAccess().getRule();
	}

	//OutMessageHandler:
	//	'handle' 'outgoing' msg=[Message] detailCode=DetailCode;
	public OutMessageHandlerElements getOutMessageHandlerAccess() {
		return pOutMessageHandler;
	}
	
	public ParserRule getOutMessageHandlerRule() {
		return getOutMessageHandlerAccess().getRule();
	}

	//@Override
	//ModelComponent:
	//	ActorClass;
	public ModelComponentElements getModelComponentAccess() {
		return pModelComponent;
	}
	
	public ParserRule getModelComponentRule() {
		return getModelComponentAccess().getRule();
	}

	//// some notes on ports
	////
	//// in ROOM ports can be contained in the structure and/or the interface
	//// p in s ==> internal end port
	//// p in i ==> relay port
	//// p in i and p in s ==> external end port
	//// since double containment is not supported we decided to define external ports as reference to interface ports
	//ActorClass:
	//	(abstract?='abstract'? & commType=ComponentCommunicationType?)
	//	'ActorClass' name=ID docu=Documentation? ('extends' base=[ActorClass|FQN])? '{'
	//	annotations+=Annotation* ('Interface' '{' (serviceProvisionPoints+=SPP | interfacePorts+=Port)*
	//	'}')? ('Structure' structureDocu=Documentation? '{' ('usercode1' userCode1=DetailCode)? ('usercode2'
	//	userCode2=DetailCode)? ('usercode3' userCode3=DetailCode)? (connections+=LayerConnection | bindings+=Binding |
	//	serviceImplementations+=ServiceImplementation | attributes+=Attribute | actorRefs+=ActorRef |
	//	serviceAccessPoints+=SAP | internalPorts+=Port | externalPorts+=ExternalPort)*
	//	'}')? ('Behavior' behaviorDocu=Documentation? '{'
	//	behaviorAnnotations+=Annotation* (operations+=StandardOperation | structors+=ClassStructor)*
	//	stateMachine=StateMachine?
	//	'}')?
	//	'}';
	public ActorClassElements getActorClassAccess() {
		return pActorClass;
	}
	
	public ParserRule getActorClassRule() {
		return getActorClassAccess().getRule();
	}

	//InterfaceItem:
	//	Port | SAP | SPP;
	public InterfaceItemElements getInterfaceItemAccess() {
		return pInterfaceItem;
	}
	
	public ParserRule getInterfaceItemRule() {
		return getInterfaceItemAccess().getRule();
	}

	//Port:
	//	conjugated?='conjugated'? 'Port' name=ID multiplicity=MULTIPLICITY? ':' protocol=[GeneralProtocolClass|FQN]
	//	annotations+=Annotation* docu=Documentation?;
	public PortElements getPortAccess() {
		return pPort;
	}
	
	public ParserRule getPortRule() {
		return getPortAccess().getRule();
	}

	//ExternalPort:
	//	'external' 'Port' interfacePort=[Port];
	public ExternalPortElements getExternalPortAccess() {
		return pExternalPort;
	}
	
	public ParserRule getExternalPortRule() {
		return getExternalPortAccess().getRule();
	}

	//SAP:
	//	'SAP' name=ID ':' protocol=[ProtocolClass|FQN] docu=Documentation?;
	public SAPElements getSAPAccess() {
		return pSAP;
	}
	
	public ParserRule getSAPRule() {
		return getSAPAccess().getRule();
	}

	//SPP:
	//	'SPP' name=ID ':' protocol=[ProtocolClass|FQN] docu=Documentation?;
	public SPPElements getSPPAccess() {
		return pSPP;
	}
	
	public ParserRule getSPPRule() {
		return getSPPAccess().getRule();
	}

	//ServiceImplementation:
	//	'ServiceImplementation' 'of' spp=[SPP];
	public ServiceImplementationElements getServiceImplementationAccess() {
		return pServiceImplementation;
	}
	
	public ParserRule getServiceImplementationRule() {
		return getServiceImplementationAccess().getRule();
	}

	//LogicalSystem:
	//	'LogicalSystem' name=ID docu=Documentation? '{'
	//	annotations+=Annotation* (connections+=LayerConnection | bindings+=Binding | subSystems+=SubSystemRef)*
	//	'}';
	public LogicalSystemElements getLogicalSystemAccess() {
		return pLogicalSystem;
	}
	
	public ParserRule getLogicalSystemRule() {
		return getLogicalSystemAccess().getRule();
	}

	//ActorContainerRef:
	//	SubSystemRef | ActorRef;
	public ActorContainerRefElements getActorContainerRefAccess() {
		return pActorContainerRef;
	}
	
	public ParserRule getActorContainerRefRule() {
		return getActorContainerRefAccess().getRule();
	}

	//SubSystemRef:
	//	'SubSystemRef' name=ID ':' type=[SubSystemClass|FQN] docu=Documentation?;
	public SubSystemRefElements getSubSystemRefAccess() {
		return pSubSystemRef;
	}
	
	public ParserRule getSubSystemRefRule() {
		return getSubSystemRefAccess().getRule();
	}

	//SubSystemClass:
	//	'SubSystemClass' name=ID docu=Documentation? '{'
	//	annotations+=Annotation* ('usercode1' userCode1=DetailCode)? ('usercode2' userCode2=DetailCode)? ('usercode3'
	//	userCode3=DetailCode)? (actorInstanceMappings+=ActorInstanceMapping | threads+=LogicalThread |
	//	connections+=LayerConnection | bindings+=Binding | actorRefs+=ActorRef | serviceProvisionPoints+=SPP |
	//	relayPorts+=Port)*
	//	'}';
	public SubSystemClassElements getSubSystemClassAccess() {
		return pSubSystemClass;
	}
	
	public ParserRule getSubSystemClassRule() {
		return getSubSystemClassAccess().getRule();
	}

	//LogicalThread:
	//	'LogicalThread' name=ID;
	public LogicalThreadElements getLogicalThreadAccess() {
		return pLogicalThread;
	}
	
	public ParserRule getLogicalThreadRule() {
		return getLogicalThreadAccess().getRule();
	}

	//ActorInstanceMapping:
	//	'ActorInstanceMapping' path=RefPath '->' thread=[LogicalThread] ('{'
	//	actorInstanceMappings+=ActorInstanceMapping*
	//	'}')?;
	public ActorInstanceMappingElements getActorInstanceMappingAccess() {
		return pActorInstanceMapping;
	}
	
	public ParserRule getActorInstanceMappingRule() {
		return getActorInstanceMappingAccess().getRule();
	}

	//RefPath:
	//	refs+=RefSegment ('/' refs+=RefSegment)*;
	public RefPathElements getRefPathAccess() {
		return pRefPath;
	}
	
	public ParserRule getRefPathRule() {
		return getRefPathAccess().getRule();
	}

	//RefSegment:
	//	ref=ID (':' idx=INT)?;
	public RefSegmentElements getRefSegmentAccess() {
		return pRefSegment;
	}
	
	public ParserRule getRefSegmentRule() {
		return getRefSegmentAccess().getRule();
	}

	//Binding:
	//	'Binding' endpoint1=BindingEndPoint 'and' endpoint2=BindingEndPoint;
	public BindingElements getBindingAccess() {
		return pBinding;
	}
	
	public ParserRule getBindingRule() {
		return getBindingAccess().getRule();
	}

	//BindingEndPoint:
	//	(actorRef=[ActorContainerRef] '.')? port=[Port] ('sub' sub=[SubProtocol])?;
	public BindingEndPointElements getBindingEndPointAccess() {
		return pBindingEndPoint;
	}
	
	public ParserRule getBindingEndPointRule() {
		return getBindingEndPointAccess().getRule();
	}

	//LayerConnection:
	//	'LayerConnection' from=SAPoint 'satisfied_by' to=SPPoint;
	public LayerConnectionElements getLayerConnectionAccess() {
		return pLayerConnection;
	}
	
	public ParserRule getLayerConnectionRule() {
		return getLayerConnectionAccess().getRule();
	}

	//SAPoint:
	//	RefSAPoint | RelaySAPoint;
	public SAPointElements getSAPointAccess() {
		return pSAPoint;
	}
	
	public ParserRule getSAPointRule() {
		return getSAPointAccess().getRule();
	}

	//RefSAPoint: // satisfies a sub actor
	//	'ref' ref=[ActorContainerRef];
	public RefSAPointElements getRefSAPointAccess() {
		return pRefSAPoint;
	}
	
	public ParserRule getRefSAPointRule() {
		return getRefSAPointAccess().getRule();
	}

	//RelaySAPoint: // relays from own interface
	//	'relay_sap' relay=[SPP];
	public RelaySAPointElements getRelaySAPointAccess() {
		return pRelaySAPoint;
	}
	
	public ParserRule getRelaySAPointRule() {
		return getRelaySAPointAccess().getRule();
	}

	//SPPoint:
	//	ref=[ActorContainerRef] '.' service=[SPP];
	public SPPointElements getSPPointAccess() {
		return pSPPoint;
	}
	
	public ParserRule getSPPointRule() {
		return getSPPointAccess().getRule();
	}

	//ActorRef:
	//	refType=ReferenceType? 'ActorRef' name=ID multiplicity=MULTIPLICITY? ':' type=[ActorClass|FQN] docu=Documentation?;
	public ActorRefElements getActorRefAccess() {
		return pActorRef;
	}
	
	public ParserRule getActorRefRule() {
		return getActorRefAccess().getRule();
	}

	//enum ReferenceType:
	//	FIXED='fixed' |
	//	OPTIONAL='optional'
	//	// IMPORTED='imported'
	//;
	public ReferenceTypeElements getReferenceTypeAccess() {
		return eReferenceType;
	}
	
	public EnumRule getReferenceTypeRule() {
		return getReferenceTypeAccess().getRule();
	}

	//@Override
	//AbstractInterfaceItem:
	//	InterfaceItem;
	public AbstractInterfaceItemElements getAbstractInterfaceItemAccess() {
		return pAbstractInterfaceItem;
	}
	
	public ParserRule getAbstractInterfaceItemRule() {
		return getAbstractInterfaceItemAccess().getRule();
	}

	//// **************************************************************
	//// general
	//// the following is a data type rule (accompanied by a value converter) and must not be a terminal rule
	//// (because then the lexer already would find this in places where it is not expected, e.g. in an Attribute)
	//MULTIPLICITY ecore::EInt:
	//	'[' ('*' | INT) ']';
	public MULTIPLICITYElements getMULTIPLICITYAccess() {
		return pMULTIPLICITY;
	}
	
	public ParserRule getMULTIPLICITYRule() {
		return getMULTIPLICITYAccess().getRule();
	}

	//@Override
	//AnnotationTargetType:
	//	'DataClass' |
	//	'ActorClass' |
	//	'ActorBehavior' |
	//	'ProtocolClass' |
	//	'CompoundProtocolClass' |
	//	'SubSystemClass' |
	//	'LogicalSystem' |
	//	'Port' |
	//	'Message' |
	//	'State' |
	//	'Transition' |
	//	'RoomModel';
	public AnnotationTargetTypeElements getAnnotationTargetTypeAccess() {
		return pAnnotationTargetType;
	}
	
	public ParserRule getAnnotationTargetTypeRule() {
		return getAnnotationTargetTypeAccess().getRule();
	}

	//enum RoomAnnotationTargetEnum:
	//	DATA_CLASS='DataClass' |
	//	ACTOR_CLASS='ActorClass' |
	//	ACTOR_BEHAVIOR='ActorBehavior' |
	//	PROTOCOL_CLASS='ProtocolClass' |
	//	COMPOUND_PROTOCOL_CLASS='CompoundProtocolClass' |
	//	SUBSYSTEM_CLASS='SubSystemClass' |
	//	LOGICAL_SYSTEM_CLASS='LogicalSystem' |
	//	PORT='Port' |
	//	MESSAGE='Message' |
	//	STATE='State' |
	//	TRANSITION='Transition' |
	//	ROOM_MODEL='RoomModel';
	public RoomAnnotationTargetEnumElements getRoomAnnotationTargetEnumAccess() {
		return eRoomAnnotationTargetEnum;
	}
	
	public EnumRule getRoomAnnotationTargetEnumRule() {
		return getRoomAnnotationTargetEnumAccess().getRule();
	}

	//FSMModel:
	//	components+=super::ModelComponent*;
	public FSMGrammarAccess.FSMModelElements getFSMModelAccess() {
		return gaFSM.getFSMModelAccess();
	}
	
	public ParserRule getFSMModelRule() {
		return getFSMModelAccess().getRule();
	}

	//enum ComponentCommunicationType:
	//	EVENT_DRIVEN='eventdriven' |
	//	DATA_DRIVEN='datadriven' |
	//	ASYNCHRONOUS='async' |
	//	SYNCHRONOUS='sync';
	public FSMGrammarAccess.ComponentCommunicationTypeElements getComponentCommunicationTypeAccess() {
		return gaFSM.getComponentCommunicationTypeAccess();
	}
	
	public EnumRule getComponentCommunicationTypeRule() {
		return getComponentCommunicationTypeAccess().getRule();
	}

	////
	//// state machine
	////
	//// the building blocks of a state machine: nodes and items
	//StateGraphNode:
	//	State | ChoicePoint | TrPoint;
	public FSMGrammarAccess.StateGraphNodeElements getStateGraphNodeAccess() {
		return gaFSM.getStateGraphNodeAccess();
	}
	
	public ParserRule getStateGraphNodeRule() {
		return getStateGraphNodeAccess().getRule();
	}

	//StateGraphItem:
	//	StateGraphNode | TransitionBase;
	public FSMGrammarAccess.StateGraphItemElements getStateGraphItemAccess() {
		return gaFSM.getStateGraphItemAccess();
	}
	
	public ParserRule getStateGraphItemRule() {
		return getStateGraphItemAccess().getRule();
	}

	//// state graph and state machine are two rules for the same model class
	//StateGraph:
	//	{StateGraph}
	//	'{' (states+=State | trPoints+=TrPoint | chPoints+=ChoicePoint | transitions+=Transition |
	//	refinedTransitions+=RefinedTransition)*
	//	'}';
	public FSMGrammarAccess.StateGraphElements getStateGraphAccess() {
		return gaFSM.getStateGraphAccess();
	}
	
	public ParserRule getStateGraphRule() {
		return getStateGraphAccess().getRule();
	}

	//StateMachine StateGraph:
	//	{StateGraph}
	//	'StateMachine' '{' (states+=State | trPoints+=TrPoint | chPoints+=ChoicePoint | transitions+=Transition |
	//	refinedTransitions+=RefinedTransition)*
	//	'}';
	public FSMGrammarAccess.StateMachineElements getStateMachineAccess() {
		return gaFSM.getStateMachineAccess();
	}
	
	public ParserRule getStateMachineRule() {
		return getStateMachineAccess().getRule();
	}

	////
	//// states
	////
	//State:
	//	SimpleState | RefinedState;
	public FSMGrammarAccess.StateElements getStateAccess() {
		return gaFSM.getStateAccess();
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}

	//SimpleState:
	//	'State' name=ID docu=Documentation? ('{'
	//	annotations+=Annotation* ('entry' entryCode=DetailCode)? ('exit' exitCode=DetailCode)? ('do' doCode=DetailCode)?
	//	('subgraph' subgraph=StateGraph)?
	//	'}')?;
	public FSMGrammarAccess.SimpleStateElements getSimpleStateAccess() {
		return gaFSM.getSimpleStateAccess();
	}
	
	public ParserRule getSimpleStateRule() {
		return getSimpleStateAccess().getRule();
	}

	//RefinedState:
	//	'RefinedState' target=[State|FQN] docu=Documentation? '{'
	//	annotations+=Annotation* ('entry' entryCode=DetailCode)? ('exit' exitCode=DetailCode)? ('do' doCode=DetailCode)?
	//	('subgraph' subgraph=StateGraph)?
	//	'}';
	public FSMGrammarAccess.RefinedStateElements getRefinedStateAccess() {
		return gaFSM.getRefinedStateAccess();
	}
	
	public ParserRule getRefinedStateRule() {
		return getRefinedStateAccess().getRule();
	}

	//// the detail level (or target language) code
	//// the used flag might be used when overriding in derived grammars
	//DetailCode:
	//	{DetailCode} lines+=CC_STRING? | used?='{' lines+=STRING* '}';
	public FSMGrammarAccess.DetailCodeElements getDetailCodeAccess() {
		return gaFSM.getDetailCodeAccess();
	}
	
	public ParserRule getDetailCodeRule() {
		return getDetailCodeAccess().getRule();
	}

	////
	//// transition points
	////
	//TrPoint:
	//	TransitionPoint | EntryPoint | ExitPoint;
	public FSMGrammarAccess.TrPointElements getTrPointAccess() {
		return gaFSM.getTrPointAccess();
	}
	
	public ParserRule getTrPointRule() {
		return getTrPointAccess().getRule();
	}

	//TransitionPoint:
	//	handler?='handler'? 'TransitionPoint' name=ID;
	public FSMGrammarAccess.TransitionPointElements getTransitionPointAccess() {
		return gaFSM.getTransitionPointAccess();
	}
	
	public ParserRule getTransitionPointRule() {
		return getTransitionPointAccess().getRule();
	}

	//EntryPoint:
	//	'EntryPoint' name=ID;
	public FSMGrammarAccess.EntryPointElements getEntryPointAccess() {
		return gaFSM.getEntryPointAccess();
	}
	
	public ParserRule getEntryPointRule() {
		return getEntryPointAccess().getRule();
	}

	//ExitPoint:
	//	'ExitPoint' name=ID;
	public FSMGrammarAccess.ExitPointElements getExitPointAccess() {
		return gaFSM.getExitPointAccess();
	}
	
	public ParserRule getExitPointRule() {
		return getExitPointAccess().getRule();
	}

	////
	//// choice point
	////
	//ChoicePoint:
	//	'ChoicePoint' name=ID docu=Documentation?;
	public FSMGrammarAccess.ChoicePointElements getChoicePointAccess() {
		return gaFSM.getChoicePointAccess();
	}
	
	public ParserRule getChoicePointRule() {
		return getChoicePointAccess().getRule();
	}

	////
	//// transitions
	////
	//TransitionBase:
	//	Transition | RefinedTransition;
	public FSMGrammarAccess.TransitionBaseElements getTransitionBaseAccess() {
		return gaFSM.getTransitionBaseAccess();
	}
	
	public ParserRule getTransitionBaseRule() {
		return getTransitionBaseAccess().getRule();
	}

	//Transition:
	//	InitialTransition | NonInitialTransition;
	public FSMGrammarAccess.TransitionElements getTransitionAccess() {
		return gaFSM.getTransitionAccess();
	}
	
	public ParserRule getTransitionRule() {
		return getTransitionAccess().getRule();
	}

	//NonInitialTransition:
	//	TransitionChainStartTransition | ContinuationTransition | CPBranchTransition;
	public FSMGrammarAccess.NonInitialTransitionElements getNonInitialTransitionAccess() {
		return gaFSM.getNonInitialTransitionAccess();
	}
	
	public ParserRule getNonInitialTransitionRule() {
		return getNonInitialTransitionAccess().getRule();
	}

	//TransitionChainStartTransition:
	//	TriggeredTransition | GuardedTransition;
	public FSMGrammarAccess.TransitionChainStartTransitionElements getTransitionChainStartTransitionAccess() {
		return gaFSM.getTransitionChainStartTransitionAccess();
	}
	
	public ParserRule getTransitionChainStartTransitionRule() {
		return getTransitionChainStartTransitionAccess().getRule();
	}

	//InitialTransition:
	//	'Transition' name=ID? ':' 'initial' '->' to=TransitionTerminal
	//	docu=Documentation? ('{'
	//	annotations+=Annotation* ('action' action=DetailCode)?
	//	'}')?;
	public FSMGrammarAccess.InitialTransitionElements getInitialTransitionAccess() {
		return gaFSM.getInitialTransitionAccess();
	}
	
	public ParserRule getInitialTransitionRule() {
		return getInitialTransitionAccess().getRule();
	}

	//ContinuationTransition:
	//	'Transition' name=ID? ':' from=TransitionTerminal '->' to=TransitionTerminal
	//	docu=Documentation? ('{'
	//	annotations+=Annotation* ('action' action=DetailCode)?
	//	'}')?;
	public FSMGrammarAccess.ContinuationTransitionElements getContinuationTransitionAccess() {
		return gaFSM.getContinuationTransitionAccess();
	}
	
	public ParserRule getContinuationTransitionRule() {
		return getContinuationTransitionAccess().getRule();
	}

	//TriggeredTransition:
	//	'Transition' name=ID? ':' from=TransitionTerminal '->' to=TransitionTerminal
	//	docu=Documentation?
	//	'{'
	//	'triggers' '{'
	//	annotations+=Annotation*
	//	triggers+=Trigger ('or' triggers+=Trigger)*
	//	'}' ('action' action=DetailCode)?
	//	'}';
	public FSMGrammarAccess.TriggeredTransitionElements getTriggeredTransitionAccess() {
		return gaFSM.getTriggeredTransitionAccess();
	}
	
	public ParserRule getTriggeredTransitionRule() {
		return getTriggeredTransitionAccess().getRule();
	}

	//GuardedTransition:
	//	'Transition' name=ID? ':' from=TransitionTerminal '->' to=TransitionTerminal
	//	docu=Documentation?
	//	'{'
	//	annotations+=Annotation*
	//	'guard' guard=DetailCode ('action' action=DetailCode)?
	//	'}';
	public FSMGrammarAccess.GuardedTransitionElements getGuardedTransitionAccess() {
		return gaFSM.getGuardedTransitionAccess();
	}
	
	public ParserRule getGuardedTransitionRule() {
		return getGuardedTransitionAccess().getRule();
	}

	//CPBranchTransition:
	//	'Transition' name=ID? ':' from=TransitionTerminal '->' to=TransitionTerminal
	//	docu=Documentation?
	//	'{'
	//	annotations+=Annotation*
	//	'cond' condition=DetailCode ('action' action=DetailCode)?
	//	'}';
	public FSMGrammarAccess.CPBranchTransitionElements getCPBranchTransitionAccess() {
		return gaFSM.getCPBranchTransitionAccess();
	}
	
	public ParserRule getCPBranchTransitionRule() {
		return getCPBranchTransitionAccess().getRule();
	}

	//// by validation RefinedTransition can only be contained in the top level state graph
	//RefinedTransition:
	//	'RefinedTransition' target=[Transition|FQN] docu=Documentation?
	//	'{'
	//	annotations+=Annotation*
	//	'action' action=DetailCode
	//	'}';
	public FSMGrammarAccess.RefinedTransitionElements getRefinedTransitionAccess() {
		return gaFSM.getRefinedTransitionAccess();
	}
	
	public ParserRule getRefinedTransitionRule() {
		return getRefinedTransitionAccess().getRule();
	}

	////
	//// transition terminals: start and end points of transitions
	////
	//TransitionTerminal:
	//	StateTerminal | TrPointTerminal | SubStateTrPointTerminal | ChoicepointTerminal;
	public FSMGrammarAccess.TransitionTerminalElements getTransitionTerminalAccess() {
		return gaFSM.getTransitionTerminalAccess();
	}
	
	public ParserRule getTransitionTerminalRule() {
		return getTransitionTerminalAccess().getRule();
	}

	//StateTerminal:
	//	state=[State];
	public FSMGrammarAccess.StateTerminalElements getStateTerminalAccess() {
		return gaFSM.getStateTerminalAccess();
	}
	
	public ParserRule getStateTerminalRule() {
		return getStateTerminalAccess().getRule();
	}

	//TrPointTerminal:
	//	'my' trPoint=[TrPoint];
	public FSMGrammarAccess.TrPointTerminalElements getTrPointTerminalAccess() {
		return gaFSM.getTrPointTerminalAccess();
	}
	
	public ParserRule getTrPointTerminalRule() {
		return getTrPointTerminalAccess().getRule();
	}

	//SubStateTrPointTerminal:
	//	trPoint=[TrPoint] 'of' state=[State];
	public FSMGrammarAccess.SubStateTrPointTerminalElements getSubStateTrPointTerminalAccess() {
		return gaFSM.getSubStateTrPointTerminalAccess();
	}
	
	public ParserRule getSubStateTrPointTerminalRule() {
		return getSubStateTrPointTerminalAccess().getRule();
	}

	//ChoicepointTerminal:
	//	'cp' cp=[ChoicePoint];
	public FSMGrammarAccess.ChoicepointTerminalElements getChoicepointTerminalAccess() {
		return gaFSM.getChoicepointTerminalAccess();
	}
	
	public ParserRule getChoicepointTerminalRule() {
		return getChoicepointTerminalAccess().getRule();
	}

	////
	//// transition triggers
	////
	//Trigger:
	//	'<' msgFromIfPairs+=MessageFromIf ('|' msgFromIfPairs+=MessageFromIf)*
	//	guard=Guard? '>';
	public FSMGrammarAccess.TriggerElements getTriggerAccess() {
		return gaFSM.getTriggerAccess();
	}
	
	public ParserRule getTriggerRule() {
		return getTriggerAccess().getRule();
	}

	////
	//// pairs of (message, interface) are triggering events
	////
	//MessageFromIf:
	//	message=[ecore::EObject] ':' from=[AbstractInterfaceItem];
	public FSMGrammarAccess.MessageFromIfElements getMessageFromIfAccess() {
		return gaFSM.getMessageFromIfAccess();
	}
	
	public ParserRule getMessageFromIfRule() {
		return getMessageFromIfAccess().getRule();
	}

	//Guard:
	//	'guard' guard=DetailCode;
	public FSMGrammarAccess.GuardElements getGuardAccess() {
		return gaFSM.getGuardAccess();
	}
	
	public ParserRule getGuardRule() {
		return getGuardAccess().getRule();
	}

	////
	//// semantics for state machine validation
	////
	//ProtocolSemantics:
	//	{ProtocolSemantics}
	//	'semantics' '{'
	//	rules+=SemanticsRule*
	//	'}';
	public FSMGrammarAccess.ProtocolSemanticsElements getProtocolSemanticsAccess() {
		return gaFSM.getProtocolSemanticsAccess();
	}
	
	public ParserRule getProtocolSemanticsRule() {
		return getProtocolSemanticsAccess().getRule();
	}

	//SemanticsRule:
	//	InSemanticsRule | OutSemanticsRule;
	public FSMGrammarAccess.SemanticsRuleElements getSemanticsRuleAccess() {
		return gaFSM.getSemanticsRuleAccess();
	}
	
	public ParserRule getSemanticsRuleRule() {
		return getSemanticsRuleAccess().getRule();
	}

	//InSemanticsRule:
	//	'in' ':' msg=[ecore::EObject] ('->' (followUps+=SemanticsRule
	//	| '(' followUps+=SemanticsRule (',' followUps+=SemanticsRule)+ ')'))?;
	public FSMGrammarAccess.InSemanticsRuleElements getInSemanticsRuleAccess() {
		return gaFSM.getInSemanticsRuleAccess();
	}
	
	public ParserRule getInSemanticsRuleRule() {
		return getInSemanticsRuleAccess().getRule();
	}

	//OutSemanticsRule:
	//	'out' ':' msg=[ecore::EObject] ('->' (followUps+=SemanticsRule
	//	| '(' followUps+=SemanticsRule (',' followUps+=SemanticsRule)+ ')'))?;
	public FSMGrammarAccess.OutSemanticsRuleElements getOutSemanticsRuleAccess() {
		return gaFSM.getOutSemanticsRuleAccess();
	}
	
	public ParserRule getOutSemanticsRuleRule() {
		return getOutSemanticsRuleAccess().getRule();
	}

	//// **************************************************************
	//// AnnotationType and Annotation Rules
	//Annotation:
	//	'@' type=[AnnotationType|FQN] ('(' attributes+=KeyValue (',' attributes+=KeyValue)* ')')?;
	public BaseGrammarAccess.AnnotationElements getAnnotationAccess() {
		return gaBase.getAnnotationAccess();
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}

	//KeyValue:
	//	key=ID '=' value=Literal;
	public BaseGrammarAccess.KeyValueElements getKeyValueAccess() {
		return gaBase.getKeyValueAccess();
	}
	
	public ParserRule getKeyValueRule() {
		return getKeyValueAccess().getRule();
	}

	//AnnotationType:
	//	'AnnotationType' name=ID docu=Documentation? '{'
	//	'target' '=' (targets+=super::AnnotationTargetType | '{' targets+=super::AnnotationTargetType (','
	//	targets+=super::AnnotationTargetType)* '}') attributes+=AnnotationAttribute*
	//	'}';
	public BaseGrammarAccess.AnnotationTypeElements getAnnotationTypeAccess() {
		return gaBase.getAnnotationTypeAccess();
	}
	
	public ParserRule getAnnotationTypeRule() {
		return getAnnotationTypeAccess().getRule();
	}

	//AnnotationAttribute:
	//	SimpleAnnotationAttribute | EnumAnnotationAttribute;
	public BaseGrammarAccess.AnnotationAttributeElements getAnnotationAttributeAccess() {
		return gaBase.getAnnotationAttributeAccess();
	}
	
	public ParserRule getAnnotationAttributeRule() {
		return getAnnotationAttributeAccess().getRule();
	}

	//SimpleAnnotationAttribute:
	//	(optional?='optional' | 'mandatory') 'attribute' name=ID ':' type=LiteralType;
	public BaseGrammarAccess.SimpleAnnotationAttributeElements getSimpleAnnotationAttributeAccess() {
		return gaBase.getSimpleAnnotationAttributeAccess();
	}
	
	public ParserRule getSimpleAnnotationAttributeRule() {
		return getSimpleAnnotationAttributeAccess().getRule();
	}

	//EnumAnnotationAttribute:
	//	(optional?='optional' | 'mandatory') 'attribute' name=ID ':' '{' values+=STRING (',' values+=STRING)* '}';
	public BaseGrammarAccess.EnumAnnotationAttributeElements getEnumAnnotationAttributeAccess() {
		return gaBase.getEnumAnnotationAttributeAccess();
	}
	
	public ParserRule getEnumAnnotationAttributeRule() {
		return getEnumAnnotationAttributeAccess().getRule();
	}

	//// **************************************************************
	//// Import rules
	//// HOWTO: use a combination of URI global scopes and namespace aware local scope provider
	//// this is configured in the work flow by
	////			fragment = scoping.ImportURIScopingFragment {}
	//// and by overriding configureIScopeProviderDelegate in the runtime module with 
	////			ImportedNamespaceAwareLocalScopeProvider
	//// also configure in the RuntimeModule
	////	public Class<? extends ImportUriResolver> bindImportUriResolver() {
	////		return PlatformRelativeUriResolver.class;
	////	}
	//// and in the UiRuntimeModule
	////	public Class<? extends org.eclipse.xtext.ui.editor.IURIEditorOpener> bindIURIEditorOpener() {
	////		return GlobalNonPlatformURIEditorOpener.class;
	////	}
	////	public Class<? extends IHyperlinkHelper> bindIHyperlinkHelper() {
	////		return ImportAwareHyperlinkHelper.class;
	////	}
	//// the attribute 'importedNamespace' is picked up by the ImportedNamespaceAwareLocalScopeProvider
	//// the attribute 'importURI' is picked up by the ImportUriGlobalScopeProvider
	//Import:
	//	'import' (importedNamespace=ImportedFQN ('from' importURI=STRING)? | 'model' importURI=STRING);
	public BaseGrammarAccess.ImportElements getImportAccess() {
		return gaBase.getImportAccess();
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//ImportedFQN:
	//	FQN '.*'?;
	public BaseGrammarAccess.ImportedFQNElements getImportedFQNAccess() {
		return gaBase.getImportedFQNAccess();
	}
	
	public ParserRule getImportedFQNRule() {
		return getImportedFQNAccess().getRule();
	}

	//// **************************************************************
	//// Documentation Rule
	//Documentation:
	//	{Documentation}
	//	'['
	//	lines+=STRING*
	//	']';
	public BaseGrammarAccess.DocumentationElements getDocumentationAccess() {
		return gaBase.getDocumentationAccess();
	}
	
	public ParserRule getDocumentationRule() {
		return getDocumentationAccess().getRule();
	}

	//// **************************************************************
	//// Time Rule
	//TIME ecore::ELong:
	//	INT 's' | INT 'ms' | INT 'us' | INT 'ns';
	public BaseGrammarAccess.TIMEElements getTIMEAccess() {
		return gaBase.getTIMEAccess();
	}
	
	public ParserRule getTIMERule() {
		return getTIMEAccess().getRule();
	}

	//enum LiteralType:
	//	BOOL='ptBoolean' |
	//	INT='ptInteger' |
	//	REAL='ptReal' |
	//	CHAR='ptCharacter';
	public BaseGrammarAccess.LiteralTypeElements getLiteralTypeAccess() {
		return gaBase.getLiteralTypeAccess();
	}
	
	public EnumRule getLiteralTypeRule() {
		return getLiteralTypeAccess().getRule();
	}

	//LiteralArray:
	//	literals+=Literal (',' literals+=Literal)*;
	public BaseGrammarAccess.LiteralArrayElements getLiteralArrayAccess() {
		return gaBase.getLiteralArrayAccess();
	}
	
	public ParserRule getLiteralArrayRule() {
		return getLiteralArrayAccess().getRule();
	}

	//// Value Types for Attributes
	//Literal:
	//	BooleanLiteral | NumberLiteral | StringLiteral;
	public BaseGrammarAccess.LiteralElements getLiteralAccess() {
		return gaBase.getLiteralAccess();
	}
	
	public ParserRule getLiteralRule() {
		return getLiteralAccess().getRule();
	}

	//BooleanLiteral:
	//	{BooleanLiteral} ('false' | isTrue?='true');
	public BaseGrammarAccess.BooleanLiteralElements getBooleanLiteralAccess() {
		return gaBase.getBooleanLiteralAccess();
	}
	
	public ParserRule getBooleanLiteralRule() {
		return getBooleanLiteralAccess().getRule();
	}

	//NumberLiteral:
	//	IntLiteral | RealLiteral;
	public BaseGrammarAccess.NumberLiteralElements getNumberLiteralAccess() {
		return gaBase.getNumberLiteralAccess();
	}
	
	public ParserRule getNumberLiteralRule() {
		return getNumberLiteralAccess().getRule();
	}

	//RealLiteral:
	//	{RealLiteral} value=Real;
	public BaseGrammarAccess.RealLiteralElements getRealLiteralAccess() {
		return gaBase.getRealLiteralAccess();
	}
	
	public ParserRule getRealLiteralRule() {
		return getRealLiteralAccess().getRule();
	}

	//IntLiteral:
	//	{IntLiteral} value=Integer;
	public BaseGrammarAccess.IntLiteralElements getIntLiteralAccess() {
		return gaBase.getIntLiteralAccess();
	}
	
	public ParserRule getIntLiteralRule() {
		return getIntLiteralAccess().getRule();
	}

	//StringLiteral:
	//	{StringLiteral} value=STRING;
	public BaseGrammarAccess.StringLiteralElements getStringLiteralAccess() {
		return gaBase.getStringLiteralAccess();
	}
	
	public ParserRule getStringLiteralRule() {
		return getStringLiteralAccess().getRule();
	}

	//Integer ecore::ELong:
	//	('+' | '-')? INT | HEX;
	public BaseGrammarAccess.IntegerElements getIntegerAccess() {
		return gaBase.getIntegerAccess();
	}
	
	public ParserRule getIntegerRule() {
		return getIntegerAccess().getRule();
	}

	//Real ecore::EDouble:
	//	Decimal | DecimalExp;
	public BaseGrammarAccess.RealElements getRealAccess() {
		return gaBase.getRealAccess();
	}
	
	public ParserRule getRealRule() {
		return getRealAccess().getRule();
	}

	//Decimal hidden():
	//	('+' | '-')? INT '.' INT;
	public BaseGrammarAccess.DecimalElements getDecimalAccess() {
		return gaBase.getDecimalAccess();
	}
	
	public ParserRule getDecimalRule() {
		return getDecimalAccess().getRule();
	}

	////DotDecimal hidden():
	////	('+' | '-')? '.' INT;
	////
	////DecimalDot hidden():
	////	('+' | '-')? INT '.';
	//DecimalExp hidden():
	//	('+' | '-')? INT '.' INT ('e' | 'E') ('+' | '-')? INT;
	public BaseGrammarAccess.DecimalExpElements getDecimalExpAccess() {
		return gaBase.getDecimalExpAccess();
	}
	
	public ParserRule getDecimalExpRule() {
		return getDecimalExpAccess().getRule();
	}

	//FQN:
	//	ID ('.' ID)*;
	public BaseGrammarAccess.FQNElements getFQNAccess() {
		return gaBase.getFQNAccess();
	}
	
	public ParserRule getFQNRule() {
		return getFQNAccess().getRule();
	}

	//terminal HEX:
	//	('0x' | '0X') ('0'..'9' | 'a'..'f' | 'A'..'F')+;
	public TerminalRule getHEXRule() {
		return gaBase.getHEXRule();
	} 

	//terminal CC_STRING:
	//	"'''"->"'''";
	public TerminalRule getCC_STRINGRule() {
		return gaBase.getCC_STRINGRule();
	} 

	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
