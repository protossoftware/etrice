/*
 * generated by Xtext
 */
grammar InternalRoom;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipse.etrice.core.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.etrice.core.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.etrice.core.services.RoomGrammarAccess;

}

@parser::members {

 	private RoomGrammarAccess grammarAccess;
 	
    public InternalRoomParser(TokenStream input, RoomGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "RoomModel";	
   	}
   	
   	@Override
   	protected RoomGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleRoomModel
entryRuleRoomModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRoomModelRule()); }
	 iv_ruleRoomModel=ruleRoomModel 
	 { $current=$iv_ruleRoomModel.current; } 
	 EOF 
;

// Rule RoomModel
ruleRoomModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RoomModel' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRoomModelAccess().getRoomModelKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRoomModelAccess().getNameFQNParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoomModelRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.etrice.core.common.Base.FQN");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRoomModelAccess().getDocuDocumentationParserRuleCall_2_0()); 
	    }
		lv_docu_2_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoomModelRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_2_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRoomModelAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRoomModelAccess().getAnnotationsAnnotationParserRuleCall_4_0()); 
	    }
		lv_annotations_4_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoomModelRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_4_0, 
        		"org.eclipse.etrice.core.common.Base.Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRoomModelAccess().getImportsImportParserRuleCall_5_0()); 
	    }
		lv_imports_5_0=ruleImport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoomModelRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_5_0, 
        		"org.eclipse.etrice.core.common.Base.Import");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRoomModelAccess().getAnnotationTypesAnnotationTypeParserRuleCall_6_0()); 
	    }
		lv_annotationTypes_6_0=ruleAnnotationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoomModelRule());
	        }
       		add(
       			$current, 
       			"annotationTypes",
        		lv_annotationTypes_6_0, 
        		"org.eclipse.etrice.core.common.Base.AnnotationType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getRoomModelAccess().getRoomClassesRoomClassParserRuleCall_7_0()); 
	    }
		lv_roomClasses_7_0=ruleRoomClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRoomModelRule());
	        }
       		add(
       			$current, 
       			"roomClasses",
        		lv_roomClasses_7_0, 
        		"org.eclipse.etrice.core.Room.RoomClass");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getRoomModelAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleRoomClass
entryRuleRoomClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRoomClassRule()); }
	 iv_ruleRoomClass=ruleRoomClass 
	 { $current=$iv_ruleRoomClass.current; } 
	 EOF 
;

// Rule RoomClass
ruleRoomClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRoomClassAccess().getDataTypeParserRuleCall_0()); 
    }
    this_DataType_0=ruleDataType
    { 
        $current = $this_DataType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRoomClassAccess().getGeneralProtocolClassParserRuleCall_1()); 
    }
    this_GeneralProtocolClass_1=ruleGeneralProtocolClass
    { 
        $current = $this_GeneralProtocolClass_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRoomClassAccess().getStructureClassParserRuleCall_2()); 
    }
    this_StructureClass_2=ruleStructureClass
    { 
        $current = $this_StructureClass_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStructureClass
entryRuleStructureClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructureClassRule()); }
	 iv_ruleStructureClass=ruleStructureClass 
	 { $current=$iv_ruleStructureClass.current; } 
	 EOF 
;

// Rule StructureClass
ruleStructureClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStructureClassAccess().getActorContainerClassParserRuleCall_0()); 
    }
    this_ActorContainerClass_0=ruleActorContainerClass
    { 
        $current = $this_ActorContainerClass_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStructureClassAccess().getLogicalSystemParserRuleCall_1()); 
    }
    this_LogicalSystem_1=ruleLogicalSystem
    { 
        $current = $this_LogicalSystem_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleActorContainerClass
entryRuleActorContainerClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActorContainerClassRule()); }
	 iv_ruleActorContainerClass=ruleActorContainerClass 
	 { $current=$iv_ruleActorContainerClass.current; } 
	 EOF 
;

// Rule ActorContainerClass
ruleActorContainerClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getActorContainerClassAccess().getActorClassParserRuleCall_0()); 
    }
    this_ActorClass_0=ruleActorClass
    { 
        $current = $this_ActorClass_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getActorContainerClassAccess().getSubSystemClassParserRuleCall_1()); 
    }
    this_SubSystemClass_1=ruleSubSystemClass
    { 
        $current = $this_SubSystemClass_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleVarDecl
entryRuleVarDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getVarDeclRule()); }
	 iv_ruleVarDecl=ruleVarDecl 
	 { $current=$iv_ruleVarDecl.current; } 
	 EOF 
;

// Rule VarDecl
ruleVarDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getVarDeclAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVarDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getVarDeclAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getVarDeclAccess().getRefTypeRefableTypeParserRuleCall_2_0()); 
	    }
		lv_refType_2_0=ruleRefableType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getVarDeclRule());
	        }
       		set(
       			$current, 
       			"refType",
        		lv_refType_2_0, 
        		"org.eclipse.etrice.core.Room.RefableType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_varargs_3_0=	'varargs' 
    {
        newLeafNode(lv_varargs_3_0, grammarAccess.getVarDeclAccess().getVarargsVarargsKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getVarDeclRule());
	        }
       		setWithLastConsumed($current, "varargs", true, "varargs");
	    }

)
)?)
;





// Entry rule entryRuleMessageData
entryRuleMessageData returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMessageDataRule()); }
	 iv_ruleMessageData=ruleMessageData 
	 { $current=$iv_ruleMessageData.current; } 
	 EOF 
;

// Rule MessageData
ruleMessageData returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_deprecatedName_0_0=RULE_ID
		{
			newLeafNode(lv_deprecatedName_0_0, grammarAccess.getMessageDataAccess().getDeprecatedNameIDTerminalRuleCall_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMessageDataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"deprecatedName",
        		lv_deprecatedName_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMessageDataAccess().getColonKeyword_0_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageDataAccess().getRefTypeRefableTypeParserRuleCall_1_0()); 
	    }
		lv_refType_2_0=ruleRefableType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageDataRule());
	        }
       		set(
       			$current, 
       			"refType",
        		lv_refType_2_0, 
        		"org.eclipse.etrice.core.Room.RefableType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleRefableType
entryRuleRefableType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefableTypeRule()); }
	 iv_ruleRefableType=ruleRefableType 
	 { $current=$iv_ruleRefableType.current; } 
	 EOF 
;

// Rule RefableType
ruleRefableType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefableTypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRefableTypeAccess().getTypeDataTypeCrossReference_0_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_ref_1_0=	'ref' 
    {
        newLeafNode(lv_ref_1_0, grammarAccess.getRefableTypeAccess().getRefRefKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefableTypeRule());
	        }
       		setWithLastConsumed($current, "ref", true, "ref");
	    }

)
)?)
;





// Entry rule entryRuleDataType
entryRuleDataType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeRule()); }
	 iv_ruleDataType=ruleDataType 
	 { $current=$iv_ruleDataType.current; } 
	 EOF 
;

// Rule DataType
ruleDataType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDataTypeAccess().getPrimitiveTypeParserRuleCall_0()); 
    }
    this_PrimitiveType_0=rulePrimitiveType
    { 
        $current = $this_PrimitiveType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDataTypeAccess().getEnumerationTypeParserRuleCall_1()); 
    }
    this_EnumerationType_1=ruleEnumerationType
    { 
        $current = $this_EnumerationType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getDataTypeAccess().getComplexTypeParserRuleCall_2()); 
    }
    this_ComplexType_2=ruleComplexType
    { 
        $current = $this_ComplexType_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleComplexType
entryRuleComplexType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComplexTypeRule()); }
	 iv_ruleComplexType=ruleComplexType 
	 { $current=$iv_ruleComplexType.current; } 
	 EOF 
;

// Rule ComplexType
ruleComplexType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getComplexTypeAccess().getDataClassParserRuleCall_0()); 
    }
    this_DataClass_0=ruleDataClass
    { 
        $current = $this_DataClass_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getComplexTypeAccess().getExternalTypeParserRuleCall_1()); 
    }
    this_ExternalType_1=ruleExternalType
    { 
        $current = $this_ExternalType_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePrimitiveType
entryRulePrimitiveType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimitiveTypeRule()); }
	 iv_rulePrimitiveType=rulePrimitiveType 
	 { $current=$iv_rulePrimitiveType.current; } 
	 EOF 
;

// Rule PrimitiveType
rulePrimitiveType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='PrimitiveType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrimitiveTypeAccess().getPrimitiveTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPrimitiveTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPrimitiveTypeAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveTypeAccess().getTypeLiteralTypeEnumRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleLiteralType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"org.eclipse.etrice.core.common.Base.LiteralType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPrimitiveTypeAccess().getHyphenMinusGreaterThanSignKeyword_4());
    }
(
(
		lv_targetName_5_0=RULE_STRING
		{
			newLeafNode(lv_targetName_5_0, grammarAccess.getPrimitiveTypeAccess().getTargetNameSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"targetName",
        		lv_targetName_5_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPrimitiveTypeAccess().getLeftParenthesisKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveTypeAccess().getCastNameFQNParserRuleCall_6_1_0()); 
	    }
		lv_castName_7_0=ruleFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveTypeRule());
	        }
       		set(
       			$current, 
       			"castName",
        		lv_castName_7_0, 
        		"org.eclipse.etrice.core.common.Base.FQN");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPrimitiveTypeAccess().getRightParenthesisKeyword_6_2());
    }
)?	otherlv_9='default' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPrimitiveTypeAccess().getDefaultKeyword_7());
    }
(
(
		lv_defaultValueLiteral_10_0=RULE_STRING
		{
			newLeafNode(lv_defaultValueLiteral_10_0, grammarAccess.getPrimitiveTypeAccess().getDefaultValueLiteralSTRINGTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimitiveTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"defaultValueLiteral",
        		lv_defaultValueLiteral_10_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimitiveTypeAccess().getDocuDocumentationParserRuleCall_9_0()); 
	    }
		lv_docu_11_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimitiveTypeRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_11_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleEnumerationType
entryRuleEnumerationType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumerationTypeRule()); }
	 iv_ruleEnumerationType=ruleEnumerationType 
	 { $current=$iv_ruleEnumerationType.current; } 
	 EOF 
;

// Rule EnumerationType
ruleEnumerationType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Enumeration' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumerationTypeAccess().getEnumerationKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEnumerationTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumerationTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumerationTypeAccess().getDocuDocumentationParserRuleCall_2_0()); 
	    }
		lv_docu_2_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumerationTypeRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_2_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_3='of' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEnumerationTypeAccess().getOfKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumerationTypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getEnumerationTypeAccess().getPrimitiveTypePrimitiveTypeCrossReference_3_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEnumerationTypeAccess().getLeftCurlyBracketKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnumerationTypeAccess().getLiteralsEnumLiteralParserRuleCall_5_0_0()); 
	    }
		lv_literals_6_0=ruleEnumLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumerationTypeRule());
	        }
       		add(
       			$current, 
       			"literals",
        		lv_literals_6_0, 
        		"org.eclipse.etrice.core.Room.EnumLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEnumerationTypeAccess().getCommaKeyword_5_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumerationTypeAccess().getLiteralsEnumLiteralParserRuleCall_5_1_1_0()); 
	    }
		lv_literals_8_0=ruleEnumLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumerationTypeRule());
	        }
       		add(
       			$current, 
       			"literals",
        		lv_literals_8_0, 
        		"org.eclipse.etrice.core.Room.EnumLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEnumerationTypeAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleEnumLiteral
entryRuleEnumLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumLiteralRule()); }
	 iv_ruleEnumLiteral=ruleEnumLiteral 
	 { $current=$iv_ruleEnumLiteral.current; } 
	 EOF 
;

// Rule EnumLiteral
ruleEnumLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getEnumLiteralAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumLiteralAccess().getEqualsSignKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumLiteralAccess().getLiteralIntLiteralParserRuleCall_1_1_0()); 
	    }
		lv_literal_2_0=ruleIntLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumLiteralRule());
	        }
       		set(
       			$current, 
       			"literal",
        		lv_literal_2_0, 
        		"org.eclipse.etrice.core.common.Base.IntLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleExternalType
entryRuleExternalType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExternalTypeRule()); }
	 iv_ruleExternalType=ruleExternalType 
	 { $current=$iv_ruleExternalType.current; } 
	 EOF 
;

// Rule ExternalType
ruleExternalType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ExternalType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExternalTypeAccess().getExternalTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExternalTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_2='->' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExternalTypeAccess().getHyphenMinusGreaterThanSignKeyword_2());
    }
(
(
		lv_targetName_3_0=RULE_STRING
		{
			newLeafNode(lv_targetName_3_0, grammarAccess.getExternalTypeAccess().getTargetNameSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"targetName",
        		lv_targetName_3_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_4='default' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExternalTypeAccess().getDefaultKeyword_4_0());
    }
(
(
		lv_defaultValueLiteral_5_0=RULE_STRING
		{
			newLeafNode(lv_defaultValueLiteral_5_0, grammarAccess.getExternalTypeAccess().getDefaultValueLiteralSTRINGTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"defaultValueLiteral",
        		lv_defaultValueLiteral_5_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getExternalTypeAccess().getDocuDocumentationParserRuleCall_5_0()); 
	    }
		lv_docu_6_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExternalTypeRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_6_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleDataClass
entryRuleDataClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataClassRule()); }
	 iv_ruleDataClass=ruleDataClass 
	 { $current=$iv_ruleDataClass.current; } 
	 EOF 
;

// Rule DataClass
ruleDataClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='DataClass' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDataClassAccess().getDataClassKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getDataClassAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDataClassAccess().getDocuDocumentationParserRuleCall_2_0()); 
	    }
		lv_docu_2_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataClassRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_2_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_3='extends' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataClassAccess().getExtendsKeyword_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataClassRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDataClassAccess().getBaseDataClassCrossReference_3_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDataClassAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataClassAccess().getAnnotationsAnnotationParserRuleCall_5_0()); 
	    }
		lv_annotations_6_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataClassRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_6_0, 
        		"org.eclipse.etrice.core.common.Base.Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_7='usercode1' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDataClassAccess().getUsercode1Keyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataClassAccess().getUserCode1DetailCodeParserRuleCall_6_1_0()); 
	    }
		lv_userCode1_8_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataClassRule());
	        }
       		set(
       			$current, 
       			"userCode1",
        		lv_userCode1_8_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='usercode2' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDataClassAccess().getUsercode2Keyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataClassAccess().getUserCode2DetailCodeParserRuleCall_7_1_0()); 
	    }
		lv_userCode2_10_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataClassRule());
	        }
       		set(
       			$current, 
       			"userCode2",
        		lv_userCode2_10_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='usercode3' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDataClassAccess().getUsercode3Keyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataClassAccess().getUserCode3DetailCodeParserRuleCall_8_1_0()); 
	    }
		lv_userCode3_12_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataClassRule());
	        }
       		set(
       			$current, 
       			"userCode3",
        		lv_userCode3_12_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getDataClassAccess().getOperationsStandardOperationParserRuleCall_9_0_0()); 
	    }
		lv_operations_13_0=ruleStandardOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataClassRule());
	        }
       		add(
       			$current, 
       			"operations",
        		lv_operations_13_0, 
        		"org.eclipse.etrice.core.Room.StandardOperation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDataClassAccess().getStructorsClassStructorParserRuleCall_9_1_0()); 
	    }
		lv_structors_14_0=ruleClassStructor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataClassRule());
	        }
       		add(
       			$current, 
       			"structors",
        		lv_structors_14_0, 
        		"org.eclipse.etrice.core.Room.ClassStructor");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getDataClassAccess().getAttributesAttributeParserRuleCall_9_2_0()); 
	    }
		lv_attributes_15_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataClassRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_15_0, 
        		"org.eclipse.etrice.core.Room.Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getDataClassAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	 iv_ruleAttribute=ruleAttribute 
	 { $current=$iv_ruleAttribute.current; } 
	 EOF 
;

// Rule Attribute
ruleAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Attribute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getAttributeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttributeAccess().getLeftSquareBracketKeyword_2_0());
    }
(
(
		lv_size_3_0=RULE_INT
		{
			newLeafNode(lv_size_3_0, grammarAccess.getAttributeAccess().getSizeINTTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"size",
        		lv_size_3_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
)	otherlv_4=']' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAttributeAccess().getRightSquareBracketKeyword_2_2());
    }
)?	otherlv_5=':' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAttributeAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getTypeRefableTypeParserRuleCall_4_0()); 
	    }
		lv_type_6_0=ruleRefableType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_6_0, 
        		"org.eclipse.etrice.core.Room.RefableType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAttributeAccess().getEqualsSignKeyword_5_0());
    }
(
(
		lv_defaultValueLiteral_8_0=RULE_STRING
		{
			newLeafNode(lv_defaultValueLiteral_8_0, grammarAccess.getAttributeAccess().getDefaultValueLiteralSTRINGTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"defaultValueLiteral",
        		lv_defaultValueLiteral_8_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeAccess().getDocuDocumentationParserRuleCall_6_0()); 
	    }
		lv_docu_9_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_9_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;







// Entry rule entryRuleStandardOperation
entryRuleStandardOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStandardOperationRule()); }
	 iv_ruleStandardOperation=ruleStandardOperation 
	 { $current=$iv_ruleStandardOperation.current; } 
	 EOF 
;

// Rule StandardOperation
ruleStandardOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_override_0_0=	'override' 
    {
        newLeafNode(lv_override_0_0, grammarAccess.getStandardOperationAccess().getOverrideOverrideKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStandardOperationRule());
	        }
       		setWithLastConsumed($current, "override", true, "override");
	    }

)
)?	otherlv_1='Operation' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStandardOperationAccess().getOperationKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getStandardOperationAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStandardOperationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStandardOperationAccess().getLeftParenthesisKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getStandardOperationAccess().getArgumentsVarDeclParserRuleCall_4_0_0()); 
	    }
		lv_arguments_4_0=ruleVarDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStandardOperationRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_4_0, 
        		"org.eclipse.etrice.core.Room.VarDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStandardOperationAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStandardOperationAccess().getArgumentsVarDeclParserRuleCall_4_1_1_0()); 
	    }
		lv_arguments_6_0=ruleVarDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStandardOperationRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_6_0, 
        		"org.eclipse.etrice.core.Room.VarDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStandardOperationAccess().getRightParenthesisKeyword_5());
    }
(	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStandardOperationAccess().getColonKeyword_6_0());
    }
(	otherlv_9='void' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getStandardOperationAccess().getVoidKeyword_6_1_0());
    }

    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStandardOperationAccess().getReturnTypeRefableTypeParserRuleCall_6_1_1_0()); 
	    }
		lv_returnType_10_0=ruleRefableType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStandardOperationRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_10_0, 
        		"org.eclipse.etrice.core.Room.RefableType");
	        afterParserOrEnumRuleCall();
	    }

)
)))?(
(
		{ 
	        newCompositeNode(grammarAccess.getStandardOperationAccess().getDocuDocumentationParserRuleCall_7_0()); 
	    }
		lv_docu_11_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStandardOperationRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_11_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getStandardOperationAccess().getDetailCodeDetailCodeParserRuleCall_8_0()); 
	    }
		lv_detailCode_12_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStandardOperationRule());
	        }
       		set(
       			$current, 
       			"detailCode",
        		lv_detailCode_12_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePortOperation
entryRulePortOperation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPortOperationRule()); }
	 iv_rulePortOperation=rulePortOperation 
	 { $current=$iv_rulePortOperation.current; } 
	 EOF 
;

// Rule PortOperation
rulePortOperation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Operation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPortOperationAccess().getOperationKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPortOperationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortOperationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPortOperationAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getPortOperationAccess().getArgumentsVarDeclParserRuleCall_3_0_0()); 
	    }
		lv_arguments_3_0=ruleVarDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortOperationRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_3_0, 
        		"org.eclipse.etrice.core.Room.VarDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPortOperationAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPortOperationAccess().getArgumentsVarDeclParserRuleCall_3_1_1_0()); 
	    }
		lv_arguments_5_0=ruleVarDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortOperationRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_5_0, 
        		"org.eclipse.etrice.core.Room.VarDecl");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getPortOperationAccess().getRightParenthesisKeyword_4());
    }
((	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPortOperationAccess().getColonKeyword_5_0_0());
    }
(	otherlv_8='void' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPortOperationAccess().getVoidKeyword_5_0_1_0());
    }

    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPortOperationAccess().getReturnTypeRefableTypeParserRuleCall_5_0_1_1_0()); 
	    }
		lv_returnType_9_0=ruleRefableType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortOperationRule());
	        }
       		set(
       			$current, 
       			"returnType",
        		lv_returnType_9_0, 
        		"org.eclipse.etrice.core.Room.RefableType");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(	otherlv_10='sends' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPortOperationAccess().getSendsKeyword_5_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortOperationRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getPortOperationAccess().getSendsMsgMessageCrossReference_5_1_1_0()); 
	}

)
)))?(
(
		{ 
	        newCompositeNode(grammarAccess.getPortOperationAccess().getDocuDocumentationParserRuleCall_6_0()); 
	    }
		lv_docu_12_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortOperationRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_12_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPortOperationAccess().getDetailCodeDetailCodeParserRuleCall_7_0()); 
	    }
		lv_detailCode_13_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortOperationRule());
	        }
       		set(
       			$current, 
       			"detailCode",
        		lv_detailCode_13_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleClassStructor
entryRuleClassStructor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassStructorRule()); }
	 iv_ruleClassStructor=ruleClassStructor 
	 { $current=$iv_ruleClassStructor.current; } 
	 EOF 
;

// Rule ClassStructor
ruleClassStructor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
(
		lv_name_0_1=	'ctor' 
    {
        newLeafNode(lv_name_0_1, grammarAccess.getClassStructorAccess().getNameCtorKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassStructorRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_1, null);
	    }

    |		lv_name_0_2=	'dtor' 
    {
        newLeafNode(lv_name_0_2, grammarAccess.getClassStructorAccess().getNameDtorKeyword_0_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassStructorRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getClassStructorAccess().getDetailCodeDetailCodeParserRuleCall_1_0()); 
	    }
		lv_detailCode_1_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassStructorRule());
	        }
       		set(
       			$current, 
       			"detailCode",
        		lv_detailCode_1_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleGeneralProtocolClass
entryRuleGeneralProtocolClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGeneralProtocolClassRule()); }
	 iv_ruleGeneralProtocolClass=ruleGeneralProtocolClass 
	 { $current=$iv_ruleGeneralProtocolClass.current; } 
	 EOF 
;

// Rule GeneralProtocolClass
ruleGeneralProtocolClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getGeneralProtocolClassAccess().getProtocolClassParserRuleCall_0()); 
    }
    this_ProtocolClass_0=ruleProtocolClass
    { 
        $current = $this_ProtocolClass_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getGeneralProtocolClassAccess().getCompoundProtocolClassParserRuleCall_1()); 
    }
    this_CompoundProtocolClass_1=ruleCompoundProtocolClass
    { 
        $current = $this_CompoundProtocolClass_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleProtocolClass
entryRuleProtocolClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProtocolClassRule()); }
	 iv_ruleProtocolClass=ruleProtocolClass 
	 { $current=$iv_ruleProtocolClass.current; } 
	 EOF 
;

// Rule ProtocolClass
ruleProtocolClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getCommTypeCommunicationTypeEnumRuleCall_0_0()); 
	    }
		lv_commType_0_0=ruleCommunicationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolClassRule());
	        }
       		set(
       			$current, 
       			"commType",
        		lv_commType_0_0, 
        		"org.eclipse.etrice.core.Room.CommunicationType");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='ProtocolClass' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getProtocolClassAccess().getProtocolClassKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getProtocolClassAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProtocolClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getDocuDocumentationParserRuleCall_3_0()); 
	    }
		lv_docu_3_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolClassRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_3_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_4='extends' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProtocolClassAccess().getExtendsKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getProtocolClassRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getBaseProtocolClassCrossReference_4_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getProtocolClassAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getAnnotationsAnnotationParserRuleCall_6_0()); 
	    }
		lv_annotations_7_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolClassRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_7_0, 
        		"org.eclipse.etrice.core.common.Base.Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_8='usercode1' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getProtocolClassAccess().getUsercode1Keyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getUserCode1DetailCodeParserRuleCall_7_1_0()); 
	    }
		lv_userCode1_9_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolClassRule());
	        }
       		set(
       			$current, 
       			"userCode1",
        		lv_userCode1_9_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_10='usercode2' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getProtocolClassAccess().getUsercode2Keyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getUserCode2DetailCodeParserRuleCall_8_1_0()); 
	    }
		lv_userCode2_11_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolClassRule());
	        }
       		set(
       			$current, 
       			"userCode2",
        		lv_userCode2_11_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_12='usercode3' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getProtocolClassAccess().getUsercode3Keyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getUserCode3DetailCodeParserRuleCall_9_1_0()); 
	    }
		lv_userCode3_13_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolClassRule());
	        }
       		set(
       			$current, 
       			"userCode3",
        		lv_userCode3_13_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_14='incoming' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getProtocolClassAccess().getIncomingKeyword_10_0());
    }
	otherlv_15='{' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getProtocolClassAccess().getLeftCurlyBracketKeyword_10_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getIncomingMessagesMessageParserRuleCall_10_2_0()); 
	    }
		lv_incomingMessages_16_0=ruleMessage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolClassRule());
	        }
       		add(
       			$current, 
       			"incomingMessages",
        		lv_incomingMessages_16_0, 
        		"org.eclipse.etrice.core.Room.Message");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getProtocolClassAccess().getRightCurlyBracketKeyword_10_3());
    }
)?(	otherlv_18='outgoing' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getProtocolClassAccess().getOutgoingKeyword_11_0());
    }
	otherlv_19='{' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getProtocolClassAccess().getLeftCurlyBracketKeyword_11_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getOutgoingMessagesMessageParserRuleCall_11_2_0()); 
	    }
		lv_outgoingMessages_20_0=ruleMessage		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolClassRule());
	        }
       		add(
       			$current, 
       			"outgoingMessages",
        		lv_outgoingMessages_20_0, 
        		"org.eclipse.etrice.core.Room.Message");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getProtocolClassAccess().getRightCurlyBracketKeyword_11_3());
    }
)?(	otherlv_22='regular' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getProtocolClassAccess().getRegularKeyword_12_0());
    }
	otherlv_23='PortClass' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getProtocolClassAccess().getPortClassKeyword_12_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getRegularPortClassParserRuleCall_12_2_0()); 
	    }
		lv_regular_24_0=rulePortClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolClassRule());
	        }
       		set(
       			$current, 
       			"regular",
        		lv_regular_24_0, 
        		"org.eclipse.etrice.core.Room.PortClass");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_25='conjugated' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getProtocolClassAccess().getConjugatedKeyword_13_0());
    }
	otherlv_26='PortClass' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getProtocolClassAccess().getPortClassKeyword_13_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getConjugatedPortClassParserRuleCall_13_2_0()); 
	    }
		lv_conjugated_27_0=rulePortClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolClassRule());
	        }
       		set(
       			$current, 
       			"conjugated",
        		lv_conjugated_27_0, 
        		"org.eclipse.etrice.core.Room.PortClass");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolClassAccess().getSemanticsProtocolSemanticsParserRuleCall_14_0()); 
	    }
		lv_semantics_28_0=ruleProtocolSemantics		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolClassRule());
	        }
       		set(
       			$current, 
       			"semantics",
        		lv_semantics_28_0, 
        		"org.eclipse.etrice.core.fsm.FSM.ProtocolSemantics");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_29='}' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getProtocolClassAccess().getRightCurlyBracketKeyword_15());
    }
)
;





// Entry rule entryRuleCompoundProtocolClass
entryRuleCompoundProtocolClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCompoundProtocolClassRule()); }
	 iv_ruleCompoundProtocolClass=ruleCompoundProtocolClass 
	 { $current=$iv_ruleCompoundProtocolClass.current; } 
	 EOF 
;

// Rule CompoundProtocolClass
ruleCompoundProtocolClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='CompoundProtocolClass' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCompoundProtocolClassAccess().getCompoundProtocolClassKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCompoundProtocolClassAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCompoundProtocolClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCompoundProtocolClassAccess().getDocuDocumentationParserRuleCall_2_0()); 
	    }
		lv_docu_2_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompoundProtocolClassRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_2_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCompoundProtocolClassAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCompoundProtocolClassAccess().getAnnotationsAnnotationParserRuleCall_4_0()); 
	    }
		lv_annotations_4_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompoundProtocolClassRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_4_0, 
        		"org.eclipse.etrice.core.common.Base.Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCompoundProtocolClassAccess().getSubProtocolsSubProtocolParserRuleCall_5_0()); 
	    }
		lv_subProtocols_5_0=ruleSubProtocol		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCompoundProtocolClassRule());
	        }
       		add(
       			$current, 
       			"subProtocols",
        		lv_subProtocols_5_0, 
        		"org.eclipse.etrice.core.Room.SubProtocol");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCompoundProtocolClassAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleSubProtocol
entryRuleSubProtocol returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubProtocolRule()); }
	 iv_ruleSubProtocol=ruleSubProtocol 
	 { $current=$iv_ruleSubProtocol.current; } 
	 EOF 
;

// Rule SubProtocol
ruleSubProtocol returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SubProtocol' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubProtocolAccess().getSubProtocolKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSubProtocolAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubProtocolRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubProtocolAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubProtocolRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSubProtocolAccess().getProtocolGeneralProtocolClassCrossReference_3_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMessage
entryRuleMessage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMessageRule()); }
	 iv_ruleMessage=ruleMessage 
	 { $current=$iv_ruleMessage.current; } 
	 EOF 
;

// Rule Message
ruleMessage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_priv_0_0=	'private' 
    {
        newLeafNode(lv_priv_0_0, grammarAccess.getMessageAccess().getPrivPrivateKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMessageRule());
	        }
       		setWithLastConsumed($current, "priv", true, "private");
	    }

)
)?	otherlv_1='Message' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMessageAccess().getMessageKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getMessageAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMessageRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMessageAccess().getLeftParenthesisKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageAccess().getDataMessageDataParserRuleCall_3_1_0()); 
	    }
		lv_data_4_0=ruleMessageData		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageRule());
	        }
       		set(
       			$current, 
       			"data",
        		lv_data_4_0, 
        		"org.eclipse.etrice.core.Room.MessageData");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMessageAccess().getRightParenthesisKeyword_3_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageAccess().getAnnotationsAnnotationParserRuleCall_4_0()); 
	    }
		lv_annotations_6_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_6_0, 
        		"org.eclipse.etrice.core.common.Base.Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMessageAccess().getDocuDocumentationParserRuleCall_5_0()); 
	    }
		lv_docu_7_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMessageRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_7_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRulePortClass
entryRulePortClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPortClassRule()); }
	 iv_rulePortClass=rulePortClass 
	 { $current=$iv_rulePortClass.current; } 
	 EOF 
;

// Rule PortClass
rulePortClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPortClassAccess().getPortClassAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPortClassAccess().getLeftCurlyBracketKeyword_1());
    }
(	otherlv_2='usercode' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPortClassAccess().getUsercodeKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPortClassAccess().getUserCodeDetailCodeParserRuleCall_2_1_0()); 
	    }
		lv_userCode_3_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortClassRule());
	        }
       		set(
       			$current, 
       			"userCode",
        		lv_userCode_3_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getPortClassAccess().getMsgHandlersMessageHandlerParserRuleCall_3_0_0()); 
	    }
		lv_msgHandlers_4_0=ruleMessageHandler		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortClassRule());
	        }
       		add(
       			$current, 
       			"msgHandlers",
        		lv_msgHandlers_4_0, 
        		"org.eclipse.etrice.core.Room.MessageHandler");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPortClassAccess().getOperationsPortOperationParserRuleCall_3_1_0()); 
	    }
		lv_operations_5_0=rulePortOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortClassRule());
	        }
       		add(
       			$current, 
       			"operations",
        		lv_operations_5_0, 
        		"org.eclipse.etrice.core.Room.PortOperation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPortClassAccess().getAttributesAttributeParserRuleCall_3_2_0()); 
	    }
		lv_attributes_6_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortClassRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_6_0, 
        		"org.eclipse.etrice.core.Room.Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPortClassAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleMessageHandler
entryRuleMessageHandler returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMessageHandlerRule()); }
	 iv_ruleMessageHandler=ruleMessageHandler 
	 { $current=$iv_ruleMessageHandler.current; } 
	 EOF 
;

// Rule MessageHandler
ruleMessageHandler returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMessageHandlerAccess().getInMessageHandlerParserRuleCall_0()); 
    }
    this_InMessageHandler_0=ruleInMessageHandler
    { 
        $current = $this_InMessageHandler_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMessageHandlerAccess().getOutMessageHandlerParserRuleCall_1()); 
    }
    this_OutMessageHandler_1=ruleOutMessageHandler
    { 
        $current = $this_OutMessageHandler_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInMessageHandler
entryRuleInMessageHandler returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInMessageHandlerRule()); }
	 iv_ruleInMessageHandler=ruleInMessageHandler 
	 { $current=$iv_ruleInMessageHandler.current; } 
	 EOF 
;

// Rule InMessageHandler
ruleInMessageHandler returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='handle' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInMessageHandlerAccess().getHandleKeyword_0());
    }
	otherlv_1='incoming' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInMessageHandlerAccess().getIncomingKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInMessageHandlerRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getInMessageHandlerAccess().getMsgMessageCrossReference_2_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInMessageHandlerAccess().getDetailCodeDetailCodeParserRuleCall_3_0()); 
	    }
		lv_detailCode_3_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInMessageHandlerRule());
	        }
       		set(
       			$current, 
       			"detailCode",
        		lv_detailCode_3_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleOutMessageHandler
entryRuleOutMessageHandler returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutMessageHandlerRule()); }
	 iv_ruleOutMessageHandler=ruleOutMessageHandler 
	 { $current=$iv_ruleOutMessageHandler.current; } 
	 EOF 
;

// Rule OutMessageHandler
ruleOutMessageHandler returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='handle' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOutMessageHandlerAccess().getHandleKeyword_0());
    }
	otherlv_1='outgoing' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOutMessageHandlerAccess().getOutgoingKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutMessageHandlerRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getOutMessageHandlerAccess().getMsgMessageCrossReference_2_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOutMessageHandlerAccess().getDetailCodeDetailCodeParserRuleCall_3_0()); 
	    }
		lv_detailCode_3_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutMessageHandlerRule());
	        }
       		set(
       			$current, 
       			"detailCode",
        		lv_detailCode_3_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleModelComponent
entryRuleModelComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelComponentRule()); }
	 iv_ruleModelComponent=ruleModelComponent 
	 { $current=$iv_ruleModelComponent.current; } 
	 EOF 
;

// Rule ModelComponent
ruleModelComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getModelComponentAccess().getActorClassParserRuleCall()); 
    }
    this_ActorClass_0=ruleActorClass
    { 
        $current = $this_ActorClass_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleActorClass
entryRuleActorClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActorClassRule()); }
	 iv_ruleActorClass=ruleActorClass 
	 { $current=$iv_ruleActorClass.current; } 
	 EOF 
;

// Rule ActorClass
ruleActorClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getActorClassAccess().getUnorderedGroup_0());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getActorClassAccess().getUnorderedGroup_0(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getActorClassAccess().getUnorderedGroup_0(), 0);
	 				}
					({true}?=>(
(
		lv_abstract_1_0=	'abstract' 
    {
        newLeafNode(lv_abstract_1_0, grammarAccess.getActorClassAccess().getAbstractAbstractKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorClassRule());
	        }
       		setWithLastConsumed($current, "abstract", true, "abstract");
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getActorClassAccess().getUnorderedGroup_0());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getActorClassAccess().getUnorderedGroup_0(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getActorClassAccess().getUnorderedGroup_0(), 1);
	 				}
					({true}?=>(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getCommTypeComponentCommunicationTypeEnumRuleCall_0_1_0()); 
	    }
		lv_commType_2_0=ruleComponentCommunicationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		set(
       			$current, 
       			"commType",
        		lv_commType_2_0, 
        		"org.eclipse.etrice.core.fsm.FSM.ComponentCommunicationType");
	        afterParserOrEnumRuleCall();
	    }

)
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getActorClassAccess().getUnorderedGroup_0());
	 				}
 				)
			)  

		)*	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getActorClassAccess().getUnorderedGroup_0());
	}

)	otherlv_3='ActorClass' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getActorClassAccess().getActorClassKeyword_1());
    }
(
(
		lv_name_4_0=RULE_ID
		{
			newLeafNode(lv_name_4_0, grammarAccess.getActorClassAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getDocuDocumentationParserRuleCall_3_0()); 
	    }
		lv_docu_5_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_5_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_6='extends' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getActorClassAccess().getExtendsKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorClassRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getBaseActorClassCrossReference_4_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getActorClassAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getAnnotationsAnnotationParserRuleCall_6_0()); 
	    }
		lv_annotations_9_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_9_0, 
        		"org.eclipse.etrice.core.common.Base.Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_10='Interface' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getActorClassAccess().getInterfaceKeyword_7_0());
    }
	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getActorClassAccess().getLeftCurlyBracketKeyword_7_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getServiceProvisionPointsSPPParserRuleCall_7_2_0_0()); 
	    }
		lv_serviceProvisionPoints_12_0=ruleSPP		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"serviceProvisionPoints",
        		lv_serviceProvisionPoints_12_0, 
        		"org.eclipse.etrice.core.Room.SPP");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getInterfacePortsPortParserRuleCall_7_2_1_0()); 
	    }
		lv_interfacePorts_13_0=rulePort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"interfacePorts",
        		lv_interfacePorts_13_0, 
        		"org.eclipse.etrice.core.Room.Port");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getActorClassAccess().getRightCurlyBracketKeyword_7_3());
    }
)?(	otherlv_15='Structure' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getActorClassAccess().getStructureKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getStructureDocuDocumentationParserRuleCall_8_1_0()); 
	    }
		lv_structureDocu_16_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		set(
       			$current, 
       			"structureDocu",
        		lv_structureDocu_16_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_17='{' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getActorClassAccess().getLeftCurlyBracketKeyword_8_2());
    }
(	otherlv_18='usercode1' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getActorClassAccess().getUsercode1Keyword_8_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getUserCode1DetailCodeParserRuleCall_8_3_1_0()); 
	    }
		lv_userCode1_19_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		set(
       			$current, 
       			"userCode1",
        		lv_userCode1_19_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_20='usercode2' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getActorClassAccess().getUsercode2Keyword_8_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getUserCode2DetailCodeParserRuleCall_8_4_1_0()); 
	    }
		lv_userCode2_21_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		set(
       			$current, 
       			"userCode2",
        		lv_userCode2_21_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_22='usercode3' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getActorClassAccess().getUsercode3Keyword_8_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getUserCode3DetailCodeParserRuleCall_8_5_1_0()); 
	    }
		lv_userCode3_23_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		set(
       			$current, 
       			"userCode3",
        		lv_userCode3_23_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getConnectionsLayerConnectionParserRuleCall_8_6_0_0()); 
	    }
		lv_connections_24_0=ruleLayerConnection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"connections",
        		lv_connections_24_0, 
        		"org.eclipse.etrice.core.Room.LayerConnection");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getBindingsBindingParserRuleCall_8_6_1_0()); 
	    }
		lv_bindings_25_0=ruleBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"bindings",
        		lv_bindings_25_0, 
        		"org.eclipse.etrice.core.Room.Binding");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getServiceImplementationsServiceImplementationParserRuleCall_8_6_2_0()); 
	    }
		lv_serviceImplementations_26_0=ruleServiceImplementation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"serviceImplementations",
        		lv_serviceImplementations_26_0, 
        		"org.eclipse.etrice.core.Room.ServiceImplementation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getAttributesAttributeParserRuleCall_8_6_3_0()); 
	    }
		lv_attributes_27_0=ruleAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_27_0, 
        		"org.eclipse.etrice.core.Room.Attribute");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getActorRefsActorRefParserRuleCall_8_6_4_0()); 
	    }
		lv_actorRefs_28_0=ruleActorRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"actorRefs",
        		lv_actorRefs_28_0, 
        		"org.eclipse.etrice.core.Room.ActorRef");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getServiceAccessPointsSAPParserRuleCall_8_6_5_0()); 
	    }
		lv_serviceAccessPoints_29_0=ruleSAP		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"serviceAccessPoints",
        		lv_serviceAccessPoints_29_0, 
        		"org.eclipse.etrice.core.Room.SAP");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getInternalPortsPortParserRuleCall_8_6_6_0()); 
	    }
		lv_internalPorts_30_0=rulePort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"internalPorts",
        		lv_internalPorts_30_0, 
        		"org.eclipse.etrice.core.Room.Port");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getExternalPortsExternalPortParserRuleCall_8_6_7_0()); 
	    }
		lv_externalPorts_31_0=ruleExternalPort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"externalPorts",
        		lv_externalPorts_31_0, 
        		"org.eclipse.etrice.core.Room.ExternalPort");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_32='}' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getActorClassAccess().getRightCurlyBracketKeyword_8_7());
    }
)?(	otherlv_33='Behavior' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getActorClassAccess().getBehaviorKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getBehaviorDocuDocumentationParserRuleCall_9_1_0()); 
	    }
		lv_behaviorDocu_34_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		set(
       			$current, 
       			"behaviorDocu",
        		lv_behaviorDocu_34_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_35='{' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getActorClassAccess().getLeftCurlyBracketKeyword_9_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getBehaviorAnnotationsAnnotationParserRuleCall_9_3_0()); 
	    }
		lv_behaviorAnnotations_36_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"behaviorAnnotations",
        		lv_behaviorAnnotations_36_0, 
        		"org.eclipse.etrice.core.common.Base.Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getOperationsStandardOperationParserRuleCall_9_4_0_0()); 
	    }
		lv_operations_37_0=ruleStandardOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"operations",
        		lv_operations_37_0, 
        		"org.eclipse.etrice.core.Room.StandardOperation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getStructorsClassStructorParserRuleCall_9_4_1_0()); 
	    }
		lv_structors_38_0=ruleClassStructor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		add(
       			$current, 
       			"structors",
        		lv_structors_38_0, 
        		"org.eclipse.etrice.core.Room.ClassStructor");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
(
		{ 
	        newCompositeNode(grammarAccess.getActorClassAccess().getStateMachineStateMachineParserRuleCall_9_5_0()); 
	    }
		lv_stateMachine_39_0=ruleStateMachine		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorClassRule());
	        }
       		set(
       			$current, 
       			"stateMachine",
        		lv_stateMachine_39_0, 
        		"org.eclipse.etrice.core.fsm.FSM.StateMachine");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_40='}' 
    {
    	newLeafNode(otherlv_40, grammarAccess.getActorClassAccess().getRightCurlyBracketKeyword_9_6());
    }
)?	otherlv_41='}' 
    {
    	newLeafNode(otherlv_41, grammarAccess.getActorClassAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleInterfaceItem
entryRuleInterfaceItem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceItemRule()); }
	 iv_ruleInterfaceItem=ruleInterfaceItem 
	 { $current=$iv_ruleInterfaceItem.current; } 
	 EOF 
;

// Rule InterfaceItem
ruleInterfaceItem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getInterfaceItemAccess().getPortParserRuleCall_0()); 
    }
    this_Port_0=rulePort
    { 
        $current = $this_Port_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInterfaceItemAccess().getSAPParserRuleCall_1()); 
    }
    this_SAP_1=ruleSAP
    { 
        $current = $this_SAP_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInterfaceItemAccess().getSPPParserRuleCall_2()); 
    }
    this_SPP_2=ruleSPP
    { 
        $current = $this_SPP_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePort
entryRulePort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPortRule()); }
	 iv_rulePort=rulePort 
	 { $current=$iv_rulePort.current; } 
	 EOF 
;

// Rule Port
rulePort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_conjugated_0_0=	'conjugated' 
    {
        newLeafNode(lv_conjugated_0_0, grammarAccess.getPortAccess().getConjugatedConjugatedKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortRule());
	        }
       		setWithLastConsumed($current, "conjugated", true, "conjugated");
	    }

)
)?	otherlv_1='Port' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPortAccess().getPortKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getPortAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPortAccess().getMultiplicityMULTIPLICITYParserRuleCall_3_0()); 
	    }
		lv_multiplicity_3_0=ruleMULTIPLICITY		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortRule());
	        }
       		set(
       			$current, 
       			"multiplicity",
        		lv_multiplicity_3_0, 
        		"org.eclipse.etrice.core.Room.MULTIPLICITY");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPortAccess().getColonKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getPortAccess().getProtocolGeneralProtocolClassCrossReference_5_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPortAccess().getAnnotationsAnnotationParserRuleCall_6_0()); 
	    }
		lv_annotations_6_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_6_0, 
        		"org.eclipse.etrice.core.common.Base.Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPortAccess().getDocuDocumentationParserRuleCall_7_0()); 
	    }
		lv_docu_7_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_7_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleExternalPort
entryRuleExternalPort returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExternalPortRule()); }
	 iv_ruleExternalPort=ruleExternalPort 
	 { $current=$iv_ruleExternalPort.current; } 
	 EOF 
;

// Rule ExternalPort
ruleExternalPort returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='external' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExternalPortAccess().getExternalKeyword_0());
    }
	otherlv_1='Port' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExternalPortAccess().getPortKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExternalPortRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getExternalPortAccess().getInterfacePortPortCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleSAP
entryRuleSAP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSAPRule()); }
	 iv_ruleSAP=ruleSAP 
	 { $current=$iv_ruleSAP.current; } 
	 EOF 
;

// Rule SAP
ruleSAP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SAP' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSAPAccess().getSAPKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSAPAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSAPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSAPAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSAPRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSAPAccess().getProtocolProtocolClassCrossReference_3_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSAPAccess().getDocuDocumentationParserRuleCall_4_0()); 
	    }
		lv_docu_4_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSAPRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_4_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleSPP
entryRuleSPP returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSPPRule()); }
	 iv_ruleSPP=ruleSPP 
	 { $current=$iv_ruleSPP.current; } 
	 EOF 
;

// Rule SPP
ruleSPP returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SPP' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSPPAccess().getSPPKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSPPAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPPRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSPPAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPPRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSPPAccess().getProtocolProtocolClassCrossReference_3_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSPPAccess().getDocuDocumentationParserRuleCall_4_0()); 
	    }
		lv_docu_4_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSPPRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_4_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleServiceImplementation
entryRuleServiceImplementation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getServiceImplementationRule()); }
	 iv_ruleServiceImplementation=ruleServiceImplementation 
	 { $current=$iv_ruleServiceImplementation.current; } 
	 EOF 
;

// Rule ServiceImplementation
ruleServiceImplementation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ServiceImplementation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getServiceImplementationAccess().getServiceImplementationKeyword_0());
    }
	otherlv_1='of' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getServiceImplementationAccess().getOfKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getServiceImplementationRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getServiceImplementationAccess().getSppSPPCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleLogicalSystem
entryRuleLogicalSystem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogicalSystemRule()); }
	 iv_ruleLogicalSystem=ruleLogicalSystem 
	 { $current=$iv_ruleLogicalSystem.current; } 
	 EOF 
;

// Rule LogicalSystem
ruleLogicalSystem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='LogicalSystem' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLogicalSystemAccess().getLogicalSystemKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getLogicalSystemAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicalSystemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalSystemAccess().getDocuDocumentationParserRuleCall_2_0()); 
	    }
		lv_docu_2_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalSystemRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_2_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLogicalSystemAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalSystemAccess().getAnnotationsAnnotationParserRuleCall_4_0()); 
	    }
		lv_annotations_4_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalSystemRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_4_0, 
        		"org.eclipse.etrice.core.common.Base.Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalSystemAccess().getConnectionsLayerConnectionParserRuleCall_5_0_0()); 
	    }
		lv_connections_5_0=ruleLayerConnection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalSystemRule());
	        }
       		add(
       			$current, 
       			"connections",
        		lv_connections_5_0, 
        		"org.eclipse.etrice.core.Room.LayerConnection");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalSystemAccess().getBindingsBindingParserRuleCall_5_1_0()); 
	    }
		lv_bindings_6_0=ruleBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalSystemRule());
	        }
       		add(
       			$current, 
       			"bindings",
        		lv_bindings_6_0, 
        		"org.eclipse.etrice.core.Room.Binding");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLogicalSystemAccess().getSubSystemsSubSystemRefParserRuleCall_5_2_0()); 
	    }
		lv_subSystems_7_0=ruleSubSystemRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLogicalSystemRule());
	        }
       		add(
       			$current, 
       			"subSystems",
        		lv_subSystems_7_0, 
        		"org.eclipse.etrice.core.Room.SubSystemRef");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getLogicalSystemAccess().getRightCurlyBracketKeyword_6());
    }
)
;







// Entry rule entryRuleSubSystemRef
entryRuleSubSystemRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubSystemRefRule()); }
	 iv_ruleSubSystemRef=ruleSubSystemRef 
	 { $current=$iv_ruleSubSystemRef.current; } 
	 EOF 
;

// Rule SubSystemRef
ruleSubSystemRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SubSystemRef' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubSystemRefAccess().getSubSystemRefKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSubSystemRefAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubSystemRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSubSystemRefAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubSystemRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getSubSystemRefAccess().getTypeSubSystemClassCrossReference_3_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemRefAccess().getDocuDocumentationParserRuleCall_4_0()); 
	    }
		lv_docu_4_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemRefRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_4_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleSubSystemClass
entryRuleSubSystemClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubSystemClassRule()); }
	 iv_ruleSubSystemClass=ruleSubSystemClass 
	 { $current=$iv_ruleSubSystemClass.current; } 
	 EOF 
;

// Rule SubSystemClass
ruleSubSystemClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='SubSystemClass' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSubSystemClassAccess().getSubSystemClassKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSubSystemClassAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubSystemClassRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getDocuDocumentationParserRuleCall_2_0()); 
	    }
		lv_docu_2_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_2_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSubSystemClassAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getAnnotationsAnnotationParserRuleCall_4_0()); 
	    }
		lv_annotations_4_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_4_0, 
        		"org.eclipse.etrice.core.common.Base.Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_5='usercode1' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSubSystemClassAccess().getUsercode1Keyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getUserCode1DetailCodeParserRuleCall_5_1_0()); 
	    }
		lv_userCode1_6_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		set(
       			$current, 
       			"userCode1",
        		lv_userCode1_6_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='usercode2' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSubSystemClassAccess().getUsercode2Keyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getUserCode2DetailCodeParserRuleCall_6_1_0()); 
	    }
		lv_userCode2_8_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		set(
       			$current, 
       			"userCode2",
        		lv_userCode2_8_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='usercode3' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSubSystemClassAccess().getUsercode3Keyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getUserCode3DetailCodeParserRuleCall_7_1_0()); 
	    }
		lv_userCode3_10_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		set(
       			$current, 
       			"userCode3",
        		lv_userCode3_10_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?((
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getActorInstanceMappingsActorInstanceMappingParserRuleCall_8_0_0()); 
	    }
		lv_actorInstanceMappings_11_0=ruleActorInstanceMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		add(
       			$current, 
       			"actorInstanceMappings",
        		lv_actorInstanceMappings_11_0, 
        		"org.eclipse.etrice.core.Room.ActorInstanceMapping");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getThreadsLogicalThreadParserRuleCall_8_1_0()); 
	    }
		lv_threads_12_0=ruleLogicalThread		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		add(
       			$current, 
       			"threads",
        		lv_threads_12_0, 
        		"org.eclipse.etrice.core.Room.LogicalThread");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getConnectionsLayerConnectionParserRuleCall_8_2_0()); 
	    }
		lv_connections_13_0=ruleLayerConnection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		add(
       			$current, 
       			"connections",
        		lv_connections_13_0, 
        		"org.eclipse.etrice.core.Room.LayerConnection");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getBindingsBindingParserRuleCall_8_3_0()); 
	    }
		lv_bindings_14_0=ruleBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		add(
       			$current, 
       			"bindings",
        		lv_bindings_14_0, 
        		"org.eclipse.etrice.core.Room.Binding");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getActorRefsActorRefParserRuleCall_8_4_0()); 
	    }
		lv_actorRefs_15_0=ruleActorRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		add(
       			$current, 
       			"actorRefs",
        		lv_actorRefs_15_0, 
        		"org.eclipse.etrice.core.Room.ActorRef");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getServiceProvisionPointsSPPParserRuleCall_8_5_0()); 
	    }
		lv_serviceProvisionPoints_16_0=ruleSPP		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		add(
       			$current, 
       			"serviceProvisionPoints",
        		lv_serviceProvisionPoints_16_0, 
        		"org.eclipse.etrice.core.Room.SPP");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSubSystemClassAccess().getRelayPortsPortParserRuleCall_8_6_0()); 
	    }
		lv_relayPorts_17_0=rulePort		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSubSystemClassRule());
	        }
       		add(
       			$current, 
       			"relayPorts",
        		lv_relayPorts_17_0, 
        		"org.eclipse.etrice.core.Room.Port");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_18='}' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getSubSystemClassAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleLogicalThread
entryRuleLogicalThread returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLogicalThreadRule()); }
	 iv_ruleLogicalThread=ruleLogicalThread 
	 { $current=$iv_ruleLogicalThread.current; } 
	 EOF 
;

// Rule LogicalThread
ruleLogicalThread returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='LogicalThread' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLogicalThreadAccess().getLogicalThreadKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getLogicalThreadAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLogicalThreadRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
))
;





// Entry rule entryRuleActorInstanceMapping
entryRuleActorInstanceMapping returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActorInstanceMappingRule()); }
	 iv_ruleActorInstanceMapping=ruleActorInstanceMapping 
	 { $current=$iv_ruleActorInstanceMapping.current; } 
	 EOF 
;

// Rule ActorInstanceMapping
ruleActorInstanceMapping returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ActorInstanceMapping' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getActorInstanceMappingAccess().getActorInstanceMappingKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorInstanceMappingAccess().getPathRefPathParserRuleCall_1_0()); 
	    }
		lv_path_1_0=ruleRefPath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorInstanceMappingRule());
	        }
       		set(
       			$current, 
       			"path",
        		lv_path_1_0, 
        		"org.eclipse.etrice.core.Room.RefPath");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='->' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getActorInstanceMappingAccess().getHyphenMinusGreaterThanSignKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorInstanceMappingRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getActorInstanceMappingAccess().getThreadLogicalThreadCrossReference_3_0()); 
	}

)
)(	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getActorInstanceMappingAccess().getLeftCurlyBracketKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActorInstanceMappingAccess().getActorInstanceMappingsActorInstanceMappingParserRuleCall_4_1_0()); 
	    }
		lv_actorInstanceMappings_5_0=ruleActorInstanceMapping		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorInstanceMappingRule());
	        }
       		add(
       			$current, 
       			"actorInstanceMappings",
        		lv_actorInstanceMappings_5_0, 
        		"org.eclipse.etrice.core.Room.ActorInstanceMapping");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getActorInstanceMappingAccess().getRightCurlyBracketKeyword_4_2());
    }
)?)
;





// Entry rule entryRuleRefPath
entryRuleRefPath returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefPathRule()); }
	 iv_ruleRefPath=ruleRefPath 
	 { $current=$iv_ruleRefPath.current; } 
	 EOF 
;

// Rule RefPath
ruleRefPath returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getRefPathAccess().getRefsRefSegmentParserRuleCall_0_0()); 
	    }
		lv_refs_0_0=ruleRefSegment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefPathRule());
	        }
       		add(
       			$current, 
       			"refs",
        		lv_refs_0_0, 
        		"org.eclipse.etrice.core.Room.RefSegment");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='/' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRefPathAccess().getSolidusKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRefPathAccess().getRefsRefSegmentParserRuleCall_1_1_0()); 
	    }
		lv_refs_2_0=ruleRefSegment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefPathRule());
	        }
       		add(
       			$current, 
       			"refs",
        		lv_refs_2_0, 
        		"org.eclipse.etrice.core.Room.RefSegment");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleRefSegment
entryRuleRefSegment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefSegmentRule()); }
	 iv_ruleRefSegment=ruleRefSegment 
	 { $current=$iv_ruleRefSegment.current; } 
	 EOF 
;

// Rule RefSegment
ruleRefSegment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_ref_0_0=RULE_ID
		{
			newLeafNode(lv_ref_0_0, grammarAccess.getRefSegmentAccess().getRefIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefSegmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ref",
        		lv_ref_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRefSegmentAccess().getColonKeyword_1_0());
    }
(
(
		lv_idx_2_0=RULE_INT
		{
			newLeafNode(lv_idx_2_0, grammarAccess.getRefSegmentAccess().getIdxINTTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefSegmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"idx",
        		lv_idx_2_0, 
        		"org.eclipse.xtext.common.Terminals.INT");
	    }

)
))?)
;





// Entry rule entryRuleBinding
entryRuleBinding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBindingRule()); }
	 iv_ruleBinding=ruleBinding 
	 { $current=$iv_ruleBinding.current; } 
	 EOF 
;

// Rule Binding
ruleBinding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Binding' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBindingAccess().getBindingKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingAccess().getEndpoint1BindingEndPointParserRuleCall_1_0()); 
	    }
		lv_endpoint1_1_0=ruleBindingEndPoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingRule());
	        }
       		set(
       			$current, 
       			"endpoint1",
        		lv_endpoint1_1_0, 
        		"org.eclipse.etrice.core.Room.BindingEndPoint");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='and' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBindingAccess().getAndKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBindingAccess().getEndpoint2BindingEndPointParserRuleCall_3_0()); 
	    }
		lv_endpoint2_3_0=ruleBindingEndPoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBindingRule());
	        }
       		set(
       			$current, 
       			"endpoint2",
        		lv_endpoint2_3_0, 
        		"org.eclipse.etrice.core.Room.BindingEndPoint");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBindingEndPoint
entryRuleBindingEndPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBindingEndPointRule()); }
	 iv_ruleBindingEndPoint=ruleBindingEndPoint 
	 { $current=$iv_ruleBindingEndPoint.current; } 
	 EOF 
;

// Rule BindingEndPoint
ruleBindingEndPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindingEndPointRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getBindingEndPointAccess().getActorRefActorContainerRefCrossReference_0_0_0()); 
	}

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBindingEndPointAccess().getFullStopKeyword_0_1());
    }
)?(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindingEndPointRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getBindingEndPointAccess().getPortPortCrossReference_1_0()); 
	}

)
)(	otherlv_3='sub' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBindingEndPointAccess().getSubKeyword_2_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getBindingEndPointRule());
	        }
        }
	otherlv_4=RULE_ID
	{
		newLeafNode(otherlv_4, grammarAccess.getBindingEndPointAccess().getSubSubProtocolCrossReference_2_1_0()); 
	}

)
))?)
;





// Entry rule entryRuleLayerConnection
entryRuleLayerConnection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLayerConnectionRule()); }
	 iv_ruleLayerConnection=ruleLayerConnection 
	 { $current=$iv_ruleLayerConnection.current; } 
	 EOF 
;

// Rule LayerConnection
ruleLayerConnection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='LayerConnection' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLayerConnectionAccess().getLayerConnectionKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLayerConnectionAccess().getFromSAPointParserRuleCall_1_0()); 
	    }
		lv_from_1_0=ruleSAPoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLayerConnectionRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_1_0, 
        		"org.eclipse.etrice.core.Room.SAPoint");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='satisfied_by' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLayerConnectionAccess().getSatisfied_byKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLayerConnectionAccess().getToSPPointParserRuleCall_3_0()); 
	    }
		lv_to_3_0=ruleSPPoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLayerConnectionRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_3_0, 
        		"org.eclipse.etrice.core.Room.SPPoint");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSAPoint
entryRuleSAPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSAPointRule()); }
	 iv_ruleSAPoint=ruleSAPoint 
	 { $current=$iv_ruleSAPoint.current; } 
	 EOF 
;

// Rule SAPoint
ruleSAPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSAPointAccess().getRefSAPointParserRuleCall_0()); 
    }
    this_RefSAPoint_0=ruleRefSAPoint
    { 
        $current = $this_RefSAPoint_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSAPointAccess().getRelaySAPointParserRuleCall_1()); 
    }
    this_RelaySAPoint_1=ruleRelaySAPoint
    { 
        $current = $this_RelaySAPoint_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRefSAPoint
entryRuleRefSAPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefSAPointRule()); }
	 iv_ruleRefSAPoint=ruleRefSAPoint 
	 { $current=$iv_ruleRefSAPoint.current; } 
	 EOF 
;

// Rule RefSAPoint
ruleRefSAPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ref' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRefSAPointAccess().getRefKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefSAPointRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getRefSAPointAccess().getRefActorContainerRefCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleRelaySAPoint
entryRuleRelaySAPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelaySAPointRule()); }
	 iv_ruleRelaySAPoint=ruleRelaySAPoint 
	 { $current=$iv_ruleRelaySAPoint.current; } 
	 EOF 
;

// Rule RelaySAPoint
ruleRelaySAPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='relay_sap' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRelaySAPointAccess().getRelay_sapKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelaySAPointRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getRelaySAPointAccess().getRelaySPPCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleSPPoint
entryRuleSPPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSPPointRule()); }
	 iv_ruleSPPoint=ruleSPPoint 
	 { $current=$iv_ruleSPPoint.current; } 
	 EOF 
;

// Rule SPPoint
ruleSPPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPPointRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getSPPointAccess().getRefActorContainerRefCrossReference_0_0()); 
	}

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSPPointAccess().getFullStopKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSPPointRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getSPPointAccess().getServiceSPPCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleActorRef
entryRuleActorRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActorRefRule()); }
	 iv_ruleActorRef=ruleActorRef 
	 { $current=$iv_ruleActorRef.current; } 
	 EOF 
;

// Rule ActorRef
ruleActorRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getActorRefAccess().getRefTypeReferenceTypeEnumRuleCall_0_0()); 
	    }
		lv_refType_0_0=ruleReferenceType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorRefRule());
	        }
       		set(
       			$current, 
       			"refType",
        		lv_refType_0_0, 
        		"org.eclipse.etrice.core.Room.ReferenceType");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_1='ActorRef' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getActorRefAccess().getActorRefKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getActorRefAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getActorRefAccess().getMultiplicityMULTIPLICITYParserRuleCall_3_0()); 
	    }
		lv_multiplicity_3_0=ruleMULTIPLICITY		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorRefRule());
	        }
       		set(
       			$current, 
       			"multiplicity",
        		lv_multiplicity_3_0, 
        		"org.eclipse.etrice.core.Room.MULTIPLICITY");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getActorRefAccess().getColonKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getActorRefRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getActorRefAccess().getTypeActorClassCrossReference_5_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getActorRefAccess().getDocuDocumentationParserRuleCall_6_0()); 
	    }
		lv_docu_6_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActorRefRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_6_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;







// Entry rule entryRuleMULTIPLICITY
entryRuleMULTIPLICITY returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMULTIPLICITYRule()); } 
	 iv_ruleMULTIPLICITY=ruleMULTIPLICITY 
	 { $current=$iv_ruleMULTIPLICITY.current.getText(); }  
	 EOF 
;

// Rule MULTIPLICITY
ruleMULTIPLICITY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMULTIPLICITYAccess().getLeftSquareBracketKeyword_0()); 
    }
(
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMULTIPLICITYAccess().getAsteriskKeyword_1_0()); 
    }

    |    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getMULTIPLICITYAccess().getINTTerminalRuleCall_1_1()); 
    }
)
	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMULTIPLICITYAccess().getRightSquareBracketKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleAnnotationTargetType
entryRuleAnnotationTargetType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationTargetTypeRule()); } 
	 iv_ruleAnnotationTargetType=ruleAnnotationTargetType 
	 { $current=$iv_ruleAnnotationTargetType.current.getText(); }  
	 EOF 
;

// Rule AnnotationTargetType
ruleAnnotationTargetType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='DataClass' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTargetTypeAccess().getDataClassKeyword_0()); 
    }

    |
	kw='ActorClass' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTargetTypeAccess().getActorClassKeyword_1()); 
    }

    |
	kw='ActorBehavior' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTargetTypeAccess().getActorBehaviorKeyword_2()); 
    }

    |
	kw='ProtocolClass' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTargetTypeAccess().getProtocolClassKeyword_3()); 
    }

    |
	kw='CompoundProtocolClass' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTargetTypeAccess().getCompoundProtocolClassKeyword_4()); 
    }

    |
	kw='SubSystemClass' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTargetTypeAccess().getSubSystemClassKeyword_5()); 
    }

    |
	kw='LogicalSystem' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTargetTypeAccess().getLogicalSystemKeyword_6()); 
    }

    |
	kw='Port' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTargetTypeAccess().getPortKeyword_7()); 
    }

    |
	kw='Message' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTargetTypeAccess().getMessageKeyword_8()); 
    }

    |
	kw='State' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTargetTypeAccess().getStateKeyword_9()); 
    }

    |
	kw='Transition' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTargetTypeAccess().getTransitionKeyword_10()); 
    }

    |
	kw='RoomModel' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAnnotationTargetTypeAccess().getRoomModelKeyword_11()); 
    }
)
    ;







// Entry rule entryRuleStateGraphNode
entryRuleStateGraphNode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateGraphNodeRule()); }
	 iv_ruleStateGraphNode=ruleStateGraphNode 
	 { $current=$iv_ruleStateGraphNode.current; } 
	 EOF 
;

// Rule StateGraphNode
ruleStateGraphNode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStateGraphNodeAccess().getStateParserRuleCall_0()); 
    }
    this_State_0=ruleState
    { 
        $current = $this_State_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStateGraphNodeAccess().getChoicePointParserRuleCall_1()); 
    }
    this_ChoicePoint_1=ruleChoicePoint
    { 
        $current = $this_ChoicePoint_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStateGraphNodeAccess().getTrPointParserRuleCall_2()); 
    }
    this_TrPoint_2=ruleTrPoint
    { 
        $current = $this_TrPoint_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRuleStateGraph
entryRuleStateGraph returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateGraphRule()); }
	 iv_ruleStateGraph=ruleStateGraph 
	 { $current=$iv_ruleStateGraph.current; } 
	 EOF 
;

// Rule StateGraph
ruleStateGraph returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStateGraphAccess().getStateGraphAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStateGraphAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getStateGraphAccess().getStatesStateParserRuleCall_2_0_0()); 
	    }
		lv_states_2_0=ruleState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateGraphRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_2_0, 
        		"org.eclipse.etrice.core.fsm.FSM.State");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStateGraphAccess().getTrPointsTrPointParserRuleCall_2_1_0()); 
	    }
		lv_trPoints_3_0=ruleTrPoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateGraphRule());
	        }
       		add(
       			$current, 
       			"trPoints",
        		lv_trPoints_3_0, 
        		"org.eclipse.etrice.core.fsm.FSM.TrPoint");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStateGraphAccess().getChPointsChoicePointParserRuleCall_2_2_0()); 
	    }
		lv_chPoints_4_0=ruleChoicePoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateGraphRule());
	        }
       		add(
       			$current, 
       			"chPoints",
        		lv_chPoints_4_0, 
        		"org.eclipse.etrice.core.fsm.FSM.ChoicePoint");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStateGraphAccess().getTransitionsTransitionParserRuleCall_2_3_0()); 
	    }
		lv_transitions_5_0=ruleTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateGraphRule());
	        }
       		add(
       			$current, 
       			"transitions",
        		lv_transitions_5_0, 
        		"org.eclipse.etrice.core.fsm.FSM.Transition");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStateGraphAccess().getRefinedTransitionsRefinedTransitionParserRuleCall_2_4_0()); 
	    }
		lv_refinedTransitions_6_0=ruleRefinedTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateGraphRule());
	        }
       		add(
       			$current, 
       			"refinedTransitions",
        		lv_refinedTransitions_6_0, 
        		"org.eclipse.etrice.core.fsm.FSM.RefinedTransition");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStateGraphAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleStateMachine
entryRuleStateMachine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateMachineRule()); }
	 iv_ruleStateMachine=ruleStateMachine 
	 { $current=$iv_ruleStateMachine.current; } 
	 EOF 
;

// Rule StateMachine
ruleStateMachine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStateMachineAccess().getStateGraphAction_0(),
            $current);
    }
)	otherlv_1='StateMachine' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStateMachineAccess().getStateMachineKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getStatesStateParserRuleCall_3_0_0()); 
	    }
		lv_states_3_0=ruleState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_3_0, 
        		"org.eclipse.etrice.core.fsm.FSM.State");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getTrPointsTrPointParserRuleCall_3_1_0()); 
	    }
		lv_trPoints_4_0=ruleTrPoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"trPoints",
        		lv_trPoints_4_0, 
        		"org.eclipse.etrice.core.fsm.FSM.TrPoint");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getChPointsChoicePointParserRuleCall_3_2_0()); 
	    }
		lv_chPoints_5_0=ruleChoicePoint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"chPoints",
        		lv_chPoints_5_0, 
        		"org.eclipse.etrice.core.fsm.FSM.ChoicePoint");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getTransitionsTransitionParserRuleCall_3_3_0()); 
	    }
		lv_transitions_6_0=ruleTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"transitions",
        		lv_transitions_6_0, 
        		"org.eclipse.etrice.core.fsm.FSM.Transition");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getRefinedTransitionsRefinedTransitionParserRuleCall_3_4_0()); 
	    }
		lv_refinedTransitions_7_0=ruleRefinedTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"refinedTransitions",
        		lv_refinedTransitions_7_0, 
        		"org.eclipse.etrice.core.fsm.FSM.RefinedTransition");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleState
entryRuleState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateRule()); }
	 iv_ruleState=ruleState 
	 { $current=$iv_ruleState.current; } 
	 EOF 
;

// Rule State
ruleState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getStateAccess().getSimpleStateParserRuleCall_0()); 
    }
    this_SimpleState_0=ruleSimpleState
    { 
        $current = $this_SimpleState_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getStateAccess().getRefinedStateParserRuleCall_1()); 
    }
    this_RefinedState_1=ruleRefinedState
    { 
        $current = $this_RefinedState_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSimpleState
entryRuleSimpleState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleStateRule()); }
	 iv_ruleSimpleState=ruleSimpleState 
	 { $current=$iv_ruleSimpleState.current; } 
	 EOF 
;

// Rule SimpleState
ruleSimpleState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='State' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSimpleStateAccess().getStateKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getSimpleStateAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleStateAccess().getDocuDocumentationParserRuleCall_2_0()); 
	    }
		lv_docu_2_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleStateRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_2_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSimpleStateAccess().getLeftCurlyBracketKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleStateAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); 
	    }
		lv_annotations_4_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleStateRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_4_0, 
        		"org.eclipse.etrice.core.common.Base.Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_5='entry' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSimpleStateAccess().getEntryKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleStateAccess().getEntryCodeDetailCodeParserRuleCall_3_2_1_0()); 
	    }
		lv_entryCode_6_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleStateRule());
	        }
       		set(
       			$current, 
       			"entryCode",
        		lv_entryCode_6_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='exit' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSimpleStateAccess().getExitKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleStateAccess().getExitCodeDetailCodeParserRuleCall_3_3_1_0()); 
	    }
		lv_exitCode_8_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleStateRule());
	        }
       		set(
       			$current, 
       			"exitCode",
        		lv_exitCode_8_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='do' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSimpleStateAccess().getDoKeyword_3_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleStateAccess().getDoCodeDetailCodeParserRuleCall_3_4_1_0()); 
	    }
		lv_doCode_10_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleStateRule());
	        }
       		set(
       			$current, 
       			"doCode",
        		lv_doCode_10_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='subgraph' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSimpleStateAccess().getSubgraphKeyword_3_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleStateAccess().getSubgraphStateGraphParserRuleCall_3_5_1_0()); 
	    }
		lv_subgraph_12_0=ruleStateGraph		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleStateRule());
	        }
       		set(
       			$current, 
       			"subgraph",
        		lv_subgraph_12_0, 
        		"org.eclipse.etrice.core.fsm.FSM.StateGraph");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSimpleStateAccess().getRightCurlyBracketKeyword_3_6());
    }
)?)
;





// Entry rule entryRuleRefinedState
entryRuleRefinedState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefinedStateRule()); }
	 iv_ruleRefinedState=ruleRefinedState 
	 { $current=$iv_ruleRefinedState.current; } 
	 EOF 
;

// Rule RefinedState
ruleRefinedState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RefinedState' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRefinedStateAccess().getRefinedStateKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefinedStateRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRefinedStateAccess().getTargetStateCrossReference_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRefinedStateAccess().getDocuDocumentationParserRuleCall_2_0()); 
	    }
		lv_docu_2_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefinedStateRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_2_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRefinedStateAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRefinedStateAccess().getAnnotationsAnnotationParserRuleCall_4_0()); 
	    }
		lv_annotations_4_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefinedStateRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_4_0, 
        		"org.eclipse.etrice.core.common.Base.Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_5='entry' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRefinedStateAccess().getEntryKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRefinedStateAccess().getEntryCodeDetailCodeParserRuleCall_5_1_0()); 
	    }
		lv_entryCode_6_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefinedStateRule());
	        }
       		set(
       			$current, 
       			"entryCode",
        		lv_entryCode_6_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_7='exit' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRefinedStateAccess().getExitKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRefinedStateAccess().getExitCodeDetailCodeParserRuleCall_6_1_0()); 
	    }
		lv_exitCode_8_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefinedStateRule());
	        }
       		set(
       			$current, 
       			"exitCode",
        		lv_exitCode_8_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_9='do' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getRefinedStateAccess().getDoKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRefinedStateAccess().getDoCodeDetailCodeParserRuleCall_7_1_0()); 
	    }
		lv_doCode_10_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefinedStateRule());
	        }
       		set(
       			$current, 
       			"doCode",
        		lv_doCode_10_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_11='subgraph' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getRefinedStateAccess().getSubgraphKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRefinedStateAccess().getSubgraphStateGraphParserRuleCall_8_1_0()); 
	    }
		lv_subgraph_12_0=ruleStateGraph		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefinedStateRule());
	        }
       		set(
       			$current, 
       			"subgraph",
        		lv_subgraph_12_0, 
        		"org.eclipse.etrice.core.fsm.FSM.StateGraph");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getRefinedStateAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleDetailCode
entryRuleDetailCode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDetailCodeRule()); }
	 iv_ruleDetailCode=ruleDetailCode 
	 { $current=$iv_ruleDetailCode.current; } 
	 EOF 
;

// Rule DetailCode
ruleDetailCode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDetailCodeAccess().getDetailCodeAction_0_0(),
            $current);
    }
)(
(
		lv_lines_1_0=RULE_CC_STRING
		{
			newLeafNode(lv_lines_1_0, grammarAccess.getDetailCodeAccess().getLinesCC_STRINGTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDetailCodeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"lines",
        		lv_lines_1_0, 
        		"org.eclipse.etrice.core.common.Base.CC_STRING");
	    }

)
)?)
    |((
(
		lv_used_2_0=	'{' 
    {
        newLeafNode(lv_used_2_0, grammarAccess.getDetailCodeAccess().getUsedLeftCurlyBracketKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDetailCodeRule());
	        }
       		setWithLastConsumed($current, "used", true, "{");
	    }

)
)(
(
		lv_lines_3_0=RULE_STRING
		{
			newLeafNode(lv_lines_3_0, grammarAccess.getDetailCodeAccess().getLinesSTRINGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDetailCodeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"lines",
        		lv_lines_3_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDetailCodeAccess().getRightCurlyBracketKeyword_1_2());
    }
))
;





// Entry rule entryRuleTrPoint
entryRuleTrPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTrPointRule()); }
	 iv_ruleTrPoint=ruleTrPoint 
	 { $current=$iv_ruleTrPoint.current; } 
	 EOF 
;

// Rule TrPoint
ruleTrPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTrPointAccess().getTransitionPointParserRuleCall_0()); 
    }
    this_TransitionPoint_0=ruleTransitionPoint
    { 
        $current = $this_TransitionPoint_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTrPointAccess().getEntryPointParserRuleCall_1()); 
    }
    this_EntryPoint_1=ruleEntryPoint
    { 
        $current = $this_EntryPoint_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTrPointAccess().getExitPointParserRuleCall_2()); 
    }
    this_ExitPoint_2=ruleExitPoint
    { 
        $current = $this_ExitPoint_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTransitionPoint
entryRuleTransitionPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransitionPointRule()); }
	 iv_ruleTransitionPoint=ruleTransitionPoint 
	 { $current=$iv_ruleTransitionPoint.current; } 
	 EOF 
;

// Rule TransitionPoint
ruleTransitionPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_handler_0_0=	'handler' 
    {
        newLeafNode(lv_handler_0_0, grammarAccess.getTransitionPointAccess().getHandlerHandlerKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionPointRule());
	        }
       		setWithLastConsumed($current, "handler", true, "handler");
	    }

)
)?	otherlv_1='TransitionPoint' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTransitionPointAccess().getTransitionPointKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getTransitionPointAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTransitionPointRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
))
;





// Entry rule entryRuleEntryPoint
entryRuleEntryPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntryPointRule()); }
	 iv_ruleEntryPoint=ruleEntryPoint 
	 { $current=$iv_ruleEntryPoint.current; } 
	 EOF 
;

// Rule EntryPoint
ruleEntryPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='EntryPoint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEntryPointAccess().getEntryPointKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEntryPointAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEntryPointRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
))
;





// Entry rule entryRuleExitPoint
entryRuleExitPoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExitPointRule()); }
	 iv_ruleExitPoint=ruleExitPoint 
	 { $current=$iv_ruleExitPoint.current; } 
	 EOF 
;

// Rule ExitPoint
ruleExitPoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ExitPoint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExitPointAccess().getExitPointKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExitPointAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExitPointRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
))
;





// Entry rule entryRuleChoicePoint
entryRuleChoicePoint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChoicePointRule()); }
	 iv_ruleChoicePoint=ruleChoicePoint 
	 { $current=$iv_ruleChoicePoint.current; } 
	 EOF 
;

// Rule ChoicePoint
ruleChoicePoint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ChoicePoint' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getChoicePointAccess().getChoicePointKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getChoicePointAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getChoicePointRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getChoicePointAccess().getDocuDocumentationParserRuleCall_2_0()); 
	    }
		lv_docu_2_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChoicePointRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_2_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleTransitionBase
entryRuleTransitionBase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransitionBaseRule()); }
	 iv_ruleTransitionBase=ruleTransitionBase 
	 { $current=$iv_ruleTransitionBase.current; } 
	 EOF 
;

// Rule TransitionBase
ruleTransitionBase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTransitionBaseAccess().getTransitionParserRuleCall_0()); 
    }
    this_Transition_0=ruleTransition
    { 
        $current = $this_Transition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTransitionBaseAccess().getRefinedTransitionParserRuleCall_1()); 
    }
    this_RefinedTransition_1=ruleRefinedTransition
    { 
        $current = $this_RefinedTransition_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTransition
entryRuleTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransitionRule()); }
	 iv_ruleTransition=ruleTransition 
	 { $current=$iv_ruleTransition.current; } 
	 EOF 
;

// Rule Transition
ruleTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTransitionAccess().getInitialTransitionParserRuleCall_0()); 
    }
    this_InitialTransition_0=ruleInitialTransition
    { 
        $current = $this_InitialTransition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTransitionAccess().getNonInitialTransitionParserRuleCall_1()); 
    }
    this_NonInitialTransition_1=ruleNonInitialTransition
    { 
        $current = $this_NonInitialTransition_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNonInitialTransition
entryRuleNonInitialTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNonInitialTransitionRule()); }
	 iv_ruleNonInitialTransition=ruleNonInitialTransition 
	 { $current=$iv_ruleNonInitialTransition.current; } 
	 EOF 
;

// Rule NonInitialTransition
ruleNonInitialTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNonInitialTransitionAccess().getTransitionChainStartTransitionParserRuleCall_0()); 
    }
    this_TransitionChainStartTransition_0=ruleTransitionChainStartTransition
    { 
        $current = $this_TransitionChainStartTransition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNonInitialTransitionAccess().getContinuationTransitionParserRuleCall_1()); 
    }
    this_ContinuationTransition_1=ruleContinuationTransition
    { 
        $current = $this_ContinuationTransition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNonInitialTransitionAccess().getCPBranchTransitionParserRuleCall_2()); 
    }
    this_CPBranchTransition_2=ruleCPBranchTransition
    { 
        $current = $this_CPBranchTransition_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTransitionChainStartTransition
entryRuleTransitionChainStartTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransitionChainStartTransitionRule()); }
	 iv_ruleTransitionChainStartTransition=ruleTransitionChainStartTransition 
	 { $current=$iv_ruleTransitionChainStartTransition.current; } 
	 EOF 
;

// Rule TransitionChainStartTransition
ruleTransitionChainStartTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTransitionChainStartTransitionAccess().getTriggeredTransitionParserRuleCall_0()); 
    }
    this_TriggeredTransition_0=ruleTriggeredTransition
    { 
        $current = $this_TriggeredTransition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTransitionChainStartTransitionAccess().getGuardedTransitionParserRuleCall_1()); 
    }
    this_GuardedTransition_1=ruleGuardedTransition
    { 
        $current = $this_GuardedTransition_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInitialTransition
entryRuleInitialTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInitialTransitionRule()); }
	 iv_ruleInitialTransition=ruleInitialTransition 
	 { $current=$iv_ruleInitialTransition.current; } 
	 EOF 
;

// Rule InitialTransition
ruleInitialTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Transition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInitialTransitionAccess().getTransitionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getInitialTransitionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInitialTransitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)?	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInitialTransitionAccess().getColonKeyword_2());
    }
	otherlv_3='initial' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInitialTransitionAccess().getInitialKeyword_3());
    }
	otherlv_4='->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInitialTransitionAccess().getHyphenMinusGreaterThanSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInitialTransitionAccess().getToTransitionTerminalParserRuleCall_5_0()); 
	    }
		lv_to_5_0=ruleTransitionTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitialTransitionRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_5_0, 
        		"org.eclipse.etrice.core.fsm.FSM.TransitionTerminal");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInitialTransitionAccess().getDocuDocumentationParserRuleCall_6_0()); 
	    }
		lv_docu_6_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitialTransitionRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_6_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInitialTransitionAccess().getLeftCurlyBracketKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInitialTransitionAccess().getAnnotationsAnnotationParserRuleCall_7_1_0()); 
	    }
		lv_annotations_8_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitialTransitionRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_8_0, 
        		"org.eclipse.etrice.core.common.Base.Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_9='action' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getInitialTransitionAccess().getActionKeyword_7_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInitialTransitionAccess().getActionDetailCodeParserRuleCall_7_2_1_0()); 
	    }
		lv_action_10_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInitialTransitionRule());
	        }
       		set(
       			$current, 
       			"action",
        		lv_action_10_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getInitialTransitionAccess().getRightCurlyBracketKeyword_7_3());
    }
)?)
;





// Entry rule entryRuleContinuationTransition
entryRuleContinuationTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContinuationTransitionRule()); }
	 iv_ruleContinuationTransition=ruleContinuationTransition 
	 { $current=$iv_ruleContinuationTransition.current; } 
	 EOF 
;

// Rule ContinuationTransition
ruleContinuationTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Transition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getContinuationTransitionAccess().getTransitionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getContinuationTransitionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContinuationTransitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)?	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getContinuationTransitionAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContinuationTransitionAccess().getFromTransitionTerminalParserRuleCall_3_0()); 
	    }
		lv_from_3_0=ruleTransitionTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContinuationTransitionRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_3_0, 
        		"org.eclipse.etrice.core.fsm.FSM.TransitionTerminal");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getContinuationTransitionAccess().getHyphenMinusGreaterThanSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContinuationTransitionAccess().getToTransitionTerminalParserRuleCall_5_0()); 
	    }
		lv_to_5_0=ruleTransitionTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContinuationTransitionRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_5_0, 
        		"org.eclipse.etrice.core.fsm.FSM.TransitionTerminal");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getContinuationTransitionAccess().getDocuDocumentationParserRuleCall_6_0()); 
	    }
		lv_docu_6_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContinuationTransitionRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_6_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getContinuationTransitionAccess().getLeftCurlyBracketKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContinuationTransitionAccess().getAnnotationsAnnotationParserRuleCall_7_1_0()); 
	    }
		lv_annotations_8_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContinuationTransitionRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_8_0, 
        		"org.eclipse.etrice.core.common.Base.Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(	otherlv_9='action' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getContinuationTransitionAccess().getActionKeyword_7_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContinuationTransitionAccess().getActionDetailCodeParserRuleCall_7_2_1_0()); 
	    }
		lv_action_10_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContinuationTransitionRule());
	        }
       		set(
       			$current, 
       			"action",
        		lv_action_10_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getContinuationTransitionAccess().getRightCurlyBracketKeyword_7_3());
    }
)?)
;





// Entry rule entryRuleTriggeredTransition
entryRuleTriggeredTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTriggeredTransitionRule()); }
	 iv_ruleTriggeredTransition=ruleTriggeredTransition 
	 { $current=$iv_ruleTriggeredTransition.current; } 
	 EOF 
;

// Rule TriggeredTransition
ruleTriggeredTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Transition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTriggeredTransitionAccess().getTransitionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTriggeredTransitionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTriggeredTransitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)?	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTriggeredTransitionAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggeredTransitionAccess().getFromTransitionTerminalParserRuleCall_3_0()); 
	    }
		lv_from_3_0=ruleTransitionTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggeredTransitionRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_3_0, 
        		"org.eclipse.etrice.core.fsm.FSM.TransitionTerminal");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTriggeredTransitionAccess().getHyphenMinusGreaterThanSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggeredTransitionAccess().getToTransitionTerminalParserRuleCall_5_0()); 
	    }
		lv_to_5_0=ruleTransitionTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggeredTransitionRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_5_0, 
        		"org.eclipse.etrice.core.fsm.FSM.TransitionTerminal");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggeredTransitionAccess().getDocuDocumentationParserRuleCall_6_0()); 
	    }
		lv_docu_6_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggeredTransitionRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_6_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTriggeredTransitionAccess().getLeftCurlyBracketKeyword_7());
    }
	otherlv_8='triggers' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTriggeredTransitionAccess().getTriggersKeyword_8());
    }
	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTriggeredTransitionAccess().getLeftCurlyBracketKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggeredTransitionAccess().getAnnotationsAnnotationParserRuleCall_10_0()); 
	    }
		lv_annotations_10_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggeredTransitionRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_10_0, 
        		"org.eclipse.etrice.core.common.Base.Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggeredTransitionAccess().getTriggersTriggerParserRuleCall_11_0()); 
	    }
		lv_triggers_11_0=ruleTrigger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggeredTransitionRule());
	        }
       		add(
       			$current, 
       			"triggers",
        		lv_triggers_11_0, 
        		"org.eclipse.etrice.core.fsm.FSM.Trigger");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12='or' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getTriggeredTransitionAccess().getOrKeyword_12_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggeredTransitionAccess().getTriggersTriggerParserRuleCall_12_1_0()); 
	    }
		lv_triggers_13_0=ruleTrigger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggeredTransitionRule());
	        }
       		add(
       			$current, 
       			"triggers",
        		lv_triggers_13_0, 
        		"org.eclipse.etrice.core.fsm.FSM.Trigger");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getTriggeredTransitionAccess().getRightCurlyBracketKeyword_13());
    }
(	otherlv_15='action' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getTriggeredTransitionAccess().getActionKeyword_14_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggeredTransitionAccess().getActionDetailCodeParserRuleCall_14_1_0()); 
	    }
		lv_action_16_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggeredTransitionRule());
	        }
       		set(
       			$current, 
       			"action",
        		lv_action_16_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getTriggeredTransitionAccess().getRightCurlyBracketKeyword_15());
    }
)
;





// Entry rule entryRuleGuardedTransition
entryRuleGuardedTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGuardedTransitionRule()); }
	 iv_ruleGuardedTransition=ruleGuardedTransition 
	 { $current=$iv_ruleGuardedTransition.current; } 
	 EOF 
;

// Rule GuardedTransition
ruleGuardedTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Transition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGuardedTransitionAccess().getTransitionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getGuardedTransitionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGuardedTransitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)?	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGuardedTransitionAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGuardedTransitionAccess().getFromTransitionTerminalParserRuleCall_3_0()); 
	    }
		lv_from_3_0=ruleTransitionTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGuardedTransitionRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_3_0, 
        		"org.eclipse.etrice.core.fsm.FSM.TransitionTerminal");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getGuardedTransitionAccess().getHyphenMinusGreaterThanSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGuardedTransitionAccess().getToTransitionTerminalParserRuleCall_5_0()); 
	    }
		lv_to_5_0=ruleTransitionTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGuardedTransitionRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_5_0, 
        		"org.eclipse.etrice.core.fsm.FSM.TransitionTerminal");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getGuardedTransitionAccess().getDocuDocumentationParserRuleCall_6_0()); 
	    }
		lv_docu_6_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGuardedTransitionRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_6_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getGuardedTransitionAccess().getLeftCurlyBracketKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGuardedTransitionAccess().getAnnotationsAnnotationParserRuleCall_8_0()); 
	    }
		lv_annotations_8_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGuardedTransitionRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_8_0, 
        		"org.eclipse.etrice.core.common.Base.Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='guard' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getGuardedTransitionAccess().getGuardKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGuardedTransitionAccess().getGuardDetailCodeParserRuleCall_10_0()); 
	    }
		lv_guard_10_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGuardedTransitionRule());
	        }
       		set(
       			$current, 
       			"guard",
        		lv_guard_10_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11='action' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getGuardedTransitionAccess().getActionKeyword_11_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGuardedTransitionAccess().getActionDetailCodeParserRuleCall_11_1_0()); 
	    }
		lv_action_12_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGuardedTransitionRule());
	        }
       		set(
       			$current, 
       			"action",
        		lv_action_12_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getGuardedTransitionAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleCPBranchTransition
entryRuleCPBranchTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCPBranchTransitionRule()); }
	 iv_ruleCPBranchTransition=ruleCPBranchTransition 
	 { $current=$iv_ruleCPBranchTransition.current; } 
	 EOF 
;

// Rule CPBranchTransition
ruleCPBranchTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Transition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCPBranchTransitionAccess().getTransitionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCPBranchTransitionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCPBranchTransitionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)?	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCPBranchTransitionAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCPBranchTransitionAccess().getFromTransitionTerminalParserRuleCall_3_0()); 
	    }
		lv_from_3_0=ruleTransitionTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCPBranchTransitionRule());
	        }
       		set(
       			$current, 
       			"from",
        		lv_from_3_0, 
        		"org.eclipse.etrice.core.fsm.FSM.TransitionTerminal");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='->' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCPBranchTransitionAccess().getHyphenMinusGreaterThanSignKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCPBranchTransitionAccess().getToTransitionTerminalParserRuleCall_5_0()); 
	    }
		lv_to_5_0=ruleTransitionTerminal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCPBranchTransitionRule());
	        }
       		set(
       			$current, 
       			"to",
        		lv_to_5_0, 
        		"org.eclipse.etrice.core.fsm.FSM.TransitionTerminal");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCPBranchTransitionAccess().getDocuDocumentationParserRuleCall_6_0()); 
	    }
		lv_docu_6_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCPBranchTransitionRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_6_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCPBranchTransitionAccess().getLeftCurlyBracketKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCPBranchTransitionAccess().getAnnotationsAnnotationParserRuleCall_8_0()); 
	    }
		lv_annotations_8_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCPBranchTransitionRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_8_0, 
        		"org.eclipse.etrice.core.common.Base.Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='cond' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCPBranchTransitionAccess().getCondKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCPBranchTransitionAccess().getConditionDetailCodeParserRuleCall_10_0()); 
	    }
		lv_condition_10_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCPBranchTransitionRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_10_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11='action' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCPBranchTransitionAccess().getActionKeyword_11_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCPBranchTransitionAccess().getActionDetailCodeParserRuleCall_11_1_0()); 
	    }
		lv_action_12_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCPBranchTransitionRule());
	        }
       		set(
       			$current, 
       			"action",
        		lv_action_12_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getCPBranchTransitionAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRuleRefinedTransition
entryRuleRefinedTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRefinedTransitionRule()); }
	 iv_ruleRefinedTransition=ruleRefinedTransition 
	 { $current=$iv_ruleRefinedTransition.current; } 
	 EOF 
;

// Rule RefinedTransition
ruleRefinedTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='RefinedTransition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRefinedTransitionAccess().getRefinedTransitionKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRefinedTransitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getRefinedTransitionAccess().getTargetTransitionCrossReference_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRefinedTransitionAccess().getDocuDocumentationParserRuleCall_2_0()); 
	    }
		lv_docu_2_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefinedTransitionRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_2_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRefinedTransitionAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRefinedTransitionAccess().getAnnotationsAnnotationParserRuleCall_4_0()); 
	    }
		lv_annotations_4_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefinedTransitionRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_4_0, 
        		"org.eclipse.etrice.core.common.Base.Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='action' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getRefinedTransitionAccess().getActionKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRefinedTransitionAccess().getActionDetailCodeParserRuleCall_6_0()); 
	    }
		lv_action_6_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRefinedTransitionRule());
	        }
       		set(
       			$current, 
       			"action",
        		lv_action_6_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getRefinedTransitionAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleTransitionTerminal
entryRuleTransitionTerminal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTransitionTerminalRule()); }
	 iv_ruleTransitionTerminal=ruleTransitionTerminal 
	 { $current=$iv_ruleTransitionTerminal.current; } 
	 EOF 
;

// Rule TransitionTerminal
ruleTransitionTerminal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTransitionTerminalAccess().getStateTerminalParserRuleCall_0()); 
    }
    this_StateTerminal_0=ruleStateTerminal
    { 
        $current = $this_StateTerminal_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTransitionTerminalAccess().getTrPointTerminalParserRuleCall_1()); 
    }
    this_TrPointTerminal_1=ruleTrPointTerminal
    { 
        $current = $this_TrPointTerminal_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTransitionTerminalAccess().getSubStateTrPointTerminalParserRuleCall_2()); 
    }
    this_SubStateTrPointTerminal_2=ruleSubStateTrPointTerminal
    { 
        $current = $this_SubStateTrPointTerminal_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTransitionTerminalAccess().getChoicepointTerminalParserRuleCall_3()); 
    }
    this_ChoicepointTerminal_3=ruleChoicepointTerminal
    { 
        $current = $this_ChoicepointTerminal_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStateTerminal
entryRuleStateTerminal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateTerminalRule()); }
	 iv_ruleStateTerminal=ruleStateTerminal 
	 { $current=$iv_ruleStateTerminal.current; } 
	 EOF 
;

// Rule StateTerminal
ruleStateTerminal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateTerminalRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getStateTerminalAccess().getStateStateCrossReference_0()); 
	}

)
)
;





// Entry rule entryRuleTrPointTerminal
entryRuleTrPointTerminal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTrPointTerminalRule()); }
	 iv_ruleTrPointTerminal=ruleTrPointTerminal 
	 { $current=$iv_ruleTrPointTerminal.current; } 
	 EOF 
;

// Rule TrPointTerminal
ruleTrPointTerminal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='my' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTrPointTerminalAccess().getMyKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTrPointTerminalRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getTrPointTerminalAccess().getTrPointTrPointCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleSubStateTrPointTerminal
entryRuleSubStateTrPointTerminal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSubStateTrPointTerminalRule()); }
	 iv_ruleSubStateTrPointTerminal=ruleSubStateTrPointTerminal 
	 { $current=$iv_ruleSubStateTrPointTerminal.current; } 
	 EOF 
;

// Rule SubStateTrPointTerminal
ruleSubStateTrPointTerminal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubStateTrPointTerminalRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getSubStateTrPointTerminalAccess().getTrPointTrPointCrossReference_0_0()); 
	}

)
)	otherlv_1='of' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSubStateTrPointTerminalAccess().getOfKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSubStateTrPointTerminalRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getSubStateTrPointTerminalAccess().getStateStateCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleChoicepointTerminal
entryRuleChoicepointTerminal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChoicepointTerminalRule()); }
	 iv_ruleChoicepointTerminal=ruleChoicepointTerminal 
	 { $current=$iv_ruleChoicepointTerminal.current; } 
	 EOF 
;

// Rule ChoicepointTerminal
ruleChoicepointTerminal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='cp' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getChoicepointTerminalAccess().getCpKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getChoicepointTerminalRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getChoicepointTerminalAccess().getCpChoicePointCrossReference_1_0()); 
	}

)
))
;





// Entry rule entryRuleTrigger
entryRuleTrigger returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTriggerRule()); }
	 iv_ruleTrigger=ruleTrigger 
	 { $current=$iv_ruleTrigger.current; } 
	 EOF 
;

// Rule Trigger
ruleTrigger returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTriggerAccess().getLessThanSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggerAccess().getMsgFromIfPairsMessageFromIfParserRuleCall_1_0()); 
	    }
		lv_msgFromIfPairs_1_0=ruleMessageFromIf		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggerRule());
	        }
       		add(
       			$current, 
       			"msgFromIfPairs",
        		lv_msgFromIfPairs_1_0, 
        		"org.eclipse.etrice.core.fsm.FSM.MessageFromIf");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='|' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTriggerAccess().getVerticalLineKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggerAccess().getMsgFromIfPairsMessageFromIfParserRuleCall_2_1_0()); 
	    }
		lv_msgFromIfPairs_3_0=ruleMessageFromIf		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggerRule());
	        }
       		add(
       			$current, 
       			"msgFromIfPairs",
        		lv_msgFromIfPairs_3_0, 
        		"org.eclipse.etrice.core.fsm.FSM.MessageFromIf");
	        afterParserOrEnumRuleCall();
	    }

)
))*(
(
		{ 
	        newCompositeNode(grammarAccess.getTriggerAccess().getGuardGuardParserRuleCall_3_0()); 
	    }
		lv_guard_4_0=ruleGuard		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTriggerRule());
	        }
       		set(
       			$current, 
       			"guard",
        		lv_guard_4_0, 
        		"org.eclipse.etrice.core.fsm.FSM.Guard");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTriggerAccess().getGreaterThanSignKeyword_4());
    }
)
;





// Entry rule entryRuleMessageFromIf
entryRuleMessageFromIf returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMessageFromIfRule()); }
	 iv_ruleMessageFromIf=ruleMessageFromIf 
	 { $current=$iv_ruleMessageFromIf.current; } 
	 EOF 
;

// Rule MessageFromIf
ruleMessageFromIf returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMessageFromIfRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getMessageFromIfAccess().getMessageEObjectCrossReference_0_0()); 
	}

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMessageFromIfAccess().getColonKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMessageFromIfRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getMessageFromIfAccess().getFromAbstractInterfaceItemCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleGuard
entryRuleGuard returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGuardRule()); }
	 iv_ruleGuard=ruleGuard 
	 { $current=$iv_ruleGuard.current; } 
	 EOF 
;

// Rule Guard
ruleGuard returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='guard' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGuardAccess().getGuardKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGuardAccess().getGuardDetailCodeParserRuleCall_1_0()); 
	    }
		lv_guard_1_0=ruleDetailCode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGuardRule());
	        }
       		set(
       			$current, 
       			"guard",
        		lv_guard_1_0, 
        		"org.eclipse.etrice.core.fsm.FSM.DetailCode");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleProtocolSemantics
entryRuleProtocolSemantics returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProtocolSemanticsRule()); }
	 iv_ruleProtocolSemantics=ruleProtocolSemantics 
	 { $current=$iv_ruleProtocolSemantics.current; } 
	 EOF 
;

// Rule ProtocolSemantics
ruleProtocolSemantics returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getProtocolSemanticsAccess().getProtocolSemanticsAction_0(),
            $current);
    }
)	otherlv_1='semantics' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getProtocolSemanticsAccess().getSemanticsKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProtocolSemanticsAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProtocolSemanticsAccess().getRulesSemanticsRuleParserRuleCall_3_0()); 
	    }
		lv_rules_3_0=ruleSemanticsRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProtocolSemanticsRule());
	        }
       		add(
       			$current, 
       			"rules",
        		lv_rules_3_0, 
        		"org.eclipse.etrice.core.fsm.FSM.SemanticsRule");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getProtocolSemanticsAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSemanticsRule
entryRuleSemanticsRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSemanticsRuleRule()); }
	 iv_ruleSemanticsRule=ruleSemanticsRule 
	 { $current=$iv_ruleSemanticsRule.current; } 
	 EOF 
;

// Rule SemanticsRule
ruleSemanticsRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSemanticsRuleAccess().getInSemanticsRuleParserRuleCall_0()); 
    }
    this_InSemanticsRule_0=ruleInSemanticsRule
    { 
        $current = $this_InSemanticsRule_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSemanticsRuleAccess().getOutSemanticsRuleParserRuleCall_1()); 
    }
    this_OutSemanticsRule_1=ruleOutSemanticsRule
    { 
        $current = $this_OutSemanticsRule_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInSemanticsRule
entryRuleInSemanticsRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInSemanticsRuleRule()); }
	 iv_ruleInSemanticsRule=ruleInSemanticsRule 
	 { $current=$iv_ruleInSemanticsRule.current; } 
	 EOF 
;

// Rule InSemanticsRule
ruleInSemanticsRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='in' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInSemanticsRuleAccess().getInKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInSemanticsRuleAccess().getColonKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getInSemanticsRuleRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getInSemanticsRuleAccess().getMsgEObjectCrossReference_2_0()); 
	}

)
)(	otherlv_3='->' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInSemanticsRuleAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInSemanticsRuleAccess().getFollowUpsSemanticsRuleParserRuleCall_3_1_0_0()); 
	    }
		lv_followUps_4_0=ruleSemanticsRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInSemanticsRuleRule());
	        }
       		add(
       			$current, 
       			"followUps",
        		lv_followUps_4_0, 
        		"org.eclipse.etrice.core.fsm.FSM.SemanticsRule");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInSemanticsRuleAccess().getLeftParenthesisKeyword_3_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInSemanticsRuleAccess().getFollowUpsSemanticsRuleParserRuleCall_3_1_1_1_0()); 
	    }
		lv_followUps_6_0=ruleSemanticsRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInSemanticsRuleRule());
	        }
       		add(
       			$current, 
       			"followUps",
        		lv_followUps_6_0, 
        		"org.eclipse.etrice.core.fsm.FSM.SemanticsRule");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInSemanticsRuleAccess().getCommaKeyword_3_1_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInSemanticsRuleAccess().getFollowUpsSemanticsRuleParserRuleCall_3_1_1_2_1_0()); 
	    }
		lv_followUps_8_0=ruleSemanticsRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInSemanticsRuleRule());
	        }
       		add(
       			$current, 
       			"followUps",
        		lv_followUps_8_0, 
        		"org.eclipse.etrice.core.fsm.FSM.SemanticsRule");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getInSemanticsRuleAccess().getRightParenthesisKeyword_3_1_1_3());
    }
)))?)
;





// Entry rule entryRuleOutSemanticsRule
entryRuleOutSemanticsRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOutSemanticsRuleRule()); }
	 iv_ruleOutSemanticsRule=ruleOutSemanticsRule 
	 { $current=$iv_ruleOutSemanticsRule.current; } 
	 EOF 
;

// Rule OutSemanticsRule
ruleOutSemanticsRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='out' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getOutSemanticsRuleAccess().getOutKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOutSemanticsRuleAccess().getColonKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOutSemanticsRuleRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getOutSemanticsRuleAccess().getMsgEObjectCrossReference_2_0()); 
	}

)
)(	otherlv_3='->' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getOutSemanticsRuleAccess().getHyphenMinusGreaterThanSignKeyword_3_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getOutSemanticsRuleAccess().getFollowUpsSemanticsRuleParserRuleCall_3_1_0_0()); 
	    }
		lv_followUps_4_0=ruleSemanticsRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutSemanticsRuleRule());
	        }
       		add(
       			$current, 
       			"followUps",
        		lv_followUps_4_0, 
        		"org.eclipse.etrice.core.fsm.FSM.SemanticsRule");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOutSemanticsRuleAccess().getLeftParenthesisKeyword_3_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutSemanticsRuleAccess().getFollowUpsSemanticsRuleParserRuleCall_3_1_1_1_0()); 
	    }
		lv_followUps_6_0=ruleSemanticsRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutSemanticsRuleRule());
	        }
       		add(
       			$current, 
       			"followUps",
        		lv_followUps_6_0, 
        		"org.eclipse.etrice.core.fsm.FSM.SemanticsRule");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getOutSemanticsRuleAccess().getCommaKeyword_3_1_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOutSemanticsRuleAccess().getFollowUpsSemanticsRuleParserRuleCall_3_1_1_2_1_0()); 
	    }
		lv_followUps_8_0=ruleSemanticsRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOutSemanticsRuleRule());
	        }
       		add(
       			$current, 
       			"followUps",
        		lv_followUps_8_0, 
        		"org.eclipse.etrice.core.fsm.FSM.SemanticsRule");
	        afterParserOrEnumRuleCall();
	    }

)
))+	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getOutSemanticsRuleAccess().getRightParenthesisKeyword_3_1_1_3());
    }
)))?)
;





// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	 iv_ruleAnnotation=ruleAnnotation 
	 { $current=$iv_ruleAnnotation.current; } 
	 EOF 
;

// Rule Annotation
ruleAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAccess().getTypeAnnotationTypeCrossReference_1_0()); 
	    }
		ruleFQN		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAccess().getAttributesKeyValueParserRuleCall_2_1_0()); 
	    }
		lv_attributes_3_0=ruleKeyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_3_0, 
        		"org.eclipse.etrice.core.common.Base.KeyValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAnnotationAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAccess().getAttributesKeyValueParserRuleCall_2_2_1_0()); 
	    }
		lv_attributes_5_0=ruleKeyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_5_0, 
        		"org.eclipse.etrice.core.common.Base.KeyValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_2_3());
    }
)?)
;





// Entry rule entryRuleKeyValue
entryRuleKeyValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKeyValueRule()); }
	 iv_ruleKeyValue=ruleKeyValue 
	 { $current=$iv_ruleKeyValue.current; } 
	 EOF 
;

// Rule KeyValue
ruleKeyValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_key_0_0=RULE_ID
		{
			newLeafNode(lv_key_0_0, grammarAccess.getKeyValueAccess().getKeyIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKeyValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getKeyValueAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getKeyValueAccess().getValueLiteralParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getKeyValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"org.eclipse.etrice.core.common.Base.Literal");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAnnotationType
entryRuleAnnotationType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationTypeRule()); }
	 iv_ruleAnnotationType=ruleAnnotationType 
	 { $current=$iv_ruleAnnotationType.current; } 
	 EOF 
;

// Rule AnnotationType
ruleAnnotationType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='AnnotationType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAnnotationTypeAccess().getAnnotationTypeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAnnotationTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationTypeAccess().getDocuDocumentationParserRuleCall_2_0()); 
	    }
		lv_docu_2_0=ruleDocumentation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationTypeRule());
	        }
       		set(
       			$current, 
       			"docu",
        		lv_docu_2_0, 
        		"org.eclipse.etrice.core.common.Base.Documentation");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAnnotationTypeAccess().getLeftCurlyBracketKeyword_3());
    }
	otherlv_4='target' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAnnotationTypeAccess().getTargetKeyword_4());
    }
	otherlv_5='=' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAnnotationTypeAccess().getEqualsSignKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationTypeAccess().getTargetsAnnotationTargetTypeParserRuleCall_6_0_0()); 
	    }
		lv_targets_6_0=ruleAnnotationTargetType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationTypeRule());
	        }
       		add(
       			$current, 
       			"targets",
        		lv_targets_6_0, 
        		"org.eclipse.etrice.core.Room.AnnotationTargetType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAnnotationTypeAccess().getLeftCurlyBracketKeyword_6_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationTypeAccess().getTargetsAnnotationTargetTypeParserRuleCall_6_1_1_0()); 
	    }
		lv_targets_8_0=ruleAnnotationTargetType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationTypeRule());
	        }
       		add(
       			$current, 
       			"targets",
        		lv_targets_8_0, 
        		"org.eclipse.etrice.core.Room.AnnotationTargetType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAnnotationTypeAccess().getCommaKeyword_6_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationTypeAccess().getTargetsAnnotationTargetTypeParserRuleCall_6_1_2_1_0()); 
	    }
		lv_targets_10_0=ruleAnnotationTargetType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationTypeRule());
	        }
       		add(
       			$current, 
       			"targets",
        		lv_targets_10_0, 
        		"org.eclipse.etrice.core.Room.AnnotationTargetType");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getAnnotationTypeAccess().getRightCurlyBracketKeyword_6_1_3());
    }
))(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationTypeAccess().getAttributesAnnotationAttributeParserRuleCall_7_0()); 
	    }
		lv_attributes_12_0=ruleAnnotationAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationTypeRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_12_0, 
        		"org.eclipse.etrice.core.common.Base.AnnotationAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getAnnotationTypeAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleAnnotationAttribute
entryRuleAnnotationAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationAttributeRule()); }
	 iv_ruleAnnotationAttribute=ruleAnnotationAttribute 
	 { $current=$iv_ruleAnnotationAttribute.current; } 
	 EOF 
;

// Rule AnnotationAttribute
ruleAnnotationAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAnnotationAttributeAccess().getSimpleAnnotationAttributeParserRuleCall_0()); 
    }
    this_SimpleAnnotationAttribute_0=ruleSimpleAnnotationAttribute
    { 
        $current = $this_SimpleAnnotationAttribute_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAnnotationAttributeAccess().getEnumAnnotationAttributeParserRuleCall_1()); 
    }
    this_EnumAnnotationAttribute_1=ruleEnumAnnotationAttribute
    { 
        $current = $this_EnumAnnotationAttribute_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSimpleAnnotationAttribute
entryRuleSimpleAnnotationAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleAnnotationAttributeRule()); }
	 iv_ruleSimpleAnnotationAttribute=ruleSimpleAnnotationAttribute 
	 { $current=$iv_ruleSimpleAnnotationAttribute.current; } 
	 EOF 
;

// Rule SimpleAnnotationAttribute
ruleSimpleAnnotationAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_optional_0_0=	'optional' 
    {
        newLeafNode(lv_optional_0_0, grammarAccess.getSimpleAnnotationAttributeAccess().getOptionalOptionalKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleAnnotationAttributeRule());
	        }
       		setWithLastConsumed($current, "optional", true, "optional");
	    }

)
)
    |	otherlv_1='mandatory' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSimpleAnnotationAttributeAccess().getMandatoryKeyword_0_1());
    }
)	otherlv_2='attribute' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSimpleAnnotationAttributeAccess().getAttributeKeyword_1());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getSimpleAnnotationAttributeAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleAnnotationAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSimpleAnnotationAttributeAccess().getColonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleAnnotationAttributeAccess().getTypeLiteralTypeEnumRuleCall_4_0()); 
	    }
		lv_type_5_0=ruleLiteralType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleAnnotationAttributeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_5_0, 
        		"org.eclipse.etrice.core.common.Base.LiteralType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEnumAnnotationAttribute
entryRuleEnumAnnotationAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumAnnotationAttributeRule()); }
	 iv_ruleEnumAnnotationAttribute=ruleEnumAnnotationAttribute 
	 { $current=$iv_ruleEnumAnnotationAttribute.current; } 
	 EOF 
;

// Rule EnumAnnotationAttribute
ruleEnumAnnotationAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_optional_0_0=	'optional' 
    {
        newLeafNode(lv_optional_0_0, grammarAccess.getEnumAnnotationAttributeAccess().getOptionalOptionalKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumAnnotationAttributeRule());
	        }
       		setWithLastConsumed($current, "optional", true, "optional");
	    }

)
)
    |	otherlv_1='mandatory' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumAnnotationAttributeAccess().getMandatoryKeyword_0_1());
    }
)	otherlv_2='attribute' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumAnnotationAttributeAccess().getAttributeKeyword_1());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getEnumAnnotationAttributeAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumAnnotationAttributeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"org.eclipse.xtext.common.Terminals.ID");
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumAnnotationAttributeAccess().getColonKeyword_3());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEnumAnnotationAttributeAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		lv_values_6_0=RULE_STRING
		{
			newLeafNode(lv_values_6_0, grammarAccess.getEnumAnnotationAttributeAccess().getValuesSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumAnnotationAttributeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_6_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEnumAnnotationAttributeAccess().getCommaKeyword_6_0());
    }
(
(
		lv_values_8_0=RULE_STRING
		{
			newLeafNode(lv_values_8_0, grammarAccess.getEnumAnnotationAttributeAccess().getValuesSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumAnnotationAttributeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_8_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEnumAnnotationAttributeAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	 iv_ruleImport=ruleImport 
	 { $current=$iv_ruleImport.current; } 
	 EOF 
;

// Rule Import
ruleImport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
    }
(((
(
		{ 
	        newCompositeNode(grammarAccess.getImportAccess().getImportedNamespaceImportedFQNParserRuleCall_1_0_0_0()); 
	    }
		lv_importedNamespace_1_0=ruleImportedFQN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getImportRule());
	        }
       		set(
       			$current, 
       			"importedNamespace",
        		lv_importedNamespace_1_0, 
        		"org.eclipse.etrice.core.common.Base.ImportedFQN");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='from' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getImportAccess().getFromKeyword_1_0_1_0());
    }
(
(
		lv_importURI_3_0=RULE_STRING
		{
			newLeafNode(lv_importURI_3_0, grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"importURI",
        		lv_importURI_3_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))?)
    |(	otherlv_4='model' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getImportAccess().getModelKeyword_1_1_0());
    }
(
(
		lv_importURI_5_0=RULE_STRING
		{
			newLeafNode(lv_importURI_5_0, grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImportRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"importURI",
        		lv_importURI_5_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))))
;





// Entry rule entryRuleImportedFQN
entryRuleImportedFQN returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportedFQNRule()); } 
	 iv_ruleImportedFQN=ruleImportedFQN 
	 { $current=$iv_ruleImportedFQN.current.getText(); }  
	 EOF 
;

// Rule ImportedFQN
ruleImportedFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getImportedFQNAccess().getFQNParserRuleCall_0()); 
    }
    this_FQN_0=ruleFQN    {
		$current.merge(this_FQN_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }
(
	kw='.*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getImportedFQNAccess().getFullStopAsteriskKeyword_1()); 
    }
)?)
    ;





// Entry rule entryRuleDocumentation
entryRuleDocumentation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDocumentationRule()); }
	 iv_ruleDocumentation=ruleDocumentation 
	 { $current=$iv_ruleDocumentation.current; } 
	 EOF 
;

// Rule Documentation
ruleDocumentation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDocumentationAccess().getDocumentationAction_0(),
            $current);
    }
)	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDocumentationAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		lv_lines_2_0=RULE_STRING
		{
			newLeafNode(lv_lines_2_0, grammarAccess.getDocumentationAccess().getLinesSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDocumentationRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"lines",
        		lv_lines_2_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
)*	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDocumentationAccess().getRightSquareBracketKeyword_3());
    }
)
;









// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current; } 
	 EOF 
;

// Rule Literal
ruleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_0()); 
    }
    this_BooleanLiteral_0=ruleBooleanLiteral
    { 
        $current = $this_BooleanLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_1()); 
    }
    this_NumberLiteral_1=ruleNumberLiteral
    { 
        $current = $this_NumberLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2()); 
    }
    this_StringLiteral_2=ruleStringLiteral
    { 
        $current = $this_StringLiteral_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanLiteralRule()); }
	 iv_ruleBooleanLiteral=ruleBooleanLiteral 
	 { $current=$iv_ruleBooleanLiteral.current; } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0(),
            $current);
    }
)(	otherlv_1='false' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_0());
    }

    |(
(
		lv_isTrue_2_0=	'true' 
    {
        newLeafNode(lv_isTrue_2_0, grammarAccess.getBooleanLiteralAccess().getIsTrueTrueKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanLiteralRule());
	        }
       		setWithLastConsumed($current, "isTrue", true, "true");
	    }

)
)))
;





// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberLiteralRule()); }
	 iv_ruleNumberLiteral=ruleNumberLiteral 
	 { $current=$iv_ruleNumberLiteral.current; } 
	 EOF 
;

// Rule NumberLiteral
ruleNumberLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNumberLiteralAccess().getIntLiteralParserRuleCall_0()); 
    }
    this_IntLiteral_0=ruleIntLiteral
    { 
        $current = $this_IntLiteral_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNumberLiteralAccess().getRealLiteralParserRuleCall_1()); 
    }
    this_RealLiteral_1=ruleRealLiteral
    { 
        $current = $this_RealLiteral_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleRealLiteral
entryRuleRealLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealLiteralRule()); }
	 iv_ruleRealLiteral=ruleRealLiteral 
	 { $current=$iv_ruleRealLiteral.current; } 
	 EOF 
;

// Rule RealLiteral
ruleRealLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getRealLiteralAccess().getRealLiteralAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRealLiteralAccess().getValueRealParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleReal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"org.eclipse.etrice.core.common.Base.Real");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIntLiteral
entryRuleIntLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntLiteralRule()); }
	 iv_ruleIntLiteral=ruleIntLiteral 
	 { $current=$iv_ruleIntLiteral.current; } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIntLiteralAccess().getIntLiteralAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIntLiteralAccess().getValueIntegerParserRuleCall_1_0()); 
	    }
		lv_value_1_0=ruleInteger		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntLiteralRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"org.eclipse.etrice.core.common.Base.Integer");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	 iv_ruleStringLiteral=ruleStringLiteral 
	 { $current=$iv_ruleStringLiteral.current; } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStringLiteralAccess().getStringLiteralAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"org.eclipse.xtext.common.Terminals.STRING");
	    }

)
))
;





// Entry rule entryRuleInteger
entryRuleInteger returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerRule()); } 
	 iv_ruleInteger=ruleInteger 
	 { $current=$iv_ruleInteger.current.getText(); }  
	 EOF 
;

// Rule Integer
ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIntegerAccess().getPlusSignKeyword_0_0_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0_0_1()); 
    }
)?    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_0_1()); 
    }
)
    |    this_HEX_3=RULE_HEX    {
		$current.merge(this_HEX_3);
    }

    { 
    newLeafNode(this_HEX_3, grammarAccess.getIntegerAccess().getHEXTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleReal
entryRuleReal returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRealRule()); } 
	 iv_ruleReal=ruleReal 
	 { $current=$iv_ruleReal.current.getText(); }  
	 EOF 
;

// Rule Real
ruleReal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getRealAccess().getDecimalParserRuleCall_0()); 
    }
    this_Decimal_0=ruleDecimal    {
		$current.merge(this_Decimal_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getRealAccess().getDecimalExpParserRuleCall_1()); 
    }
    this_DecimalExp_1=ruleDecimalExp    {
		$current.merge(this_DecimalExp_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRuleDecimal
entryRuleDecimal returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getDecimalRule()); } 
	 iv_ruleDecimal=ruleDecimal 
	 { $current=$iv_ruleDecimal.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Decimal
ruleDecimal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
((
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalAccess().getPlusSignKeyword_0_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalAccess().getHyphenMinusKeyword_0_1()); 
    }
)?    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getDecimalAccess().getINTTerminalRuleCall_1()); 
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalAccess().getFullStopKeyword_2()); 
    }
    this_INT_4=RULE_INT    {
		$current.merge(this_INT_4);
    }

    { 
    newLeafNode(this_INT_4, grammarAccess.getDecimalAccess().getINTTerminalRuleCall_3()); 
    }
)
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleDecimalExp
entryRuleDecimalExp returns [String current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
	}
	:
	{ newCompositeNode(grammarAccess.getDecimalExpRule()); } 
	 iv_ruleDecimalExp=ruleDecimalExp 
	 { $current=$iv_ruleDecimalExp.current.getText(); }  
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule DecimalExp
ruleDecimalExp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
    }
    @after { leaveRule(); }:
((
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalExpAccess().getPlusSignKeyword_0_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalExpAccess().getHyphenMinusKeyword_0_1()); 
    }
)?    this_INT_2=RULE_INT    {
		$current.merge(this_INT_2);
    }

    { 
    newLeafNode(this_INT_2, grammarAccess.getDecimalExpAccess().getINTTerminalRuleCall_1()); 
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalExpAccess().getFullStopKeyword_2()); 
    }
    this_INT_4=RULE_INT    {
		$current.merge(this_INT_4);
    }

    { 
    newLeafNode(this_INT_4, grammarAccess.getDecimalExpAccess().getINTTerminalRuleCall_3()); 
    }
(
	kw='e' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalExpAccess().getEKeyword_4_0()); 
    }

    |
	kw='E' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalExpAccess().getEKeyword_4_1()); 
    }
)(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalExpAccess().getPlusSignKeyword_5_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDecimalExpAccess().getHyphenMinusKeyword_5_1()); 
    }
)?    this_INT_9=RULE_INT    {
		$current.merge(this_INT_9);
    }

    { 
    newLeafNode(this_INT_9, grammarAccess.getDecimalExpAccess().getINTTerminalRuleCall_6()); 
    }
)
    ;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleFQN
entryRuleFQN returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFQNRule()); } 
	 iv_ruleFQN=ruleFQN 
	 { $current=$iv_ruleFQN.current.getText(); }  
	 EOF 
;

// Rule FQN
ruleFQN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); 
    }
)*)
    ;





// Rule CommunicationType
ruleCommunicationType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='eventdriven' 
	{
        $current = grammarAccess.getCommunicationTypeAccess().getEVENT_DRIVENEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getCommunicationTypeAccess().getEVENT_DRIVENEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='datadriven' 
	{
        $current = grammarAccess.getCommunicationTypeAccess().getDATA_DRIVENEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getCommunicationTypeAccess().getDATA_DRIVENEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='sync' 
	{
        $current = grammarAccess.getCommunicationTypeAccess().getSYNCHRONOUSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getCommunicationTypeAccess().getSYNCHRONOUSEnumLiteralDeclaration_2()); 
    }
));



// Rule ReferenceType
ruleReferenceType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='fixed' 
	{
        $current = grammarAccess.getReferenceTypeAccess().getFIXEDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getReferenceTypeAccess().getFIXEDEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='optional' 
	{
        $current = grammarAccess.getReferenceTypeAccess().getOPTIONALEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getReferenceTypeAccess().getOPTIONALEnumLiteralDeclaration_1()); 
    }
));





// Rule ComponentCommunicationType
ruleComponentCommunicationType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='eventdriven' 
	{
        $current = grammarAccess.getComponentCommunicationTypeAccess().getEVENT_DRIVENEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getComponentCommunicationTypeAccess().getEVENT_DRIVENEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='datadriven' 
	{
        $current = grammarAccess.getComponentCommunicationTypeAccess().getDATA_DRIVENEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getComponentCommunicationTypeAccess().getDATA_DRIVENEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='async' 
	{
        $current = grammarAccess.getComponentCommunicationTypeAccess().getASYNCHRONOUSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getComponentCommunicationTypeAccess().getASYNCHRONOUSEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='sync' 
	{
        $current = grammarAccess.getComponentCommunicationTypeAccess().getSYNCHRONOUSEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getComponentCommunicationTypeAccess().getSYNCHRONOUSEnumLiteralDeclaration_3()); 
    }
));



// Rule LiteralType
ruleLiteralType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='ptBoolean' 
	{
        $current = grammarAccess.getLiteralTypeAccess().getBOOLEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getLiteralTypeAccess().getBOOLEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='ptInteger' 
	{
        $current = grammarAccess.getLiteralTypeAccess().getINTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getLiteralTypeAccess().getINTEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='ptReal' 
	{
        $current = grammarAccess.getLiteralTypeAccess().getREALEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getLiteralTypeAccess().getREALEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='ptCharacter' 
	{
        $current = grammarAccess.getLiteralTypeAccess().getCHAREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getLiteralTypeAccess().getCHAREnumLiteralDeclaration_3()); 
    }
));



RULE_HEX : ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F')+;

RULE_CC_STRING : '\'\'\'' ( options {greedy=false;} : . )*'\'\'\'';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


